{
  "version": 3,
  "sources": ["../../svelte-gantt/svelte/core/store.js", "../../svelte-gantt/svelte/utils/dom.js", "../../svelte-gantt/svelte/utils/utils.js", "../../svelte-gantt/svelte/entities/Task.svelte", "../../svelte-gantt/svelte/entities/Row.svelte", "../../svelte-gantt/svelte/entities/TimeRange.svelte", "../../svelte-gantt/svelte/core/constants.js", "../../svelte-gantt/svelte/core/drag/draggable.js", "../../svelte-gantt/svelte/core/drag/DraggableGroup.svelte", "../../svelte-gantt/svelte/core/drag/Draggable.svelte", "../../svelte-gantt/svelte/entities/TimeRangeHeader.svelte", "../../svelte-gantt/svelte/utils/date.js", "../../svelte-gantt/svelte/column/ColumnHeaderRow.svelte", "../../svelte-gantt/svelte/column/ColumnHeader.svelte", "../../svelte-gantt/svelte/column/canvas.js", "../../svelte-gantt/svelte/column/Columns.svelte", "../../svelte-gantt/svelte/ui/Resizer.svelte", "../../svelte-gantt/svelte/core/api.js", "../../svelte-gantt/svelte/core/task.js", "../../svelte-gantt/svelte/core/row.js", "../../svelte-gantt/svelte/core/timeRange.js", "../../svelte-gantt/svelte/core/selectionManager.js", "../../svelte-gantt/svelte/core/column.js", "../../svelte-gantt/svelte/core/events.js", "../../svelte-gantt/svelte/utils/defaultDateAdapter.js", "../../svelte-gantt/svelte/core/layouts.js", "../../svelte-gantt/svelte/modules/create-tasks.js", "../../svelte-gantt/svelte/Gantt.svelte", "../../svelte-gantt/svelte/modules/table/TableTreeCell.svelte", "../../svelte-gantt/svelte/modules/table/TableRow.svelte", "../../svelte-gantt/svelte/modules/table/Table.svelte", "../../svelte-gantt/svelte/modules/dependencies/Dependency.svelte", "../../svelte-gantt/svelte/modules/dependencies/GanttDependencies.svelte", "../../svelte-gantt/svelte/modules/external/external.js", "../../svelte-gantt/svelte/utils/momentDateAdapter.js"],
  "sourcesContent": ["import { writable, derived } from 'svelte/store';\nfunction createEntityStore() {\n    const { subscribe, set, update } = writable({ ids: [], entities: {} });\n    return {\n        set,\n        _update: update,\n        subscribe,\n        add: (item) => update(({ ids, entities }) => ({\n            ids: [...ids, item.model.id],\n            entities: {\n                ...entities,\n                [item.model.id]: item\n            }\n        })),\n        delete: (id) => update(state => {\n            const { [id]: _, ...entities } = state.entities;\n            return {\n                ids: state.ids.filter(i => i !== id),\n                entities\n            };\n        }),\n        deleteAll: (ids) => update(state => {\n            const entities = { ...state.entities };\n            const idSet = new Set(ids);\n            for (let i = 0; i < state.ids.length; i++) {\n                if (idSet.has(state.ids[i])) {\n                    delete entities[state.ids[i]];\n                }\n            }\n            return {\n                ids: state.ids.filter(i => !idSet.has(i)),\n                entities\n            };\n        }),\n        update: (item) => update(({ ids, entities }) => ({\n            ids,\n            entities: {\n                ...entities,\n                [item.model.id]: item\n            }\n        })),\n        upsert: (item) => update(({ ids, entities }) => {\n            const hasIndex = ids.indexOf(item.model.id) !== -1;\n            return {\n                ids: hasIndex ? ids : [...ids, item.model.id],\n                entities: {\n                    ...entities,\n                    [item.model.id]: item\n                }\n            };\n        }),\n        upsertAll: (items) => update(state => {\n            const entities = { ...state.entities };\n            const ids = [...state.ids];\n            for (let i = 0; i < items.length; i++) {\n                if (ids.indexOf(items[i].model.id) === -1) {\n                    ids.push(items[i].model.id);\n                }\n                entities[items[i].model.id] = items[i];\n            }\n            return {\n                ids,\n                entities\n            };\n        }),\n        addAll: (items) => {\n            const ids = [];\n            const entities = {};\n            for (let i = 0; i < items.length; i++) {\n                ids.push(items[i].model.id);\n                entities[items[i].model.id] = items[i];\n            }\n            set({ ids, entities });\n        },\n        refresh: () => update(store => ({ ...store }))\n    };\n}\nexport function all(store) {\n    return derived(store, ({ ids, entities }) => {\n        const results = [];\n        for (let i = 0; i < ids.length; i++) {\n            results.push(entities[ids[i]]);\n        }\n        return results;\n    });\n}\nexport function where(store, filterFn) {\n    return derived(store, ({ ids, entities }) => {\n        const results = [];\n        for (let i = 0; i < ids.length; i++) {\n            if (filterFn(entities[ids[i]])) {\n                results.push(entities[ids[i]]);\n            }\n        }\n        return results;\n    });\n}\nexport function createDataStore() {\n    const taskStore = createEntityStore();\n    const rowStore = createEntityStore();\n    const timeRangeStore = createEntityStore();\n    const allTasks = all(taskStore);\n    const allRows = all(rowStore);\n    const allTimeRanges = all(timeRangeStore);\n    const rowTaskCache = derived(allTasks, $allTasks => {\n        const cache = {};\n        for (let i = 0; i < $allTasks.length; i++) {\n            const task = $allTasks[i];\n            if (!cache[task.model.resourceId]) {\n                cache[task.model.resourceId] = [];\n            }\n            cache[task.model.resourceId].push(task.model.id);\n        }\n        return cache;\n    });\n    return {\n        taskStore,\n        rowStore,\n        timeRangeStore,\n        allTasks,\n        allRows,\n        allTimeRanges,\n        rowTaskCache\n    };\n}\n", "export function isLeftClick(event) {\n    return event.which === 1;\n}\n/**\n * Gets mouse position within an element\n * @param node\n * @param event\n */\nexport function getRelativePos(node, event) {\n    const rect = node.getBoundingClientRect();\n    const x = event.clientX - rect.left; //x position within the element.\n    const y = event.clientY - rect.top; //y position within the element.\n    return {\n        x: x,\n        y: y\n    };\n}\nexport function getRelativePosition(node, event) {\n    const rect = node.getBoundingClientRect();\n    const x = event.clientX - rect.left; //x position within the element.\n    const y = event.clientY - rect.top; //y position within the element.\n    return [x, y];\n}\n/**\n * Adds an event listener that triggers once.\n * @param target\n * @param type\n * @param listener\n * @param addOptions\n * @param removeOptions\n */\nexport function addEventListenerOnce(target, type, listener, addOptions, removeOptions) {\n    target.addEventListener(type, function fn() {\n        target.removeEventListener(type, fn, removeOptions);\n        listener.apply(this, arguments, addOptions);\n    });\n}\n/**\n * Sets the cursor on an element. Globally by default.\n * @param cursor\n * @param node\n */\nexport function setCursor(cursor, node = document.body) {\n    node.style.cursor = cursor;\n}\nexport function sortFn(prop) {\n    return function (a, b) {\n        if (prop(a) < prop(b)) {\n            return -1;\n        }\n        else if (prop(a) > prop(b)) {\n            return 1;\n        }\n        return 0;\n    };\n}\nexport function normalizeClassAttr(classes) {\n    if (!classes) {\n        return '';\n    }\n    if (typeof classes === 'string') {\n        return classes;\n    }\n    if (Array.isArray(classes)) {\n        return classes.join(' ');\n    }\n    return '';\n}\n/* eslint-disable */\nexport function debounce(func, wait, immediate = false) {\n    let timeout;\n    return function () {\n        const context = this, args = arguments;\n        const later = function () {\n            timeout = null;\n            if (!immediate)\n                func.apply(context, args);\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow)\n            func.apply(context, args);\n    };\n}\nexport function throttle(func, limit) {\n    let wait = false;\n    return function () {\n        if (!wait) {\n            func.apply(null, arguments);\n            wait = true;\n            setTimeout(function () {\n                wait = false;\n            }, limit);\n        }\n    };\n}\n/** How much pixels near the bounds user has to drag to start scrolling */\nconst DRAGGING_TO_SCROLL_TRESHOLD = 40;\n/** How much pixels does the view scroll when dragging */\nconst DRAGGING_TO_SCROLL_DELTA = 40;\nfunction outOfBounds(event, rect) {\n    return {\n        left: event.clientX - rect.left < 0 + DRAGGING_TO_SCROLL_TRESHOLD,\n        top: event.clientY - rect.top < 0 + DRAGGING_TO_SCROLL_TRESHOLD,\n        right: event.clientX - rect.left > rect.width - DRAGGING_TO_SCROLL_TRESHOLD,\n        bottom: event.clientY - rect.top > rect.height - DRAGGING_TO_SCROLL_TRESHOLD\n    };\n}\nexport const scrollIfOutOfBounds = throttle((event, scrollable) => {\n    // throttle the following\n    const mainContainerRect = scrollable.getBoundingClientRect();\n    const bounds = outOfBounds(event, mainContainerRect);\n    if (bounds.left || bounds.right) {\n        // scroll left\n        scrollable.scrollTo({\n            left: scrollable.scrollLeft + (bounds.left ? -DRAGGING_TO_SCROLL_DELTA : DRAGGING_TO_SCROLL_DELTA),\n            behavior: 'smooth'\n        });\n    }\n    if (bounds.top || bounds.bottom) {\n        // scroll top\n        scrollable.scrollTo({\n            top: scrollable.scrollTop + (bounds.top ? -DRAGGING_TO_SCROLL_DELTA : DRAGGING_TO_SCROLL_DELTA),\n            behavior: 'smooth'\n        });\n    }\n}, 250);\nexport function getRowAtPoint(event) {\n    const elements = document.elementsFromPoint(event.clientX, event.clientY);\n    const rowElement = elements.find(element => !!element.getAttribute('data-row-id'));\n    if (rowElement !== undefined) {\n        const rowId = rowElement.getAttribute('data-row-id');\n        return rowId;\n    }\n    return null;\n}\nexport function whenEnterPress(callback) {\n    return (e) => {\n        if (e.key === 'Enter') {\n            callback(e);\n        }\n    };\n}\n", "export function createUtils(params) {\n    return {\n        /**\n         * Returns position of date on a line if from and to represent length of width\n         * @param {*} date\n         */\n        getPositionByDate(date) {\n            return getPositionByDate(date, params.from, params.to, params.width);\n        },\n        getDateByPosition(x) {\n            return getDateByPosition(x, params.from, params.to, params.width);\n        },\n        roundTo(date) {\n            if (params.dateAdapter) {\n                return params.dateAdapter.roundTo(date, params.magnetUnit, params.magnetOffset);\n            }\n            // this does not consider the timezone, rounds only to the UTC time\n            // let value = Math.round((date - 7200000) / params.magnetDuration) * params.magnetDuration;\n            // cases where rounding to day or timezone offset is not rounded, this won't work\n            return null;\n        }\n    };\n}\nexport function getPositionByDate(date, from, to, width) {\n    if (!date) {\n        return undefined;\n    }\n    const durationTo = date - from;\n    const durationToEnd = to - from;\n    return (durationTo / durationToEnd) * width;\n}\nexport function getDateByPosition(x, from, to, width) {\n    const durationTo = (x / width) * (to - from);\n    const dateAtPosition = from + durationTo;\n    return dateAtPosition;\n}\n// Returns the object on the left and right in an array using the given cmp function.\n// The compare function defined which property of the value to compare (e.g.: c => c.left)\nexport function getIndicesOnly(input, value, comparer, strict) {\n    let lo = -1;\n    let hi = input.length;\n    while (hi - lo > 1) {\n        const mid = Math.floor((lo + hi) / 2);\n        if (strict ? comparer(input[mid]) < value : comparer(input[mid]) <= value) {\n            lo = mid;\n        }\n        else {\n            hi = mid;\n        }\n    }\n    if (!strict && input[lo] !== undefined && comparer(input[lo]) === value) {\n        hi = lo;\n    }\n    return [lo, hi];\n}\nexport function get(input, value, comparer, strict) {\n    const res = getIndicesOnly(input, value, comparer, strict);\n    return [input[res[0]], input[res[1]]];\n}\nexport function isDraggable(item) {\n    return item.draggable ?? item.enableDragging ?? true;\n}\nexport function isResizable(item) {\n    return item.resizable ?? item.enableResize ?? true;\n}\n", "<script>import { getContext } from 'svelte';\nimport { normalizeClassAttr } from '../utils/dom';\nimport { isResizable } from '../utils/utils';\nexport let model;\nexport let height;\nexport let left;\nexport let top;\nexport let width;\nexport let reflected = false;\nexport let animating = true;\nexport let dragging = false;\nexport let resizing = false;\nconst { rowStore } = getContext('dataStore');\nconst { taskContent, onTaskButtonClick, taskElementHook } = getContext('options');\nconst { selectionManager } = getContext('services');\nconst selectedTasks = selectionManager._selectedTasks;\nlet _ignoreClick = false;\nfunction taskElement(node, model) {\n    if (taskElementHook) {\n        return taskElementHook(node, model);\n    }\n}\nfunction onClick(event) {\n    if (onTaskButtonClick) {\n        onTaskButtonClick(model, event);\n    }\n}\n$: classes = model.classes ? normalizeClassAttr(model.classes) : 'sg-task-default';\nlet resizeEnabled;\n$: {\n    const row = $rowStore.entities[model.resourceId];\n    resizeEnabled = model.type !== 'milestone' && row && isResizable(row.model) && isResizable(model);\n}\nlet _moving;\n$: {\n    _moving = dragging || resizing;\n}\n</script>\n\n<div\n    data-task-id={model.id}\n    use:taskElement={model}\n    class=\"sg-task {classes}\"\n    class:sg-milestone={model.type === 'milestone'}\n    style=\"width:{width}px; height:{height}px; left: {left}px; top: {top}px;\"\n    class:moving={_moving}\n    class:animating={animating}\n    class:sg-task-reflected={reflected}\n    class:sg-task-selected={$selectedTasks[model.id]}\n    class:resize-enabled={resizeEnabled}\n    class:sg-task--sticky={model.stickyLabel}\n    class:sg-ignore-click={_ignoreClick}\n    class:sg-task-instant={width === 0}\n    on:pointerdown\n>\n    {#if model.type === 'milestone'}\n        <div class=\"sg-milestone__diamond\"></div>\n    {/if}\n    {#if model.amountDone}\n        <div class=\"sg-task-background\" style=\"width:{model.amountDone}%\" />\n    {/if}\n    <div class=\"sg-task-content\">\n        {#if model.html}\n            {@html model.html}\n        {:else if taskContent}\n            {@html taskContent(model)}\n        {:else}\n            {model.label}\n        {/if}\n        {#if model.showButton}\n            <!-- svelte-ignore a11y-click-events-have-key-events -->\n            <span\n                class=\"sg-task-button {model.buttonClasses}\"\n                on:click={onClick}\n                role=\"button\"\n                tabindex=\"0\"\n            >\n                {@html model.buttonHtml}\n            </span>\n        {/if}\n    </div>\n\n    {#if model.labelBottom}\n        <span class=\"sg-label-bottom\">{model.labelBottom}</span>\n    {/if}\n</div>\n\n<style>\n    .sg-label-bottom {\n        position: absolute;\n        top: calc(100% + 10px);\n        color: #888;\n    }\n\n    .sg-task {\n        position: absolute;\n        border-radius: 2px;\n\n        white-space: nowrap;\n        /* overflow: hidden; */\n\n        transition:\n            background-color 0.2s,\n            opacity 0.2s;\n        pointer-events: all;\n        /* disable mobile pan/zoom on drag */\n        touch-action: none;\n    }\n\n    .sg-task-background {\n        position: absolute;\n        height: 100%;\n        top: 0;\n    }\n\n    .sg-task-content {\n        position: absolute;\n        height: 100%;\n        top: 0;\n\n        padding-left: 14px;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        user-select: none;\n    }\n\n    .sg-task.animating:not(.moving),\n    .sg-task--sticky:not(.moving) {\n        transition:\n            left 0.2s,\n            top 0.2s,\n            transform 0.2s,\n            background-color 0.2s,\n            width 0.2s,\n            height 0.2s;\n    }\n\n    .sg-task--sticky > .sg-task-content {\n        position: sticky;\n        left: 0;\n        max-width: 100px;\n    }\n\n    .sg-task.moving {\n        z-index: 10000;\n        opacity: 0.5;\n    }\n\n    .sg-task.resize-enabled:hover::before,\n    .sg-task.resize-enabled:hover::after {\n        content: '';\n        width: 4px;\n        height: 50%;\n        top: 25%;\n        position: absolute;\n        border-style: solid;\n        border-color: var(--sg-task-resize-color);\n        cursor: ew-resize;\n        border-width: 0 1px;\n        z-index: 1;\n    }\n\n    .sg-task.resize-enabled:hover::before {\n        margin-left: 3px;\n        left: 0;\n    }\n\n    .sg-task.resize-enabled:hover::after {\n        margin-right: 3px;\n        right: 0;\n    }\n\n    .sg-task-reflected {\n        opacity: 0.5;\n    }\n\n    .sg-task-instant {\n        width: 2px !important;\n        margin-left: -1px;\n    }\n\n    .sg-task-background {\n        background: rgba(0, 0, 0, 0.2);\n    }\n\n    :global(.sg-task-default) {\n        color: white;\n        background: rgb(116, 191, 255);\n    }\n\n    :global(.sg-task-default:hover) {\n        background: rgb(98, 161, 216);\n    }\n\n    :global(.sg-task-default.selected) {\n        background: rgb(69, 112, 150);\n    }\n\n    :global(.sg-task-selected) {\n        outline: 2px solid var(--sg-task-selected-outline-color);\n        outline-offset: 3px;\n        z-index: 1;\n    }\n\n    .sg-milestone {\n        /* height: 20px; */\n        width: 20px !important;\n        min-width: 40px;\n        margin-left: -20px;\n    }\n\n    .sg-task.sg-milestone {\n        background: transparent;\n    }\n\n    .sg-milestone .sg-milestone__diamond {\n        position: relative;\n    }\n\n    .sg-milestone .sg-milestone__diamond:before {\n        position: absolute;\n        top: 0;\n        left: 50%;\n        content: ' ';\n        height: 28px;\n        width: 28px;\n        transform-origin: 0 0;\n        transform: rotate(45deg);\n    }\n\n    :global(.sg-milestone__diamond:before) {\n        background: rgb(116, 191, 255);\n    }\n</style>\n", "<script>import { normalizeClassAttr } from '../utils/dom';\nimport { getContext } from 'svelte';\nexport let row;\nconst { hoveredRow, selectedRow } = getContext('gantt');\n$: classes = normalizeClassAttr(row.model.classes);\n</script>\n\n<div\n    class=\"sg-row {classes}\"\n    data-row-id={row.model.id}\n    class:sg-hover={$hoveredRow == row.model.id}\n    class:sg-selected={$selectedRow == row.model.id}\n    style=\"height:{row.height}px\"\n>\n    {#if row.model.contentHtml}\n        {@html row.model.contentHtml}\n    {/if}\n</div>\n\n<style>\n    .sg-row {\n        position: relative;\n        width: 100%;\n        box-sizing: border-box;\n    }\n</style>\n", "<script>import { normalizeClassAttr } from '../utils/dom';\nexport let model;\nexport let left;\nexport let width;\nexport let resizing = false;\n$: classes = normalizeClassAttr(model.classes);\n</script>\n\n<div\n    class=\"sg-time-range {classes}\"\n    class:moving={resizing}\n    style=\"width:{width}px;left:{left}px\"\n>\n    {#if model.label}\n        <div class=\"sg-time-range-label\">{model.label}</div>\n    {/if}\n</div>\n\n<style>\n    .sg-time-range {\n        height: 100%;\n        position: absolute;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        background-image: linear-gradient(\n            -45deg,\n            transparent 46%,\n            #e03218 49%,\n            #e03218 51%,\n            transparent 55%\n        );\n        background-size: 6px 6px !important;\n        font-weight: 400;\n    }\n\n    .sg-time-range-label {\n        margin-top: 10px;\n        background: #fff;\n        color: red;\n        white-space: nowrap;\n        padding: 4px;\n        font-weight: 400;\n        font-size: 10px;\n    }\n</style>\n", "export const MIN_DRAG_X = 2;\nexport const MIN_DRAG_Y = 2;\n", "import { isLeftClick, addEventListenerOnce, getRelativePos } from '../../utils/dom';\nimport { MIN_DRAG_Y, MIN_DRAG_X } from '../constants';\nfunction getAccessor(accessor) {\n    if (accessor instanceof Function) {\n        return () => accessor();\n    }\n    else {\n        return () => accessor;\n    }\n}\n/**\n * Applies dragging interaction to gantt elements\n */\nexport function useDraggable(node, options) {\n    const onMousedown = createDraggable(options);\n    node.addEventListener('pointerdown', onMousedown);\n    return {\n        destroy() {\n            node.removeEventListener('pointerdown', onMousedown, false);\n        }\n    };\n}\n/**\n * Applies dragging interaction to gantt elements\n */\nexport function createDraggable(options) {\n    let mouseStartPosX;\n    let mouseStartPosY;\n    let mouseStartRight;\n    let direction;\n    let dragging = false;\n    let resizing = false;\n    let initialX;\n    let initialY;\n    let triggered = false;\n    const dragAllowed = getAccessor(options.dragAllowed);\n    const resizeAllowed = getAccessor(options.resizeAllowed);\n    function onMousedown(event) {\n        if (!isLeftClick(event)) {\n            return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        const canDrag = dragAllowed();\n        const canResize = resizeAllowed();\n        if (!canDrag && !canResize) {\n            return;\n        }\n        const x = options.getX(event);\n        const y = options.getY(event);\n        const width = options.getWidth();\n        initialX = event.clientX;\n        initialY = event.clientY;\n        mouseStartRight = x + width;\n        mouseStartPosX = getRelativePos(options.container, event).x - x;\n        mouseStartPosY = getRelativePos(options.container, event).y - y;\n        if (canResize && mouseStartPosX <= options.resizeHandleWidth) {\n            direction = 'left';\n            resizing = true;\n        }\n        if (canResize && mouseStartPosX >= width - options.resizeHandleWidth) {\n            direction = 'right';\n            resizing = true;\n        }\n        if (canDrag && !resizing) {\n            dragging = true;\n        }\n        if ((dragging || resizing) && options.onDown) {\n            options.onDown({\n                mouseEvent: event,\n                x,\n                width,\n                y,\n                resizing: resizing,\n                dragging: dragging\n            });\n        }\n        window.addEventListener('pointermove', onMousemove, false);\n        addEventListenerOnce(window, 'pointerup', onMouseup);\n    }\n    ;\n    function onMousemove(event) {\n        if (!triggered) {\n            if (Math.abs(event.clientX - initialX) > MIN_DRAG_X ||\n                Math.abs(event.clientY - initialY) > MIN_DRAG_Y) {\n                triggered = true;\n            }\n            else {\n                return;\n            }\n        }\n        event.preventDefault();\n        if (resizing) {\n            const mousePos = getRelativePos(options.container, event);\n            const x = options.getX(event);\n            const width = options.getWidth();\n            let resultX;\n            let resultWidth;\n            if (direction === 'left') {\n                if (mouseStartRight - mousePos.x <= 0) {\n                    direction = 'right';\n                    resultX = mouseStartRight;\n                    resultWidth = mouseStartRight - mousePos.x;\n                    mouseStartRight = mouseStartRight + width;\n                }\n                else {\n                    resultX = mousePos.x;\n                    resultWidth = mouseStartRight - mousePos.x;\n                }\n            }\n            else if (direction === 'right') {\n                //resize right\n                if (mousePos.x - x <= 0) {\n                    direction = 'left';\n                    resultX = mousePos.x;\n                    resultWidth = mousePos.x - x;\n                    mouseStartRight = x;\n                }\n                else {\n                    resultX = x;\n                    resultWidth = mousePos.x - x;\n                }\n            }\n            if (options.onResize) {\n                options.onResize({\n                    x: resultX,\n                    width: resultWidth,\n                    event\n                });\n            }\n        }\n        // mouseup\n        if (dragging && options.onDrag) {\n            const mousePos = getRelativePos(options.container, event);\n            options.onDrag({\n                x: mousePos.x - mouseStartPosX, // maybe this is the rounding error\n                y: mousePos.y - mouseStartPosY,\n                event\n            });\n        }\n    }\n    ;\n    function onMouseup(event) {\n        const x = options.getX(event);\n        const y = options.getY(event);\n        const width = options.getWidth();\n        options.onMouseUp && options.onMouseUp();\n        // there is an issue here maybe, we update task according to the mousemove event, but we ignore the mouseup event and use the previously commited x, y and width\n        // you know those issues when task gets rounded incorrectly on resize? could be the cause\n        // ....or not really, this issue results in task resizing when task is merely dragged\n        if (triggered && options.onDrop) {\n            options.onDrop({\n                mouseEvent: event,\n                x,\n                y,\n                width,\n                dragging: dragging,\n                resizing: resizing\n            });\n        }\n        mouseStartPosX = null;\n        mouseStartPosY = null;\n        mouseStartRight = null;\n        dragging = false;\n        resizing = false;\n        initialX = null;\n        initialY = null;\n        triggered = false;\n        window.removeEventListener('pointermove', onMousemove, false);\n    }\n    ;\n    return onMousedown;\n}\n", "<script>import { setContext } from 'svelte';\nimport { writable } from 'svelte/store';\nimport { createEventDispatcher } from \"svelte\";\nimport { getContext } from 'svelte';\nimport { scrollIfOutOfBounds, setCursor, getRowAtPoint } from '../../utils/dom';\nimport { isDraggable, isResizable } from '../../utils/utils';\nexport let items = {};\nlet _taskIds = [];\nconst _active = writable(false);\nconst root = writable({});\n$: $root = items;\nconst { taskStore, rowStore } = getContext('dataStore');\nconst gantt = getContext('gantt');\nconst { rowPadding } = getContext('options');\nconst { api, utils, columnService, selectionManager } = getContext('services');\nconst dispatcher = createEventDispatcher();\nconst selectedTasks = selectionManager._selectedTasks;\nconst context = {\n    rootState: root,\n    dragAllowed({ model }) {\n        const row = $rowStore.entities[model.resourceId];\n        return row && isDraggable(row.model) && isDraggable(model);\n    },\n    resizeAllowed({ model }) {\n        const row = $rowStore.entities[model.resourceId];\n        return model.type !== 'milestone' && row && isResizable(row.model) && isResizable(model);\n    },\n    off(taskId) {\n        delete $root[taskId];\n    },\n    save(start, task, event) {\n        // triggers onmousedown\n        setCursor(event.dragging ? 'move' : 'e-resize');\n        const { mouseEvent } = event;\n        let tasks = [task];\n        if (mouseEvent.ctrlKey) {\n            for (const [taskId, isSelected] of Object.entries($selectedTasks)) {\n                if (isSelected && taskId !== String(task.model.id)) {\n                    tasks.push($taskStore.entities[taskId]);\n                }\n            }\n        }\n        _taskIds = [];\n        for (const task of tasks) {\n            _taskIds.push(task.model.id);\n            $root[task.model.id] = {\n                xDelta: task.left - start.x,\n                yDelta: task.top - start.y,\n                width: task.width,\n                bWidth: start.width,\n                widthDelta: task.width - start.width,\n            };\n        }\n        dispatcher('itemsChange', { items: $root });\n    },\n    dropAll(event) {\n        if (!event.dragging && !event.resizing) {\n            return;\n        }\n        $_active = false;\n        const changes = [];\n        for (const taskId of _taskIds) {\n            const state = $root[taskId];\n            const task = $taskStore.entities[taskId];\n            const isTarget = task.model.id === taskId;\n            const change = onDropSingle({\n                ...event,\n                mouseEvent: {\n                    ...event.mouseEvent,\n                    clientX: event.mouseEvent.clientX + state.xDelta,\n                    clientY: event.mouseEvent.clientY + state.yDelta,\n                },\n                x: event.x + state.xDelta,\n                y: event.y + state.yDelta,\n                width: Math.abs((isTarget ? event.width : state.bWidth) + state.widthDelta),\n            }, task);\n            changes.push({\n                valid: change.valid,\n                task: change.task,\n                targetRow: change.targetRow,\n                sourceRow: change.sourceRow,\n                current: change.current,\n                previous: change.previous,\n            });\n        }\n        dispatcher('change', { changes });\n        $root = {};\n        _taskIds = [];\n        dispatcher('itemsChange', { items: $root });\n    },\n    moveAll({ x, y, width, event }, task, state) {\n        scrollIfOutOfBounds(event, gantt.mainContainer);\n        if (state.dragging) {\n            api.tasks.raise.move(task.model);\n        }\n        if (state.resizing) {\n            api.tasks.raise.resize(task.model);\n        }\n        for (const taskId of _taskIds) {\n            // somehow update tasks to (event.x + xDelta, event.y + yDelta)\n            const rootState = $root[taskId];\n            const isTarget = task.model.id === taskId;\n            const event = {\n                x: x != null ? x + rootState.xDelta : null,\n                y: y != null ? y + rootState.yDelta : null,\n                width: width != null ? Math.abs((isTarget ? width : rootState.bWidth) + rootState.widthDelta) : null, // pos.width + (width - pos.bWidth) // wDelta\n            };\n            $root[taskId] = {\n                ...$root[taskId],\n                ...state,\n                x: event.x,\n                y: event.y,\n                width: event.width ?? $root[taskId]?.width,\n            };\n        }\n    },\n    setState(task, state) {\n        $root[task.model.id] = {\n            ...$root[task.model.id],\n            ...state,\n        };\n    },\n    mouseUp({ model }) {\n        setCursor('default');\n        api.tasks.raise.moveEnd(model);\n    }\n};\n// honestly keep state in context provider.\nfunction setState(state, id) {\n    $root[id] = {\n        ...$root[id],\n        ...state,\n    };\n}\nfunction onDropSingle(event, task) {\n    //row switching\n    const model = task.model;\n    const sourceRow = $rowStore.entities[model.resourceId];\n    let targetRow;\n    if (event.dragging) {\n        const rowId = getRowAtPoint(event.mouseEvent);\n        const row = $rowStore.entities[rowId];\n        if (row && isDraggable(row.model)) {\n            targetRow = row;\n        }\n        // target row can be null\n    }\n    else {\n        // dont know about this\n        targetRow = $rowStore.entities[model.resourceId];\n    }\n    setState({\n        dragging: false,\n        resizing: false,\n    }, model.id);\n    setTimeout(() => {\n        // sets state after it has been cleared, also resulting in a wierd render\n        setState({\n            ignoreClick: false,\n        }, model.id);\n    });\n    const newFrom = utils.roundTo(columnService.getDateByPosition(event.x));\n    const newTo = utils.roundTo(columnService.getDateByPosition(event.x + event.width));\n    const newLeft = columnService.getPositionByDate(newFrom) | 0;\n    const newRight = columnService.getPositionByDate(newTo) | 0;\n    const left = newLeft;\n    const width = newRight - newLeft;\n    const top = $rowPadding + (targetRow?.y ?? 0);\n    // get value of top from the layout\n    const current = {\n        left,\n        top,\n        width,\n        from: newFrom,\n        to: newTo,\n    };\n    const previous = {\n        left: task.left,\n        width: task.width,\n        top: task.top,\n        from: model.from,\n        to: model.to,\n    };\n    return {\n        valid: true,\n        task,\n        current,\n        previous,\n        dragging: event.dragging,\n        resizing: event.resizing,\n        sourceRow,\n        targetRow,\n    };\n}\nsetContext('drag', context);\n</script>\n\n<slot {context}></slot>\n", "<script>import { getContext } from \"svelte\";\nimport { createDraggable } from \"./draggable\";\nimport { scrollIfOutOfBounds } from \"../../utils/dom\";\nimport { onDestroy } from \"svelte\";\nexport let task;\nlet _x;\nlet _y;\nlet _width;\nconst { rowContainer, mainContainer } = getContext('gantt');\nconst { resizeHandleWidth } = getContext('options');\nconst context = getContext('drag');\nconst root = context.rootState;\n$: state = $root[task.model.id];\n$: _dragging = state?.dragging ?? false;\n$: _resizing = state?.resizing ?? false;\n$: _ignoreClick = state?.ignoreClick ?? false;\n$: _state = {\n    x: _x,\n    y: _y,\n    width: _width,\n    dragging: _dragging,\n    resizing: _resizing,\n};\n$: {\n    if (_dragging || _resizing) {\n        _x = state?.x ?? task.left;\n        _y = state?.y ?? task.top;\n        _width = state?.width ?? task.width;\n    }\n    else {\n        _x = task.left;\n        _y = task.top;\n        _width = task.width;\n    }\n}\nexport const dragAllowed = null;\nexport const resizeAllowed = null;\nconst onPointerDown = createDraggable({\n    container: rowContainer,\n    resizeHandleWidth,\n    getX: () => _x,\n    getY: () => _y,\n    getWidth: () => _width,\n    dragAllowed() {\n        const fn = dragAllowed ?? context.dragAllowed ?? (() => true);\n        return fn(task);\n    },\n    resizeAllowed() {\n        const fn = resizeAllowed ?? context.resizeAllowed ?? (() => true);\n        return fn(task);\n    },\n    onDown(event) {\n        context.save(event, task, event);\n    },\n    onMouseUp() {\n        context.mouseUp(task);\n    },\n    onResize(event) {\n        context.moveAll(event, task, {\n            x: event.x,\n            y: event.width,\n            resizing: true,\n            ignoreClick: true,\n        });\n    },\n    onDrag(event) {\n        context.moveAll(event, task, {\n            x: event.x,\n            y: event.y,\n            dragging: true,\n            ignoreClick: true,\n        });\n        scrollIfOutOfBounds(event.event, mainContainer);\n    },\n    onDrop(event) {\n        context.dropAll(event);\n    }\n});\nonDestroy(() => {\n    context.off(task.model.id);\n});\n</script>\n\n\n<slot state={_state} onPointerDown={onPointerDown}/>", "<script>import { getContext } from 'svelte';\nimport { useDraggable } from '../core/drag';\nimport { normalizeClassAttr } from '../utils/dom';\nimport { isResizable } from '../utils/utils';\nconst { rowContainer } = getContext('gantt');\nconst { api, utils, columnService } = getContext('services');\nconst { resizeHandleWidth } = getContext('options');\nconst { timeRangeStore } = getContext('dataStore');\nexport let model;\nexport let width;\nexport let left;\nconst _position = {\n    width,\n    x: left\n};\n$: {\n    (_position.x = left), (_position.width = width);\n}\nfunction drag(node) {\n    const ondrop = event => {\n        const newFrom = utils.roundTo(columnService.getDateByPosition(event.x));\n        const newTo = utils.roundTo(columnService.getDateByPosition(event.x + event.width));\n        const newLeft = columnService.getPositionByDate(newFrom);\n        const newRight = columnService.getPositionByDate(newTo);\n        Object.assign(model, {\n            from: newFrom,\n            to: newTo\n        });\n        update({\n            left: newLeft,\n            width: newRight - newLeft,\n            model,\n            resizing: false\n        });\n        api.timeranges.raise.changed({ model, left: event.x, width: event.width });\n        window.removeEventListener('pointermove', onmousemove, false);\n    };\n    function update(state) {\n        timeRangeStore.update(state);\n        _position.x = state.left;\n        _position.width = state.width;\n    }\n    const draggable = useDraggable(node, {\n        onDown: event => {\n            api.timeranges.raise.clicked({ model });\n            update({\n                left: event.x,\n                width: event.width,\n                model,\n                resizing: true\n            });\n        },\n        onResize: event => {\n            api.timeranges.raise.resized({ model, left: event.x, width: event.width });\n            update({\n                left: event.x,\n                width: event.width,\n                model,\n                resizing: true\n            });\n        },\n        dragAllowed: false,\n        resizeAllowed: () => isResizable(model),\n        onDrop: ondrop,\n        container: rowContainer,\n        resizeHandleWidth,\n        getX: () => _position.x,\n        getY: () => 0,\n        getWidth: () => _position.width\n    });\n    return { destroy: () => draggable.destroy() };\n}\nlet classes;\n$: {\n    classes = normalizeClassAttr(model.classes);\n}\n</script>\n\n<div\n    class=\"sg-time-range-control {classes}\"\n    style=\"width:{_position.width}px;left:{_position.x}px\"\n    class:sg-time-range-disabled={!isResizable(model)}\n>\n    <div class=\"sg-time-range-handle-left\" use:drag></div>\n    <div class=\"sg-time-range-handle-right\" use:drag></div>\n</div>\n\n<style>\n    .sg-time-range-control {\n        position: absolute;\n    }\n\n    .sg-time-range-handle-left {\n        position: absolute;\n        left: 0;\n    }\n\n    .sg-time-range-handle-right {\n        position: absolute;\n        right: 0;\n    }\n\n    .sg-time-range-disabled {\n        display: none;\n    }\n\n    .sg-time-range-handle-left::before,\n    .sg-time-range-handle-right::before {\n        position: absolute;\n        content: '';\n        bottom: 4px;\n        border-radius: 6px 6px 6px 0;\n        border: 2px solid #b0b0b7;\n        width: 9px;\n        height: 9px;\n        transform: translateX(-50%) rotate(-45deg);\n        background-color: #fff;\n\n        border-color: #e03218;\n        cursor: ew-resize;\n    }\n</style>\n", "export function startOf(date, unit) {\n    const d = new Date(date);\n    const y = d.getFullYear();\n    const m = d.getMonth();\n    const dt = d.getDate();\n    switch (unit) {\n        case 'y':\n        case 'year':\n            return startOfDate(y, 0, 1);\n        case 'month':\n            return startOfDate(y, m, 1);\n        case 'week':\n            return startOfDate(y, m, dt, true);\n        case 'd':\n        case 'day':\n            return startOfDate(y, m, dt);\n        case 'h':\n        case 'hour':\n            d.setMinutes(0, 0, 0);\n            return d.valueOf();\n        case 'm':\n        case 'minute':\n        case 's':\n        case 'second': {\n            const unitMs = getDuration(unit);\n            const value = Math.floor(date / unitMs) * unitMs;\n            return value;\n        }\n        default:\n            throw new Error(`Unknown unit: ${unit}`);\n    }\n}\nfunction startOfDate(y, m, d, week = false) {\n    if (y < 100 && y >= 0) {\n        return new Date(y + 400, m, d).valueOf() - 31536000000;\n    }\n    else if (week) {\n        return getFirstDayOfWeek(new Date(y, m, d).valueOf()).valueOf();\n    }\n    else {\n        return new Date(y, m, d).valueOf();\n    }\n}\nfunction getFirstDayOfWeek(d) {\n    // 👇️ clone date object, so we don't mutate it\n    const date = new Date(d);\n    const day = date.getDay(); // 👉️ get day of week\n    // 👇️ day of month - day of week (-6 if Sunday), otherwise +1\n    const diff = date.getDate() - day + (day === 0 ? -6 : 1);\n    return new Date(date.setDate(diff));\n}\nfunction checkLeapYear(year) {\n    const leap = new Date(year, 1, 29).getDate() === 29;\n    if (leap)\n        return true;\n    return false;\n}\nexport function getDuration(unit, offset = 1) {\n    switch (unit) {\n        case 'y':\n        case 'year':\n            return offset * 31536000000;\n        case 'month':\n            return offset * 30 * 24 * 60 * 60 * 1000; // incorrect since months are of different durations\n        // 4 cases : 28 - 29 - 30 - 31\n        case 'week':\n            return offset * 7 * 24 * 60 * 60 * 1000;\n        case 'd':\n        case 'day':\n            return offset * 24 * 60 * 60 * 1000;\n        case 'h':\n        case 'hour':\n            return offset * 60 * 60 * 1000;\n        case 'm':\n        case 'minute':\n            return offset * 60 * 1000;\n        case 's':\n        case 'second':\n            return offset * 1000;\n        default:\n            throw new Error(`Unknown unit: ${unit}`);\n    }\n}\nexport function getDurationV2(unit, offset = 1, date = null) {\n    switch (unit) {\n        case 'y':\n        case 'year':\n            // 2 cases 31622400000 (366) - 31536000000 (365)\n            if (date) {\n                const isLeapYear = checkLeapYear(date.getFullYear());\n                if (isLeapYear)\n                    return 31622400000;\n            }\n            return offset * 31536000000; // Incorrect since there is years with 366 days\n        case 'month':\n            if (date) {\n                const month_number_of_days = new Date(date.getFullYear(), date.getMonth(), 0).getDate();\n                return offset * month_number_of_days * 24 * 60 * 60 * 1000;\n            }\n            return offset * 30 * 24 * 60 * 60 * 1000; // incorrect since months are of different durations\n        // 4 cases : 28 - 29 - 30 - 31\n        case 'week':\n            return offset * 7 * 24 * 60 * 60 * 1000;\n        case 'd':\n        case 'day':\n            return offset * 24 * 60 * 60 * 1000;\n        case 'h':\n        case 'hour':\n            return offset * 60 * 60 * 1000;\n        case 'm':\n        case 'minute':\n            return offset * 60 * 1000;\n        case 's':\n        case 'second':\n            return offset * 1000;\n        default:\n            throw new Error(`Unknown unit: ${unit}`);\n    }\n}\nfunction addSeconds(date, offset = 1) {\n    date.setSeconds(date.getSeconds() + offset);\n    return date;\n}\nfunction addMinutes(date, offset = 1) {\n    date.setMinutes(date.getMinutes() + offset);\n    return date;\n}\nfunction addHours(date, offset = 1) {\n    date.setHours(date.getHours() + offset);\n    return date;\n}\nfunction addDays(date, offset = 1) {\n    date.setDate(date.getDate() + offset);\n    date.setHours(0, 0, 0);\n    return date;\n}\nfunction addWeeks(date, offset = 1) {\n    const d = date;\n    const day = d.getDay();\n    const diff = d.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\n    d.setDate(diff);\n    d.setHours(0, 0, 0);\n    d.setDate(d.getDate() + 7 * offset);\n    return d;\n}\nfunction addMonths(date, offset = 1) {\n    date.setMonth(date.getMonth() + offset);\n    date.setDate(1);\n    date.setHours(0, 0, 0);\n    return date;\n}\nfunction addYears(date, offset = 1) {\n    date.setFullYear(date.getFullYear() + offset);\n    date.setMonth(0);\n    date.setDate(1);\n    date.setHours(0, 0, 0);\n    return date;\n}\nfunction getNextDate(date, unit, offset) {\n    switch (unit) {\n        case 'y':\n        case 'year':\n            return addYears(date, offset);\n        case 'month':\n            return addMonths(date, offset);\n        case 'week':\n            return addWeeks(date, offset);\n        case 'd':\n        case 'day':\n            return addDays(date, offset);\n        case 'h':\n        case 'hour':\n            return addHours(date, offset);\n        case 'm':\n        case 'minute':\n            return addMinutes(date, offset);\n        case 's':\n        case 'second':\n            return addSeconds(date, offset);\n        default:\n            break;\n    }\n}\nconst units = ['y', 'year', 'month', 'week', 'd', 'day', 'h', 'hour', 'm', 'minute', 's', 'second'];\n/**\n *\n * @param from Interval start\n * @param to Interval end\n * @param unit Column unit\n * @param offset Column spacing\n * @param highlightedDurations\n * @returns\n */\nexport function getAllPeriods(from, to, unit, offset = 1, highlightedDurations) {\n    if (units.indexOf(unit) !== -1) {\n        let tmsWorkOld = 0;\n        let interval_duration = 0;\n        const start = new Date(from); // Starts at hh:mm:ss\n        const dateWork = new Date(from);\n        let nextDate = getNextDate(dateWork, unit, offset);\n        let tmsWork = nextDate.getTime();\n        const firstDuration = nextDate.getTime() - from;\n        const all_periods = [\n            {\n                // start: start,\n                // end: nextDate,\n                from: from,\n                // from: startOf(from, unit), // incorrect if not circled down to the unit eg. 6:30\n                // TODO: think about offsetting the whole row, so for example if timeline starts at 6:30, the headers still show times for 6:00, 7:00 etc, and not 6:30, 7:30...\n                to: nextDate.getTime(),\n                duration: firstDuration,\n                // check whether duration is highlighted\n                isHighlighted: highlightedDurations && isUnitFraction(start, highlightedDurations)\n            }\n        ];\n        if (tmsWork < to) {\n            while (tmsWork < to) {\n                tmsWorkOld = tmsWork;\n                nextDate = getNextDate(new Date(tmsWork), unit, offset);\n                interval_duration = nextDate.getTime() - tmsWork;\n                all_periods.push({\n                    from: tmsWork,\n                    to: nextDate.getTime(),\n                    duration: interval_duration,\n                    //check whether duration is highlighted\n                    isHighlighted: highlightedDurations &&\n                        isUnitFraction(new Date(tmsWork), highlightedDurations)\n                });\n                tmsWork = nextDate.getTime();\n            }\n            const last_day_duration = to - tmsWorkOld;\n            all_periods[all_periods.length - 1].to = to;\n            all_periods[all_periods.length - 1].duration = last_day_duration;\n            // ToDo: there could be another option for hours, minutes, seconds based on pure math like in getPeriodDuration to optimise performance\n        }\n        return all_periods;\n    }\n    throw new Error(`Unknown unit: ${unit}`);\n}\nfunction isUnitFraction(localDate, highlightedDurations) {\n    // const localDate = new Date(timestamp * 1000);\n    let timeInUnit;\n    switch (highlightedDurations.unit) {\n        case 'm':\n        case 'minute':\n            timeInUnit = localDate.getMinutes();\n            return highlightedDurations.fractions.includes(timeInUnit);\n        case 'h':\n        case 'hour':\n            timeInUnit = localDate.getHours();\n            return highlightedDurations.fractions.includes(timeInUnit);\n        case 'd':\n        case 'day':\n            timeInUnit = localDate.getDay();\n            return highlightedDurations.fractions.includes(timeInUnit);\n        case 'week':\n            // getWeekNumber(localDate);\n            return highlightedDurations.fractions.includes(timeInUnit);\n        case 'dayinMonth':\n            timeInUnit = localDate.getDate();\n            return highlightedDurations.fractions.includes(timeInUnit);\n        case 'month':\n            timeInUnit = localDate.getMonth();\n            return highlightedDurations.fractions.includes(timeInUnit);\n        case 'y':\n        case 'year':\n            timeInUnit = localDate.getFullYear();\n            return highlightedDurations.fractions.includes(timeInUnit);\n        default:\n            throw new Error(`Invalid unit: ${highlightedDurations.unit}`);\n    }\n}\n", "<script>import { createEventDispatcher, getContext } from 'svelte';\nconst dispatch = createEventDispatcher();\nimport { getAllPeriods } from '../utils/date';\nimport { getPositionByDate } from '../utils/utils';\nimport { whenEnterPress } from '../utils/dom';\nconst { from, to, width } = getContext('dimensions');\nconst { dateAdapter } = getContext('options');\nexport let header;\nexport let ganttBodyColumns;\nexport let ganttBodyUnit;\n$: {\n    if (header.unit === ganttBodyUnit) {\n        header.columns = ganttBodyColumns.map(column => ({\n            ...column,\n            label: dateAdapter.format(column.from, header.format)\n        }));\n    }\n    else {\n        const periods = getAllPeriods($from.valueOf(), $to.valueOf(), header.unit, header.offset);\n        let distance_point = 0;\n        let left = 0;\n        header.columns = periods.map(period => {\n            left = distance_point;\n            distance_point = getPositionByDate(period.to, $from.valueOf(), $to.valueOf(), $width);\n            return {\n                width: Math.min(distance_point - left, $width),\n                label: dateAdapter.format(period.from, header.format),\n                from: period.from,\n                to: period.to,\n                left: left\n            };\n        });\n    }\n}\nfunction onHeaderClick(_header) {\n    dispatch('dateSelected', { from: _header.from, to: _header.to, unit: header.unit });\n}\n</script>\n\n<div class=\"column-header-row\">\n    {#each header.columns as _header}\n        <div\n            class=\"column-header-cell\"\n            role=\"button\"\n            tabindex=\"0\"\n            class:sticky={header.sticky}\n            style=\"left:{_header.left}px;width:{_header.width}px\"\n            on:click={() => onHeaderClick(_header)}\n            on:keydown={whenEnterPress(() => onHeaderClick(_header))}\n        >\n            <div class=\"column-header-cell-label\">{_header.label || 'N/A'}</div>\n        </div>\n    {/each}\n</div>\n\n<style>\n    .column-header-row {\n        position: relative;\n\n        white-space: nowrap;\n        height: 32px;\n    }\n\n    .column-header-cell {\n        position: absolute;\n\n        height: 100%;\n        box-sizing: border-box;\n        text-overflow: clip;\n        text-align: center;\n\n        display: inline-flex;\n\n        justify-content: center;\n        align-items: center;\n\n        font-size: 1em;\n        font-size: 14px;\n        font-weight: 300;\n        transition: background 0.2s;\n\n        cursor: pointer;\n        user-select: none;\n\n        border-right: var(--sg-column-header-border-color) 1px solid;\n        border-bottom: var(--sg-column-header-border-color) 1px solid;\n    }\n\n    .column-header-cell:hover {\n        background: var(--sg-column-header-bg-hover);\n    }\n\n    .column-header-cell.sticky > .column-header-cell-label {\n        position: sticky;\n        left: 1rem;\n    }\n</style>\n", "<script>import ColumnHeaderRow from './ColumnHeaderRow.svelte';\n/**\n * Container component for header rows\n */\nexport let headers;\nexport let ganttBodyColumns;\nexport let ganttBodyUnit;\n</script>\n\n{#each headers as header}\n    <ColumnHeaderRow {header} {ganttBodyColumns} {ganttBodyUnit} on:dateSelected />\n{/each}\n", "export function createBackground(columns, opts) {\n    try {\n        const canvas = document.createElement('canvas');\n        canvas.width = (columns.length - 1) * columns[0].width;\n        canvas.height = 20;\n        const ctx = canvas.getContext('2d');\n        ctx.shadowColor = 'rgba(128,128,128,0.5)';\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n        ctx.shadowBlur = 0.5;\n        ctx.lineWidth = opts.columnStrokeWidth;\n        ctx.lineCap = 'square';\n        ctx.strokeStyle = opts.columnStrokeColor;\n        ctx.translate(0.5, 0.5);\n        columns.forEach(column => {\n            lineAt(ctx, column.left);\n        });\n        const dataURL = canvas.toDataURL();\n        return `url(\"${dataURL}\")`;\n    }\n    catch (e) {\n        console.error('[canvas] Render error', e);\n    }\n}\nfunction lineAt(ctx, x) {\n    ctx.beginPath();\n    ctx.moveTo(x, 0);\n    ctx.lineTo(x, 20);\n    ctx.stroke();\n}\nexport function createWeekEndsHighlight(columns, opts) {\n    const start_gantt = new Date(opts.from);\n    const dayStart = start_gantt.getDay();\n    const startIndex = dayStart == 0 ? 7 : 7 - dayStart;\n    const canvas = document.createElement('canvas');\n    canvas.width = columns.length * columns[0].width;\n    canvas.height = 20;\n    const ctx = canvas.getContext('2d');\n    ctx.shadowColor = 'rgba(128,128,128,0.5)';\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 0;\n    ctx.shadowBlur = 0.5;\n    ctx.lineWidth = columns[0].width;\n    ctx.lineCap = 'square';\n    ctx.strokeStyle = opts.highlightColor;\n    ctx.translate(0.5, 0.5);\n    columns.forEach((column, index) => {\n        if (index == startIndex)\n            lineAt(ctx, column.left - columns[0].width / 2);\n        if (index == startIndex + 1)\n            lineAt(ctx, column.left - columns[0].width / 2);\n    });\n    const dataURL = canvas.toDataURL();\n    return `url(\"${dataURL}\")`;\n}\n", "<script>import { createBackground } from './canvas';\n/**\n * Container component for columns rendered as gantt body background\n */\nexport let columns;\nexport let useCanvasColumns = true;\nexport let columnStrokeWidth;\nexport let columnStrokeColor;\nexport let columnDefaultColor = '#ffffff';\nlet backgroundImage;\n$: {\n    // TODO: background repeats and so do columns so passing every element is not needed, but line alignment issues occur on later rows\n    // TODO: I used to make column widths and positions whole numbers, now they contain decimals again, check if this is because of that\n    backgroundImage = createBackground(columns, {\n        // columns.slice(0,5)\n        columnStrokeColor,\n        columnStrokeWidth\n    });\n}\n</script>\n\n{#if useCanvasColumns}\n    <div class=\"sg-columns sg-columns--background\" style:background-image={backgroundImage}></div>\n{:else}\n    <div class=\"sg-columns\">\n        {#each columns as column}\n            <div\n                class=\"sg-column\"\n                style=\"\n                border-right: {column.bgHighlightColor\n                    ? 0\n                    : columnStrokeWidth}px solid {column.bgHighlightColor || columnStrokeColor};\n                left: {column.left}px;\n                width: {column.width}px;\n                background-color: {column.bgHighlightColor || columnDefaultColor};\"\n            ></div>\n        {/each}\n    </div>\n{/if}\n\n<style>\n    .sg-columns {\n        position: absolute;\n        height: 100%;\n        width: 100%;\n        /* BUG: column borders are not showing correctly when width is very small */\n    }\n\n    .sg-columns--background {\n        overflow: hidden;\n        background-repeat: repeat;\n        background-position-x: -1px;\n    }\n\n    .sg-column {\n        position: absolute;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n</style>\n", "<script>\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    import { useDraggable } from '../core/drag';\n    import { setCursor } from '../utils/dom';\n\n    export let x;\n    export let container;\n\n    let dragging = false;\n    const dragOptions = {\n        onDrag: event => {\n            (x = event.x), (dragging = true);\n            dispatch('resize', { left: x });\n            setCursor('col-resize');\n        },\n        onDrop: event => {\n            (x = event.x), (dragging = false);\n            dispatch('resize', { left: x });\n            setCursor('default');\n        },\n        dragAllowed: true,\n        resizeAllowed: false,\n        container: container,\n        getX: () => x,\n        getY: () => 0,\n        getWidth: () => 0\n    };\n\n    $: dragOptions.container = container;\n\n    function resizer(node) {\n        const draggable = useDraggable(node, dragOptions, 'resizer');\n\n        return { destroy: () => draggable.destroy() };\n    }\n</script>\n\n<div class=\"sg-resize\" style=\"left:{x}px\" use:resizer></div>\n\n<style>\n    .sg-resize {\n        z-index: 2;\n        background: var(--sg-resize-color);\n        width: 5px;\n        cursor: col-resize;\n        position: absolute;\n        height: 100%;\n\n        transition:\n            width 0.2s,\n            transform 0.2s;\n    }\n\n    .sg-resize:hover {\n        transform: translateX(-2px);\n        width: 10px;\n    }\n</style>\n", "import { setContext, getContext } from \"svelte\";\nfunction controller() {\n    const listeners = [];\n    function raise(...params) {\n        for (const listener of listeners) {\n            listener(params);\n        }\n    }\n    ;\n    function on(handler) {\n        listeners.push(handler);\n        const removeListener = () => {\n            const index = listeners.indexOf(handler);\n            listeners.splice(index, 1);\n        };\n        return removeListener;\n    }\n    ;\n    return [on, raise];\n}\nfunction feature(events) {\n    const result = { on: {}, raise: {} };\n    for (const event in events) {\n        const [on, raise] = events[event];\n        result.on[event] = on;\n        result.raise[event] = raise;\n    }\n    return result;\n}\nconst contextKey = {};\nexport function provideGanttApi() {\n    return setContext(contextKey, createGanttApi());\n}\nfunction createGanttApi() {\n    return {\n        tasks: feature({\n            move: controller(),\n            resize: controller(),\n            select: controller(),\n            switchRow: controller(),\n            moveEnd: controller(),\n            change: controller(),\n            changed: controller(),\n            dblclicked: controller(),\n        }),\n        gantt: feature({\n            viewChanged: controller(),\n            dateSelected: controller(),\n        }),\n        timeranges: feature({\n            clicked: controller(),\n            resized: controller(),\n            changed: controller(),\n        }),\n    };\n}\nexport function useGanttApi() {\n    return getContext(contextKey);\n}\n", "export function createTaskFactory(params) {\n    return {\n        createTask: (model) => createTask(model, params),\n        reflectTask: (task, targetRow) => reflectTask(task, targetRow, params),\n    };\n}\nexport function createTask(model, params) {\n    model.amountDone = model.amountDone ?? 0;\n    model.showButton = model.showButton ?? false;\n    model.buttonClasses = model.buttonClasses ?? '';\n    model.buttonHtml = model.buttonHtml ?? '';\n    const left = params.getPositionByDate(model.from) | 0;\n    const right = params.getPositionByDate(model.to) | 0;\n    const row = params.rowEntities[model.resourceId];\n    const height = (row ? row.height : undefined) - 2 * params.rowPadding;\n    const top = (row ? row.y : -1000) + params.rowPadding;\n    return {\n        model,\n        left: left,\n        width: right - left,\n        height,\n        top,\n    };\n}\nexport function overlap(left, right) {\n    return !(left.left + left.width <= right.left || left.left >= right.left + right.width);\n}\nexport function reflectTask(task, targetRow, params) {\n    const reflectedId = `reflected-task-${String(task.model.id)}-${String(targetRow.model.id)}`;\n    const model = {\n        ...task.model,\n        resourceId: targetRow.model.id,\n        id: reflectedId,\n        enableDragging: false\n    };\n    return {\n        ...task,\n        model,\n        top: targetRow.y + params.rowPadding,\n        reflected: true,\n        reflectedOnParent: false,\n        reflectedOnChild: true,\n        originalId: task.model.id\n    };\n}\n", "export function createRows(rows, params) {\n    const context = { y: 0, result: [] };\n    createChildRows(rows, context, params);\n    return context.result;\n}\nfunction createChildRows(rowModels, context, params, parent = null, level = 0, parents = []) {\n    const rowsAtLevel = [];\n    const allRows = [];\n    if (parent) {\n        parents = [...parents, parent];\n    }\n    for (const model of rowModels) {\n        const row = createRow(model, context.y, params);\n        context.result.push(row);\n        rowsAtLevel.push(row);\n        allRows.push(row);\n        row.childLevel = level;\n        row.parent = parent;\n        row.allParents = parents;\n        if (parent) {\n            // when row is hidden, other rows (y-pos) move upward\n            row.hidden = !(parent.model.expanded || parent.model.expanded == null) || parent.hidden != null && parent.hidden;\n        }\n        if (!row.hidden) {\n            context.y += row.height;\n        }\n        if (model.children) {\n            const nextLevel = createChildRows(model.children, context, params, row, level + 1, parents);\n            row.children = nextLevel.rows;\n            row.allChildren = nextLevel.allRows;\n            allRows.push(...nextLevel.allRows);\n        }\n    }\n    return {\n        rows: rowsAtLevel,\n        allRows\n    };\n}\nfunction createRow(model, y, params) {\n    // defaults\n    // height of row element\n    const height = model.height ?? params.rowHeight;\n    return {\n        model: model,\n        y,\n        height,\n    };\n}\nexport function expandRow(row) {\n    row.model.expanded = true;\n    if (row.children)\n        show(row.children);\n}\nexport function collapseRow(row) {\n    row.model.expanded = false;\n    if (row.children)\n        hide(row.children);\n}\nfunction hide(children) {\n    for (const row of children) {\n        if (row.children)\n            hide(row.children);\n        row.hidden = true;\n    }\n}\nfunction show(children, hidden = false) {\n    for (const row of children) {\n        if (row.children)\n            show(row.children, !row.model.expanded);\n        row.hidden = hidden;\n    }\n}\n", "export class TimeRangeFactory {\n    columnService;\n    constructor(columnService) {\n        this.columnService = columnService;\n    }\n    create(model) {\n        // enable dragging\n        model.resizable = model.resizable === undefined ? true : model.resizable;\n        const left = this.columnService.getPositionByDate(model.from);\n        const right = this.columnService.getPositionByDate(model.to);\n        return {\n            model,\n            left: left,\n            width: right - left,\n            resizing: false\n        };\n    }\n}\n", "import { writable } from 'svelte/store';\nexport class SelectionManager {\n    taskStore;\n    _selectedTasks = writable({});\n    constructor(taskStore) {\n        this.taskStore = taskStore;\n    }\n    selectSingle(taskId) {\n        this.unSelectTasks();\n        this._selectedTasks.set({ [taskId]: true });\n    }\n    toggleSelection(taskId) {\n        this._selectedTasks.update(selections => ({\n            ...selections,\n            [taskId]: !selections[taskId]\n        }));\n    }\n    unSelectTasks() {\n        this._selectedTasks.set({});\n    }\n}\n", "import { get } from '../utils/utils';\nexport function createColumnService(params) {\n    function getColumnByDate(date) {\n        const pair = findByDate(params.columns, date);\n        return !pair[0] ? pair[1] : pair[0];\n    }\n    function getColumnByPosition(x) {\n        const pair = findByPosition(params.columns, x);\n        return !pair[0] ? pair[1] : pair[0];\n    }\n    return {\n        getColumnByDate,\n        getColumnByPosition,\n        getPositionByDate(date) {\n            if (!date)\n                return null;\n            const column = getColumnByDate(date);\n            let durationTo = date - column.from;\n            const position = (durationTo / column.duration) * column.width;\n            //multiples - skip every nth col, use other duration\n            return column.left + position;\n        },\n        getDateByPosition(x) {\n            const column = getColumnByPosition(x);\n            x = x - column.left;\n            let positionDuration = (column.duration / column.width) * x;\n            const date = column.from + positionDuration;\n            return date;\n        },\n        /**\n         * TODO: remove, currently unused\n         * @param {number} date - Date\n         * @returns {number} rounded date passed as parameter\n         */\n        roundTo(date) {\n            let value = Math.round(date / params.magnetDuration) * params.magnetDuration;\n            return value;\n        }\n    };\n}\nexport function findByPosition(columns, x) {\n    const result = get(columns, x, c => c.left);\n    return result;\n}\nexport function findByDate(columns, x) {\n    const result = get(columns, x, c => c.from);\n    return result;\n}\n", "export function createDelegatedEventDispatcher() {\n    const callbacks = {};\n    return {\n        onDelegatedEvent(type, attr, callback) {\n            if (!callbacks[type])\n                callbacks[type] = {};\n            callbacks[type][attr] = callback;\n        },\n        offDelegatedEvent(type, attr) {\n            delete callbacks[type][attr];\n        },\n        onEvent(e) {\n            const { type, target } = e;\n            const cbs = callbacks[type];\n            if (!cbs)\n                return;\n            let match;\n            let element = target;\n            while (element && element != e.currentTarget) {\n                if ((match = matches(cbs, element))) {\n                    break;\n                }\n                element = element.parentElement;\n            }\n            if (match && cbs[match.attr]) {\n                cbs[match.attr](e, match.data, element);\n            }\n            else if (cbs['empty']) {\n                cbs['empty'](e, null, element);\n            }\n        }\n    };\n}\nfunction matches(cbs, element) {\n    let data;\n    for (const attr in cbs) {\n        if ((data = element.getAttribute(attr))) {\n            return { attr, data };\n        }\n    }\n}\n", "export class DefaultSvelteGanttDateAdapter {\n    format(date, format) {\n        const d = new Date(date);\n        switch (format) {\n            case 'H':\n                return d.getHours() + '';\n            case 'HH':\n                return pad(d.getHours());\n            case 'H:mm':\n                return `${d.getHours()}:${pad(d.getMinutes())}`;\n            case 'hh:mm':\n                return `${pad(d.getHours())}:${pad(d.getMinutes())}`;\n            case 'hh:mm:ss':\n                return `${d.getHours()}:${pad(d.getMinutes())}:${pad(d.getSeconds())}`;\n            case 'dd/MM/yyyy':\n                return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n            case 'dd/MM/yyyy hh:mm':\n                return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\n            case 'dd/MM/yyyy hh:mm:ss':\n                return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n            // VPY More formats supported 10/12/2021\n            case 'YYYY':\n                return `${d.getFullYear()}`;\n            case 'Q':\n                return `${Math.floor(d.getMonth() / 3 + 1)}`;\n            case '[Q]Q':\n                return `Q${Math.floor(d.getMonth() / 3 + 1)}`;\n            case 'YYYY[Q]Q':\n                return `${d.getFullYear()}Q${Math.floor(d.getMonth() / 3 + 1)}`;\n            case 'MM': {\n                // const month = d.toLocaleString('default', { month: 'long' });\n                let month = String(d.getMonth() + 1);\n                if (month.length == 1)\n                    month = `0${month}`;\n                return `${month}`;\n            }\n            case 'MMMM': {\n                const month = d.toLocaleString('default', { month: 'long' });\n                return `${month.charAt(0).toUpperCase()}${month.substring(1)}`;\n            }\n            case 'MMMM - YYYY': {\n                const month = d.toLocaleString('default', { month: 'long' });\n                return `${month.charAt(0).toUpperCase()}${month.substring(1)}-${d.getFullYear()}`;\n            }\n            case 'MMMM YYYY': {\n                const month = d.toLocaleString('default', { month: 'long' });\n                return `${month.charAt(0).toUpperCase()}${month.substring(1)} ${d.getFullYear()}`;\n            }\n            case 'MMM': {\n                const month = d.toLocaleString('default', { month: 'short' });\n                return `${month.charAt(0).toUpperCase()}${month.substring(1)}`;\n            }\n            case 'MMM - YYYY': {\n                const month = d.toLocaleString('default', { month: 'short' });\n                return `${month.charAt(0).toUpperCase()}${month.substring(1)} - ${d.getFullYear()}`;\n            }\n            case 'MMM YYYY': {\n                const month = d.toLocaleString('default', { month: 'short' });\n                return `${month.charAt(0).toUpperCase()}${month.substring(1)} ${d.getFullYear()}`;\n            }\n            case 'W':\n                return `${getWeekNumber(d)}`;\n            case 'WW': {\n                const weeknumber = getWeekNumber(d);\n                return `${weeknumber.toString().length == 1 ? '0' : ''}${weeknumber}`;\n            }\n            default:\n                console.warn(`Date Format '${format}' is not supported, use another date adapter.`);\n                return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n        }\n    }\n    /**\n     * Rounds the date down to the nearest unit\n     *\n     * Note: This does not consider the timezone, rounds only to the UTC time, which makes it incorrect to round to day start or half hour time zones\n     */\n    roundTo(date, unit, offset) {\n        const magnetDuration = getPeriodDuration(unit, offset);\n        const value = Math.round(date / magnetDuration) * magnetDuration; //\n        return value;\n    }\n}\nfunction pad(value) {\n    let result = value.toString();\n    for (let i = result.length; i < 2; i++) {\n        result = '0' + result;\n    }\n    return result;\n}\nfunction getWeekNumber(d) {\n    // Copy date so don't modify original\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    // Set to nearest Thursday: current date + 4 - current day number\n    // Make Sunday's day number 7\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n    // Get first day of year\n    const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n    // Calculate full weeks to nearest Thursday\n    const weekNo = Math.ceil(((d.valueOf() - yearStart.valueOf()) / 86400000 + 1) / 7);\n    // Return array of year and week number\n    return weekNo;\n}\n/**\n * Return duration\n */\nfunction getPeriodDuration(unit, offset) {\n    switch (unit) {\n        case 'y':\n        case 'year':\n            // 2 cases 31622400000 (366) - 31536000000 (365)\n            return offset * 31536000000; // Incorrect since there is years with 366 days\n        case 'month':\n            // 4 cases : 28 - 29 - 30 - 31\n            return offset * 30 * 24 * 60 * 60 * 1000; // incorrect since months are of different durations\n        case 'week':\n            return offset * 7 * 24 * 60 * 60 * 1000;\n        case 'd':\n        case 'day':\n            return offset * 24 * 60 * 60 * 1000;\n        case 'h':\n        case 'hour':\n            return offset * 60 * 60 * 1000;\n        case 'm':\n        case 'minute':\n            return offset * 60 * 1000;\n        case 's':\n        case 'second':\n            return offset * 1000;\n        default:\n            throw new Error(`Unknown unit: ${unit}`);\n    }\n}\n", "/**\n * Layouts tasks - overlapping tasks display one over another\n * @param params\n */\nexport function overlap(params) {\n    const { taskStore, rowStore, rowHeight, rowPadding, rowReflectedTasks } = params;\n    let top = 0;\n    const result = { changed: false };\n    if (!params.invalidateFull) {\n        for (const taskId in params.invalidatedTasks) {\n            positionTask(taskStore.entities[taskId]);\n        }\n        return result;\n    }\n    for (const rowId of rowStore.ids) {\n        const row = rowStore.entities[rowId];\n        row.y = top;\n        const prevHeight = row.height;\n        row.height = row.model.height || rowHeight;\n        if (!row.hidden) {\n            top += row.height;\n        }\n        if (prevHeight !== row.height) {\n            result.changed = true;\n        }\n        const reflectedTasks = rowReflectedTasks[rowId];\n        if (reflectedTasks) {\n            for (const task of reflectedTasks) {\n                positionTask(task);\n            }\n        }\n    }\n    function positionTask(task) {\n        const row = rowStore.entities[task.model.resourceId];\n        if (!row)\n            return;\n        task.height = (row ? row.height : undefined) - 2 * rowPadding;\n        task.top = row.y + rowPadding;\n    }\n    for (const taskId of taskStore.ids) {\n        positionTask(taskStore.entities[taskId]);\n    }\n    return result;\n}\n/**\n * Layouts tasks - overlapping tasks display in the same row, but shrink to not overlap with eachother\n * @param params\n */\nexport function pack(params) {\n    // TODO:: partial invalidation\n    return _layoutRows(params, false);\n}\n/**\n * Layouts tasks - overlapping tasks display in the same row, but row is expanded to fit them\n * @param params\n * @returns\n */\nexport function expand(params) {\n    // TODO:: partial invalidation\n    return _layoutRows(params, true);\n}\nfunction _layoutRows(params, expandRow) {\n    const { taskStore, rowStore, rowTasks, rowHeight, rowPadding } = params;\n    let top = 0;\n    const result = { changed: false };\n    for (const rowId of rowStore.ids) {\n        const row = rowStore.entities[rowId];\n        const taskIds = rowTasks[rowId];\n        row.y = top;\n        const prevHeight = row.height;\n        if (taskIds) {\n            const tasks = taskIds.map(taskId => taskStore.entities[taskId]);\n            _layoutRow(tasks, row, {\n                rowHeight: rowHeight,\n                rowPadding,\n                expandRow,\n            });\n        }\n        if (!row.hidden) {\n            top += row.height;\n        }\n        if (prevHeight !== row.height) {\n            result.changed = true;\n        }\n    }\n}\nfunction _layoutRow(tasks, row, params) {\n    if (!tasks.length) {\n        return;\n    }\n    tasks.sort(_byStartThenByLongestSortFn);\n    const others = {};\n    const context = {};\n    const ctx = (task) => context[task.model.id] ?? (context[task.model.id] = {});\n    let maxYPos = 0;\n    for (const task of tasks) {\n        const c = ctx(task);\n        c.yPos = 0;\n        let fits = false;\n        while (!fits) {\n            const othersAtYPos = others[c.yPos] || [];\n            fits = true;\n            for (const other of othersAtYPos) { // can use binary search to find this iterator\n                if (_intersects(task, other)) {\n                    ctx(task).intersects = ctx(other).intersects = true;\n                    c.yPos++;\n                    if (c.yPos > maxYPos) {\n                        maxYPos = c.yPos;\n                    }\n                    fits = false;\n                    break;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        if (!others[c.yPos]) {\n            others[c.yPos] = [];\n        }\n        others[c.yPos].push(task);\n    }\n    if (params.expandRow) {\n        const contentHeight = (row.model.height || params.rowHeight) - 2 * params.rowPadding;\n        row.height = contentHeight * (maxYPos + 1) + 2 * params.rowPadding;\n        for (const task of tasks) {\n            const c = ctx(task);\n            task.height = contentHeight;\n            task.top = row.y + params.rowPadding + (task.height * c.yPos);\n        }\n    }\n    else {\n        row.height = row.model.height || params.rowHeight;\n        const contentHeight = row.height - 2 * params.rowPadding;\n        for (const task of tasks) {\n            const c = ctx(task);\n            task.height = contentHeight / (maxYPos + 1);\n            task.top = row.y + params.rowPadding + (task.height * c.yPos);\n        }\n    }\n}\n/** string intersection between tasks */\nfunction _intersects(left, right) {\n    return (left.left + left.width) > right.left && left.left < (right.left + right.width);\n}\nfunction _byStartThenByLongestSortFn(a, b) {\n    return (a.left - b.left) || ((b.left + b.width) - (a.left + a.width));\n}\n", "import { getRelativePos, getRelativePosition } from '../utils/dom';\nimport { getContext } from 'svelte';\nexport function useCreateTask() {\n    const { columnService, utils } = getContext('services');\n    return function createTaskActionBound(node, options) {\n        return createTaskAction(node, {\n            columnService,\n            utils,\n            ...options,\n        });\n    };\n}\nconst MIN_DRAG_X = 2;\nconst MIN_DRAG_Y = 2;\nfunction createTaskAction(node, options) {\n    let startX;\n    let startFrom;\n    let mouseStartRight;\n    let direction;\n    let initialX;\n    let initialY;\n    let triggered = false;\n    /** dragging will not activate around the edges */\n    let deadZone = 10;\n    const container = () => options.container;\n    function isNearEdge(x, y) {\n        const rect = options.boundsContainer.getBoundingClientRect();\n        const nearBottomEdge = y - rect.top >= rect.height - deadZone;\n        const nearRightEdge = x - rect.left >= rect.width - deadZone;\n        return nearBottomEdge || nearRightEdge;\n    }\n    function onMousedown(event) {\n        if (!options.enabled) {\n            return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        if (isNearEdge(event.clientX, event.clientY)) {\n            return;\n        }\n        const [mousePosX, _] = getRelativePosition(container(), event);\n        const from = startFrom = options.utils.roundTo(options.columnService.getDateByPosition(mousePosX));\n        const x = startX = options.columnService.getPositionByDate(from) | 0;\n        const width = 0;\n        initialX = event.clientX;\n        initialY = event.clientY;\n        mouseStartRight = x + width;\n        window.addEventListener('pointermove', onMousemove, false);\n        window.addEventListener('pointerup', onMouseup);\n    }\n    ;\n    function onMousemove(event) {\n        if (!triggered) {\n            if (Math.abs(event.clientX - initialX) > MIN_DRAG_X || Math.abs(event.clientY - initialY) > MIN_DRAG_Y) {\n                triggered = true;\n            }\n            else {\n                return;\n            }\n        }\n        event.preventDefault();\n        const { x, width, y } = getValues(event);\n        options.onMove({\n            from: startFrom,\n            to: startFrom,\n            x,\n            width,\n            y,\n        });\n    }\n    ;\n    function getValues(event) {\n        const mousePos = getRelativePos(container(), event);\n        const x = startX;\n        const width = 0;\n        let resultX;\n        let resultWidth;\n        if (direction === 'left') {\n            if (mouseStartRight - mousePos.x <= 0) {\n                direction = 'right';\n                resultX = mouseStartRight;\n                resultWidth = mouseStartRight - mousePos.x;\n                mouseStartRight = mouseStartRight + width;\n            }\n            else {\n                resultX = mousePos.x;\n                resultWidth = mouseStartRight - mousePos.x;\n            }\n        }\n        else { // if (direction === 'right')\n            //resize right\n            if (mousePos.x - x <= 0) {\n                direction = 'left';\n                resultX = mousePos.x;\n                resultWidth = mousePos.x - x;\n                mouseStartRight = x;\n            }\n            else {\n                resultX = x;\n                resultWidth = mousePos.x - x;\n            }\n        }\n        return { x: resultX, width: resultWidth, y: mousePos.y };\n    }\n    function onMouseup(event) {\n        window.removeEventListener('pointerup', onMouseup);\n        window.removeEventListener('pointermove', onMousemove, false);\n        if (triggered) {\n            const { x, width, y } = getValues(event);\n            const newFrom = options.utils.roundTo(options.columnService.getDateByPosition(x));\n            const newTo = options.utils.roundTo(options.columnService.getDateByPosition(x + width));\n            const newLeft = options.columnService.getPositionByDate(newFrom) | 0;\n            const newRight = options.columnService.getPositionByDate(newTo) | 0;\n            options.onEnd({\n                from: newFrom,\n                to: newTo,\n                x: newLeft,\n                width: newRight - newLeft,\n                y,\n            });\n        }\n        mouseStartRight = null;\n        initialX = null;\n        initialY = null;\n        triggered = false;\n    }\n    ;\n    node.addEventListener('pointerdown', onMousedown);\n    return {\n        destroy() {\n            node.removeEventListener('pointerdown', onMousedown);\n            window.removeEventListener('pointermove', onMousemove);\n            window.removeEventListener('pointerup', onMouseup);\n        },\n        update(opts) {\n            Object.assign(options, opts);\n        },\n    };\n}\n", "<script>import { onMount, setContext, tick, onDestroy } from 'svelte';\nimport { writable, derived } from 'svelte/store';\nlet ganttElement;\nlet mainHeaderContainer;\nlet mainContainer;\nlet rowContainer;\nlet scrollables = [];\nlet mounted = false;\nimport { createDataStore } from './core/store';\nimport { Task, Row, TimeRange, TimeRangeHeader } from './entities';\nimport { Columns, ColumnHeader } from './column';\nimport { Resizer } from './ui';\nimport { createUtils, getIndicesOnly, getPositionByDate } from './utils/utils';\nimport { getRelativePos, isLeftClick } from './utils/dom';\nimport { provideGanttApi } from './core/api';\nimport { createTaskFactory } from './core/task';\nimport { collapseRow, expandRow, createRows } from './core/row';\nimport { TimeRangeFactory } from './core/timeRange';\nimport { DraggableGroup } from './core/drag';\nimport { SelectionManager } from './core/selectionManager';\nimport { createColumnService } from './core/column';\nimport { createDelegatedEventDispatcher } from './core/events';\nimport { getDuration, getAllPeriods } from './utils/date';\nimport { DefaultSvelteGanttDateAdapter } from './utils/defaultDateAdapter';\nimport * as layouts from './core/layouts';\nimport { useCreateTask } from './modules/create-tasks';\nimport Draggable from './core/drag/Draggable.svelte';\nfunction assertSet(values) {\n    for (const name in values) {\n        if (values[name] == null) {\n            throw new Error(`\"${name}\" is not set`);\n        }\n    }\n}\n/**\n * Rows to load in the gantt\n */\nexport let rows;\n/**\n * Tasks that display in the gantt\n */\nexport let tasks = [];\n/**\n * Timeranges that display in the gantt\n */\nexport let timeRanges = [];\nassertSet({ rows });\n$: if (mounted)\n    initRows(rows);\n$: if (mounted)\n    initTasks(tasks);\n$: if (mounted)\n    initTimeRanges(timeRanges);\n/** top and bottom padding of a single row in px */\nexport let rowPadding = 6;\n/** height of a single row in px */\nexport let rowHeight = 52;\nconst _rowHeight = writable(rowHeight);\nconst _rowPadding = writable(rowPadding);\n$: $_rowHeight = rowHeight;\n$: $_rowPadding = rowPadding;\nfunction toDateNum(date) {\n    return date instanceof Date ? date.valueOf() : date;\n}\n/** datetime timeline starts on, date */\nexport let from;\n/** datetime timeline ends on, date */\nexport let to;\nassertSet({ from, to });\nconst _from = writable(toDateNum(from));\nconst _to = writable(toDateNum(to));\n$: $_from = toDateNum(from);\n$: $_to = toDateNum(to);\n/** Minimum width of main gantt area in px */\nexport let minWidth = 800;\n/** should timeline stretch width to fit */\nexport let fitWidth = false;\nconst _minWidth = writable(minWidth);\nconst _fitWidth = writable(fitWidth);\n$: {\n    $_minWidth = minWidth;\n    $_fitWidth = fitWidth;\n}\n/** sets top level gantt class which can be used for styling */\nexport let classes = [];\n/**\n * list of headers used for main gantt area\n *  - unit: time unit used, e.g. day will create a cell in the header for each day in the timeline\n *  - format: datetime format used for header cell label\n **/\nexport let headers = [\n    { unit: 'day', format: 'MMMM Do' },\n    { unit: 'hour', format: 'H:mm' }\n];\n/**\n * List of zoom levels for gantt. Gantt cycles trough these parameters on ctrl+scroll.\n */\nexport let zoomLevels = [\n    {\n        headers: [\n            { unit: 'day', format: 'DD.MM.YYYY' },\n            { unit: 'hour', format: 'HH' }\n        ],\n        minWidth: 800,\n        fitWidth: true\n    },\n    {\n        headers: [\n            { unit: 'hour', format: 'ddd D/M, H A' },\n            { unit: 'minute', format: 'mm', offset: 15 }\n        ],\n        minWidth: 5000,\n        fitWidth: false\n    }\n];\n/** task content factory function, e.g. (task) => '<div>Custom task content</div>'  */\nexport let taskContent = null;\n/**\n * Width of table, used with SvelteGanttTable module\n */\nexport let tableWidth = 240;\n/** width of handle for resizing task */\nexport let resizeHandleWidth = 10;\n/** handler of button clicks, e.g. (task) => {debugger}, */\nexport let onTaskButtonClick = null;\nexport let dateAdapter = new DefaultSvelteGanttDateAdapter();\n/** minimum unit of time task date values will round to */\nexport let magnetUnit = 'minute';\n/** amount of units task date values will round to */\nexport let magnetOffset = 15;\nlet magnetDuration;\n$: setMagnetDuration(magnetUnit, magnetOffset);\nsetMagnetDuration(magnetUnit, magnetOffset);\nfunction setMagnetDuration(unit, offset) {\n    if (unit && offset) {\n        magnetDuration = getDuration(unit, offset);\n    }\n}\n/** duration unit of columns */\nexport let columnUnit = 'minute';\n/** duration width of column */\nexport let columnOffset = 15;\n// export until Svelte3 implements Svelte2's setup(component) hook\nexport let ganttTableModules = [];\nexport let ganttBodyModules = [];\n/**\n * When task is assigned to a child row display them on parent rows as well, used when rows are disabled as a tree.\n */\nexport let reflectOnParentRows = true;\n/**\n * When task is assigned to a parent row display them on child rows as well, used when rows are disabled as a tree.\n */\nexport let reflectOnChildRows = false;\n/**\n * Render columns in a canvas, results in a better performance.\n * Set to false if advanced CSS styling is needed.\n **/\nexport let useCanvasColumns = true;\n/** color of strokes seperating the columns in ganttbody */\nexport let columnStrokeColor = '#efefef';\n/** width of strokes seperating the columns in ganttbody */\nexport let columnStrokeWidth = 1;\n/**\n * object including a unit and fractions of that unit that should be highlighted eg. {unit: 'days', fractions: [0,6]} -> will highlight weekends.\n * highlighting will only work correctly if highlighted unit is the same or a constant fraction of the column unit eg. days, hours, minutes in the above.\n */\nexport let highlightedDurations = undefined;\nexport let highlightColor = '#6eb859';\n/** Allows working with the actual DOM node */\nexport let taskElementHook = null;\n/** Controls how the tasks will render */\nexport let layout = 'overlap';\nconst _layout = writable(layout);\n$: $_layout = layout;\nconst visibleWidth = writable(null);\nconst visibleHeight = writable(null);\nconst headerHeight = writable(null);\nconst _width = derived([visibleWidth, _minWidth, _fitWidth], ([visible, min, stretch]) => {\n    return stretch && visible > min ? visible : min;\n});\nconst dataStore = createDataStore();\nsetContext('dataStore', dataStore);\nconst { rowStore, taskStore, timeRangeStore, allTasks, allRows, allTimeRanges, rowTaskCache } = dataStore;\nexport const columnService = createColumnService({\n    get columns() { return columns; },\n    get magnetDuration() { return magnetDuration; },\n});\nlet disableTransition = false;\nasync function tickWithoutCSSTransition() {\n    disableTransition = true;\n    await tick();\n    ganttElement.offsetHeight; // force a reflow\n    disableTransition = false;\n}\nlet columns;\n$: {\n    columns = getColumnsV2($_from, $_to, columnUnit, columnOffset, $_width);\n    tickWithoutCSSTransition();\n    refreshTimeRanges();\n    refreshTasks();\n}\nfunction getColumnsV2(from, to, unit, offset, width) {\n    //BUG: Function is running twice on init, how to prevent it?\n    if (from instanceof Date)\n        from = from.valueOf();\n    if (to instanceof Date)\n        to = to.valueOf();\n    let cols = [];\n    const periods = getAllPeriods(from.valueOf(), to.valueOf(), unit, offset, highlightedDurations);\n    let left = 0;\n    let distance_point = 0;\n    periods.forEach(function (period) {\n        left = distance_point;\n        distance_point = getPositionByDate(period.to, $_from, $_to, $_width);\n        cols.push({\n            width: distance_point - left,\n            from: period.from,\n            to: period.to,\n            left: left,\n            duration: period.duration,\n            ...(period.isHighlighted && { bgHighlightColor: highlightColor })\n        });\n    });\n    return cols;\n}\nlet offsetWidth;\nlet offsetHeight;\nlet bottomScrollbarVisible = writable(offsetHeight - $visibleHeight);\nlet rightScrollbarVisible = writable(offsetWidth - $visibleWidth);\n$: $bottomScrollbarVisible = offsetHeight - $visibleHeight;\n$: $rightScrollbarVisible = offsetWidth - $visibleWidth;\nsetContext('dimensions', {\n    from: _from,\n    to: _to,\n    width: _width,\n    visibleWidth,\n    visibleHeight,\n    headerHeight,\n    bottomScrollbarVisible,\n    rightScrollbarVisible,\n});\nsetContext('options', {\n    dateAdapter,\n    taskElementHook,\n    taskContent,\n    rowPadding: _rowPadding,\n    rowHeight: _rowHeight,\n    layout: _layout,\n    resizeHandleWidth: resizeHandleWidth,\n    reflectOnParentRows,\n    reflectOnChildRows,\n    onTaskButtonClick\n});\nconst hoveredRow = writable(null);\nconst selectedRow = writable(null);\nconst ganttContext = {\n    rowContainer: null,\n    mainContainer: null,\n    mainHeaderContainer: null,\n    scrollables,\n    hoveredRow,\n    selectedRow,\n    updateLayout,\n    expandRow(row) {\n        expandRow(row);\n        updateLayout();\n    },\n    collapseRow(row) {\n        collapseRow(row);\n        updateLayout();\n    },\n    invalidatePosition,\n};\nsetContext('gantt', ganttContext);\nlet invalidatedTasks = {};\nlet invalidatedRows = {};\nlet invalidateFull = true;\nfunction invalidatePosition({ task, row }) {\n    if (row) {\n        invalidatedRows[row.model.id] = true;\n        invalidateFull = false;\n    }\n    if (task) {\n        invalidatedTasks[task.model.id] = true;\n        invalidatedRows[task.model.resourceId] = true;\n        invalidateFull = false;\n    }\n}\nonMount(() => {\n    Object.assign(ganttContext, {\n        rowContainer,\n        mainContainer,\n        mainHeaderContainer\n    });\n    mounted = true;\n});\nconst { onDelegatedEvent, offDelegatedEvent, onEvent } = createDelegatedEventDispatcher();\nonDelegatedEvent('click', 'data-task-id', (event, data, target) => {\n    const taskId = data;\n    const task = $taskStore.entities[taskId];\n    if (isLeftClick(event) && !target.classList.contains('sg-task-reflected') && !target.classList.contains('sg-ignore-click')) {\n        if (event.ctrlKey) {\n            selectionManager.toggleSelection(taskId);\n        }\n        else {\n            selectionManager.selectSingle(taskId);\n        }\n    }\n    api['tasks'].raise.select(task);\n});\nonDelegatedEvent('pointerover', 'data-row-id', (event, data, target) => {\n    $hoveredRow = data;\n});\nonDelegatedEvent('click', 'data-row-id', (event, data, target) => {\n    selectionManager.unSelectTasks();\n    if ($selectedRow == data) {\n        $selectedRow = null;\n        return;\n    }\n    $selectedRow = data;\n});\nonDelegatedEvent('dblclick', 'data-task-id', (event, data, target) => {\n    const taskId = data;\n    api['tasks'].raise.dblclicked($taskStore.entities[taskId], event);\n});\nonDelegatedEvent('pointerleave', 'empty', (event, data, target) => {\n    $hoveredRow = null;\n});\nonDestroy(() => {\n    offDelegatedEvent('click', 'data-task-id');\n    offDelegatedEvent('click', 'data-row-id');\n    offDelegatedEvent('dblclick', 'data-task-id');\n    selectionManager.unSelectTasks();\n});\nlet __scrollTop = 0;\nlet __scrollLeft = 0;\nfunction scrollable(node) {\n    const onscroll = event => {\n        const { scrollTop, scrollLeft } = node;\n        scrollables.forEach(scrollable => {\n            if (scrollable.orientation === 'horizontal') {\n                scrollable.node.scrollLeft = scrollLeft;\n            }\n            else {\n                scrollable.node.scrollTop = scrollTop;\n            }\n        });\n        __scrollTop = scrollTop;\n        __scrollLeft = scrollLeft;\n    };\n    node.addEventListener('scroll', onscroll);\n    return {\n        destroy() {\n            node.removeEventListener('scroll', onscroll, false);\n        }\n    };\n}\nfunction horizontalScrollListener(node) {\n    scrollables.push({ node, orientation: 'horizontal' });\n}\nfunction onResize(event) {\n    tableWidth = event.detail.left;\n}\nlet zoomLevel = 0;\nlet zooming = false;\nasync function onwheel(event) {\n    if (event.ctrlKey) {\n        event.preventDefault();\n        const prevZoomLevel = zoomLevel;\n        if (event.deltaY > 0) {\n            zoomLevel = Math.max(zoomLevel - 1, 0);\n        }\n        else {\n            zoomLevel = Math.min(zoomLevel + 1, zoomLevels.length - 1);\n        }\n        if (prevZoomLevel != zoomLevel && zoomLevels[zoomLevel]) {\n            const options = {\n                columnUnit: columnUnit,\n                columnOffset: columnOffset,\n                minWidth: $_minWidth,\n                ...zoomLevels[zoomLevel]\n            };\n            const scale = options.minWidth / $_width;\n            const node = mainContainer;\n            const mousepos = getRelativePos(node, event);\n            const before = node.scrollLeft + mousepos.x;\n            const after = before * scale;\n            const scrollLeft = after - mousepos.x + node.clientWidth / 2;\n            columnUnit = options.columnUnit;\n            columnOffset = options.columnOffset;\n            $_minWidth = options.minWidth;\n            if (options.headers)\n                headers = options.headers;\n            if (options.fitWidth)\n                $_fitWidth = options.fitWidth;\n            api['gantt'].raise.viewChanged();\n            zooming = true;\n            await tick();\n            node.scrollLeft = scrollLeft;\n            zooming = false;\n        }\n    }\n}\nfunction onDateSelected(event) {\n    $_from = event.detail.from;\n    $_to = event.detail.to;\n    api['gantt'].raise.dateSelected({ from: $_from, to: $_to });\n}\nfunction initRows(rowsData) {\n    //Bug: Running twice on change options\n    const rows = createRows(rowsData, { rowHeight });\n    rowStore.addAll(rows);\n    updateLayout();\n}\nconst { createTask, reflectTask } = createTaskFactory({\n    get rowEntities() { return $rowStore.entities; },\n    get rowPadding() { return rowPadding; },\n    getPositionByDate: (date) => columnService.getPositionByDate(date),\n});\nasync function initTasks(taskData) {\n    const tasks = [];\n    for (const taskModel of taskData) {\n        if (!draggingTasks[taskModel.id]) {\n            delete draggingTasks[taskModel.id];\n        }\n        const task = createTask(taskModel);\n        tasks.push(task);\n    }\n    taskStore.addAll(tasks);\n    updateLayout();\n}\nlet _reflectedTasksCache = {};\n$: {\n    _reflectedTasksCache = {};\n    for (const task of $allTasks) {\n        const row = $rowStore.entities[task.model.resourceId];\n        if (!row) {\n            continue;\n        }\n        if (reflectOnChildRows && row.allChildren) {\n            row.allChildren.forEach(r => {\n                const reflectedTask = reflectTask(task, r);\n                if (!_reflectedTasksCache[r.model.id]) {\n                    _reflectedTasksCache[r.model.id] = [];\n                }\n                _reflectedTasksCache[r.model.id].push(reflectedTask);\n            });\n        }\n        if (reflectOnParentRows && row.allParents) {\n            row.allParents.forEach(r => {\n                const reflectedTask = reflectTask(task, r);\n                if (!_reflectedTasksCache[r.model.id]) {\n                    _reflectedTasksCache[r.model.id] = [];\n                }\n                _reflectedTasksCache[r.model.id].push(reflectedTask);\n            });\n        }\n    }\n}\nfunction initTimeRanges(timeRangeData) {\n    const timeRanges = timeRangeData.map(timeRange => {\n        return timeRangeFactory.create(timeRange);\n    });\n    timeRangeStore.addAll(timeRanges);\n}\nexport const api = provideGanttApi();\nconst selectionManager = new SelectionManager(taskStore);\nexport const timeRangeFactory = new TimeRangeFactory(columnService);\nexport const utils = createUtils({\n    get from() { return $_from; },\n    get to() { return $_to; },\n    get width() { return $_width; },\n    get magnetOffset() { return magnetOffset; },\n    get magnetUnit() { return magnetUnit; },\n    get magnetDuration() { return magnetDuration; },\n    get dateAdapter() { return dateAdapter; },\n});\nsetContext('services', {\n    utils,\n    api,\n    selectionManager,\n    columnService,\n});\nexport function refreshTimeRanges() {\n    timeRangeStore._update(({ ids, entities }) => {\n        ids.forEach(id => {\n            const timeRange = entities[id];\n            const newLeft = columnService.getPositionByDate(timeRange.model.from) | 0;\n            const newRight = columnService.getPositionByDate(timeRange.model.to) | 0;\n            timeRange.left = newLeft;\n            timeRange.width = newRight - newLeft;\n        });\n        return { ids, entities };\n    });\n}\nexport function refreshTasks() {\n    $allTasks.forEach(task => {\n        const newLeft = columnService.getPositionByDate(task.model.from) | 0;\n        const newRight = columnService.getPositionByDate(task.model.to) | 0;\n        task.left = newLeft;\n        task.width = newRight - newLeft;\n    });\n    taskStore.refresh();\n}\nexport function getRowContainer() {\n    return rowContainer;\n}\nexport function selectTask(id) {\n    const task = $taskStore.entities[id];\n    if (task) {\n        selectionManager.selectSingle(id);\n    }\n}\nexport function unselectTasks() {\n    selectionManager.unSelectTasks();\n}\nexport function scrollToRow(id, scrollBehavior = 'auto') {\n    const { scrollTop, clientHeight } = mainContainer;\n    const row = $rowStore.entities[id];\n    if (!row) {\n        return;\n    }\n    const targetTop = row.y;\n    if (targetTop < scrollTop) {\n        mainContainer.scrollTo({\n            top: targetTop,\n            behavior: scrollBehavior\n        });\n    }\n    if (targetTop > scrollTop + clientHeight) {\n        mainContainer.scrollTo({\n            top: targetTop + row.height - clientHeight,\n            behavior: scrollBehavior\n        });\n    }\n}\nexport function scrollToTask(id, scrollBehavior = 'auto') {\n    const { scrollLeft, scrollTop, clientWidth, clientHeight } = mainContainer;\n    const task = $taskStore.entities[id];\n    if (!task)\n        return;\n    const row = $rowStore.entities[task.model.resourceId];\n    if (!row)\n        return;\n    const targetLeft = task.left;\n    const targetTop = row.y;\n    const options = {\n        top: undefined,\n        left: undefined,\n        behavior: scrollBehavior\n    };\n    if (targetLeft < scrollLeft) {\n        options.left = targetLeft;\n    }\n    if (targetLeft > scrollLeft + clientWidth) {\n        options.left = targetLeft + task.width - clientWidth;\n    }\n    if (targetTop < scrollTop) {\n        options.top = targetTop;\n    }\n    if (targetTop > scrollTop + clientHeight) {\n        options.top = targetTop + row.height - clientHeight;\n    }\n    mainContainer.scrollTo(options);\n}\nexport function updateTask(model) {\n    const task = createTask(model);\n    taskStore.upsert(task);\n    invalidatePosition({ task });\n    updateLayoutSync();\n}\nexport function updateTasks(models) {\n    const tasks = models.map(model => createTask(model));\n    taskStore.upsertAll(tasks);\n    tasks.forEach(task => invalidatePosition({ task }));\n    updateLayoutSync();\n}\nexport function removeTask(taskId) {\n    const task = $taskStore.entities[taskId];\n    if (!task) {\n        return;\n    }\n    taskStore.delete(taskId);\n    const row = $rowStore.entities[task.model.resourceId];\n    if (!row) {\n        return;\n    }\n    invalidatePosition({ row });\n    updateLayoutSync();\n}\nexport function removeTasks(taskIds) {\n    for (const taskId of taskIds) {\n        const task = $taskStore.entities[taskId];\n        if (!task) {\n            continue;\n        }\n        const row = $rowStore.entities[task.model.resourceId];\n        if (!row) {\n            continue;\n        }\n        invalidatePosition({ row });\n    }\n    taskStore.deleteAll(taskIds);\n    updateLayoutSync();\n}\nexport function updateRow(model) {\n    const row = createRows([model], { rowHeight });\n    rowStore.upsertAll(row);\n    updateLayout();\n    updateLayoutSync();\n}\nexport function updateRows(models) {\n    const rows = createRows(models, { rowHeight });\n    rowStore.upsertAll(rows);\n    updateLayout();\n    updateLayoutSync();\n}\nexport function getRow(resourceId) {\n    return $rowStore.entities[resourceId];\n}\nexport function getTask(id) {\n    return $taskStore.entities[id];\n}\nexport function getTasks(resourceId) {\n    if ($rowTaskCache[resourceId]) {\n        return $rowTaskCache[resourceId].map(id => $taskStore.entities[id]);\n    }\n    return null;\n}\nlet filteredRows = [];\nlet rowsAreOfSameHeight = true;\nlet rowContainerHeight = 0;\n$: {\n    filteredRows = [];\n    rowContainerHeight = 0;\n    layoutChanged;\n    const firstRow = $allRows[0];\n    for (const row of $allRows) {\n        if (!row.hidden) {\n            filteredRows.push(row);\n            if (firstRow && firstRow.height !== row.height) {\n                rowsAreOfSameHeight = false;\n            }\n            rowContainerHeight += row.height || rowHeight;\n        }\n    }\n}\nlet startIndex;\n$: {\n    if (rowsAreOfSameHeight) {\n        const rowHeight = rowContainerHeight / filteredRows.length;\n        startIndex = Math.floor(__scrollTop / rowHeight);\n    }\n    else {\n        startIndex = getIndicesOnly(filteredRows, __scrollTop, row => row.y)[0];\n    }\n}\nlet endIndex;\n$: {\n    if (rowsAreOfSameHeight) {\n        endIndex = Math.min(startIndex + Math.ceil($visibleHeight / rowHeight), filteredRows.length - 1);\n    }\n    else {\n        endIndex = getIndicesOnly(filteredRows, __scrollTop + $visibleHeight, row => row.y)[0];\n    }\n}\nlet paddingTop = 0;\n$: {\n    paddingTop = filteredRows[startIndex] ? filteredRows[startIndex].y : 0;\n}\nlet visibleRows = [];\n$: visibleRows = filteredRows.slice(startIndex, endIndex + 1);\nlet visibleTasks; // try to keep the same order in the array as before\nlet previousOrder = {};\n$: {\n    const tasks = [];\n    const rendered = {};\n    const tasksOrdered = [];\n    const order = {};\n    // because svelte detaches html elements when their order changes (even when keyed)\n    // this helps CSS transitions\n    let ordered = true;\n    let ordinal = 0;\n    function tryRestorePosition(task) {\n        if (!task)\n            return;\n        tasks.push(task);\n        const id = task.model.id;\n        if (previousOrder[id] != null) {\n            tasksOrdered[previousOrder[id]] = task;\n        }\n        else {\n            ordered = false;\n        }\n        order[id] = ordinal++;\n    }\n    for (let i = 0; i < visibleRows.length; i++) {\n        const row = visibleRows[i];\n        if ($rowTaskCache[row.model.id]) {\n            for (let j = 0; j < $rowTaskCache[row.model.id].length; j++) {\n                const id = $rowTaskCache[row.model.id][j];\n                rendered[id] = true;\n                tryRestorePosition($taskStore.entities[id]);\n            }\n        }\n        if (_reflectedTasksCache[row.model.id]) {\n            for (const task of _reflectedTasksCache[row.model.id]) {\n                tryRestorePosition(task);\n            }\n        }\n    }\n    // render all tasks being dragged if not already\n    for (const id in draggingTasks) {\n        if (!rendered[id]) {\n            rendered[id] = true;\n            tryRestorePosition($taskStore.entities[id]);\n        }\n    }\n    if (tasksOrdered.length !== tasks.length) {\n        ordered = false;\n    }\n    previousOrder = ordered ? previousOrder : order;\n    visibleTasks = ordered ? tasksOrdered : tasks;\n}\nlet layoutChanged = {};\nlet refreshLayout = {};\n/** apply layouts */\n$: {\n    refreshLayout;\n    const params = {\n        taskStore: $taskStore,\n        rowStore: $rowStore,\n        rowTasks: $rowTaskCache,\n        rowHeight,\n        rowPadding,\n        rowReflectedTasks: _reflectedTasksCache,\n        invalidatedRows,\n        invalidatedTasks,\n        invalidateFull,\n    };\n    if (layout === 'overlap') {\n        layouts.overlap(params);\n    }\n    if (layout === 'pack') {\n        layouts.pack(params);\n    }\n    if (layout === 'expand') {\n        layouts.expand(params);\n    }\n    layoutChanged = {};\n    invalidateFull = false;\n    invalidatedTasks = {};\n    invalidatedRows = {};\n}\n$: {\n    layout;\n    tasks;\n    rows;\n    updateLayout();\n}\nexport function updateLayoutSync(_invalidateFull) {\n    const params = {\n        taskStore: $taskStore,\n        rowStore: $rowStore,\n        rowTasks: $rowTaskCache,\n        rowHeight,\n        rowPadding,\n        rowReflectedTasks: _reflectedTasksCache,\n        invalidatedRows,\n        invalidatedTasks,\n        invalidateFull: _invalidateFull ?? invalidateFull,\n    };\n    if (layout === 'overlap') {\n        layouts.overlap(params);\n    }\n    if (layout === 'pack') {\n        layouts.pack(params);\n    }\n    if (layout === 'expand') {\n        layouts.expand(params);\n    }\n    layoutChanged = {};\n    invalidateFull = false;\n    invalidatedTasks = {};\n    invalidatedRows = {};\n}\nexport function updateLayout() {\n    refreshLayout = {};\n    invalidateFull = true;\n}\n/** enable create task by dragging */\nexport let enableCreateTask = false;\nexport let onCreateTask = (e) => {\n    const id = `creating-task-${(Math.random() + 1).toString(36).substring(2, 7)}`;\n    return ({\n        id,\n        label: ' ',\n        ...e,\n    });\n};\nexport let onCreatedTask = (task) => { };\nlet draggingTasks = {};\nlet _creatingTask = null;\nfunction onCreateTaskMove({ from, to, x, width, y }) {\n    if (!_creatingTask) {\n        // TODO:: incorrect for collapsible rows, if creating under one\n        const row = $allRows.find(row => row.y < y && y < row.y + row.height);\n        const resourceId = row.model.id;\n        _creatingTask = createTask(onCreateTask({\n            resourceId,\n            from,\n            to,\n        }));\n        taskStore.upsert(_creatingTask);\n        draggingTasks[_creatingTask.model.id] = {\n            x: _creatingTask.left,\n            y: _creatingTask.top,\n            width: _creatingTask.width,\n            resizing: true,\n        };\n    }\n    draggingTasks[_creatingTask.model.id].x = x;\n    draggingTasks[_creatingTask.model.id].width = width;\n}\nfunction onCreateTaskEnd({ from, to, x, width }) {\n    _creatingTask.model.from = from;\n    _creatingTask.model.to = to;\n    _creatingTask.left = x;\n    _creatingTask.width = width;\n    taskStore.upsert(_creatingTask);\n    delete draggingTasks[_creatingTask.model.id];\n    onCreatedTask(_creatingTask);\n    _creatingTask = null;\n}\nconst dragCreateTasks = useCreateTask();\nfunction onChange(e) {\n    if (e.detail.changes.some(c => !c.targetRow)) {\n        return;\n    }\n    for (const change of e.detail.changes) {\n        const { task, current, previous, sourceRow, targetRow } = change;\n        if (!targetRow) {\n            continue;\n        }\n        const model = task.model;\n        if (targetRow) {\n            api.tasks.raise.switchRow(task, targetRow, sourceRow);\n        }\n        const changed = previous.from != current.from || previous.to != current.to || (sourceRow && sourceRow.model.id !== targetRow.model.id);\n        if (changed) {\n            model.from = current.from;\n            model.to = current.to;\n            model.resourceId = targetRow.model.id;\n            const newTask = {\n                ...task,\n                left: current.left,\n                top: current.top,\n                width: current.width,\n            };\n            api.tasks.raise.change({ task: newTask, sourceRow, targetRow, previousState: previous });\n            api.tasks.raise.changed({ task: newTask, sourceRow, targetRow, previousState: previous });\n            taskStore.update(newTask);\n            invalidatePosition({ row: sourceRow });\n            invalidatePosition({ task: newTask });\n        }\n    }\n}\nfunction onItemsChange(e) {\n    draggingTasks = { ...e.detail.items };\n}\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<div\n    class=\"sg-gantt {classes}\"\n    class:sg-disable-transition={disableTransition}\n    bind:this={ganttElement}\n    on:pointerdown|stopPropagation={onEvent}\n    on:click|stopPropagation={onEvent}\n    on:dblclick={onEvent}\n    on:pointerover={onEvent}\n    on:pointerleave={onEvent}\n>\n    {#each ganttTableModules as module}\n        <svelte:component\n            this={module}\n            {rowContainerHeight}\n            {paddingTop}\n            {tableWidth}\n            {...$$restProps}\n            {visibleRows}\n        />\n\n        <Resizer x={tableWidth} on:resize={onResize} container={ganttElement}></Resizer>\n    {/each}\n\n    <div class=\"sg-timeline sg-view\">\n        <div class=\"sg-header\" bind:this={mainHeaderContainer} bind:clientHeight={$headerHeight} style={`padding-right: ${$rightScrollbarVisible}px;`}>\n            <div class=\"sg-header-scroller\" use:horizontalScrollListener>\n                <div class=\"header-container\" style=\"width:{$_width}px\">\n                    <ColumnHeader\n                        {headers}\n                        ganttBodyColumns={columns}\n                        ganttBodyUnit={columnUnit}\n                        on:dateSelected={onDateSelected}\n                    />\n                    {#each $allTimeRanges as timeRange (timeRange.model.id)}\n                        <TimeRangeHeader {...timeRange} />\n                    {/each}\n                </div>\n            </div>\n        </div>\n\n        <div\n            class=\"sg-timeline-body\"\n            bind:this={mainContainer}\n            use:scrollable\n            class:zooming\n            on:wheel={onwheel}\n            bind:clientHeight={$visibleHeight}\n            bind:offsetHeight={offsetHeight}\n            bind:clientWidth={$visibleWidth}\n            bind:offsetWidth={offsetWidth}\n            use:dragCreateTasks={{ container: rowContainer, enabled: enableCreateTask, onMove: onCreateTaskMove, onEnd: onCreateTaskEnd, boundsContainer: mainContainer }}\n        >\n            <div class=\"content\" style=\"width:{$_width}px\">\n                <Columns {columns} {columnStrokeColor} {columnStrokeWidth} {useCanvasColumns} />\n\n                <div\n                    class=\"sg-rows\"\n                    bind:this={rowContainer}\n                    style=\"height:{rowContainerHeight}px;\"\n                >\n                    <div style=\"transform: translateY({paddingTop}px);\">\n                        {#each visibleRows as row (row.model.id)}\n                            <Row {row} />\n                        {/each}\n                    </div>\n                </div>\n\n                <div class=\"sg-foreground\">\n                    {#each $allTimeRanges as timeRange (timeRange.model.id)}\n                        <TimeRange {...timeRange} />\n                    {/each}\n\n                    <DraggableGroup items={draggingTasks} on:change={onChange} on:itemsChange={onItemsChange}>\n                        {#each visibleTasks as task (task.model.id)}\n                            <Draggable {task} let:state let:onPointerDown>\n                                <Task\n                                    {...task}\n                                    model={task.model}\n                                    left={state.x}\n                                    top={state.y}\n                                    width={state.width}\n                                    height={task.height}\n                                    dragging={state.dragging}\n                                    resizing={state.resizing}\n                                    on:pointerdown={onPointerDown}\n                                />\n                            </Draggable>\n                        {/each}\n                    </DraggableGroup>\n                </div>\n                {#each ganttBodyModules as module}\n                    <svelte:component\n                        this={module}\n                        {paddingTop}\n                        {visibleRows}\n                        {...$$restProps}\n                    />\n                {/each}\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    :global(.sg-gantt) {\n        --sg-column-header-bg-hover: #f9f9f9;\n        --sg-column-border-color: #efefef;\n        --sg-column-header-border-color: #efefef;\n        --sg-table-cell-border-color: #efefef;\n        --sg-table-header-cell-border-color: #efefef;\n        --sg-table-header-cell-bg: #fbfbfb;\n        --sg-resize-color: #e9eaeb;\n        --sg-dependency-arrow-color: #64748b;\n        --sg-task-resize-color: rgba(255, 255, 255, 0.5);\n        --sg-task-selected-outline-color: rgba(3, 169, 244, 0.5);\n/* \n        --sg-column-header-bg-hover: #333;\n        --sg-column-border-color: #333;\n        --sg-column-header-border-color: #333;\n        --sg-table-cell-border-color: #333;\n        --sg-table-header-cell-border-color: #333;\n        --sg-table-header-cell-bg: #333;\n        --sg-resize-color: #333;\n        --sg-dependency-arrow-color: red;\n        --sg-task-resize-color: #ccc; */\n    }\n\n    .sg-disable-transition :global(.sg-task),\n    .sg-disable-transition :global(.sg-milestone) {\n        transition:\n            transform 0s,\n            background-color 0.2s,\n            width 0s !important;\n    }\n\n    :global(.sg-view:not(:first-child)) {\n        margin-left: 5px;\n    }\n\n    .sg-timeline {\n        flex: 1 1 0%;\n        display: flex;\n        flex-direction: column;\n        overflow-x: auto;\n    }\n\n    .sg-gantt {\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n        position: relative;\n    }\n\n    .sg-foreground {\n        box-sizing: border-box;\n        overflow: hidden;\n        top: 0;\n        left: 0;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n        pointer-events: none;\n    }\n\n    .sg-rows {\n        width: 100%;\n        box-sizing: border-box;\n        overflow: hidden;\n    }\n\n    .sg-timeline-body {\n        overflow: auto;\n        flex: 1 1 auto;\n    }\n\n    .sg-header-scroller {\n        /* border-right: 1px solid #efefef; // replace with element, or conditionally draw this border */\n        overflow: hidden;\n        position: relative;\n    }\n\n    .content {\n        position: relative;\n    }\n\n    :global(*) {\n        box-sizing: border-box;\n    }\n</style>\n", "<script>import { whenEnterPress } from '../../utils/dom';\nimport { createEventDispatcher } from 'svelte';\nexport let row;\nexport let expandIconHtml = null;\nexport let collapseIconHtml = null;\nconst dispatch = createEventDispatcher();\nfunction onExpandToggle() {\n    if (row.model.expanded || row.model.expanded == null) {\n        dispatch('rowCollapsed', { row });\n    }\n    else {\n        dispatch('rowExpanded', { row });\n    }\n}\n</script>\n\n<div class=\"sg-cell-inner\" style=\"padding-left: {row.childLevel * 3}em\">\n    {#if row.children}\n        <div\n            class=\"sg-tree-expander\"\n            role=\"button\"\n            tabindex=\"0\"\n            on:click={onExpandToggle}\n            on:keydown={whenEnterPress(onExpandToggle)}\n        >\n            {#if row.model.expanded}\n                {#if expandIconHtml}\n                    {@html expandIconHtml}\n                {:else}\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"sg-tree-icon\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m19.5 8.25-7.5 7.5-7.5-7.5\" />\n                    </svg>\n                {/if}\n            {:else}\n                {#if collapseIconHtml}\n                    {@html collapseIconHtml}\n                {:else}\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"sg-tree-icon\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m8.25 4.5 7.5 7.5-7.5 7.5\" />\n                    </svg>\n                {/if}\n            {/if}\n        </div>\n    {/if}\n    <slot />\n</div>\n\n<style>\n    .sg-tree-expander {\n        cursor: pointer;\n        min-width: 1.4em;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .sg-cell-inner {\n        display: flex;\n    }\n\n    .sg-tree-icon {\n        width: 1rem;\n        height: 1rem;\n    }\n</style>\n", "<script>import { getContext } from 'svelte';\nimport TableTreeCell from './TableTreeCell.svelte';\nimport { normalizeClassAttr } from '../../utils/dom';\nexport let headers = null;\nexport let row = null;\nconst { hoveredRow, selectedRow } = getContext('gantt');\nlet treeIndentationStyle = '';\n$: {\n    treeIndentationStyle = row.parent ? `padding-left: ${row.childLevel * 3}em;` : '';\n}\n$: classes = normalizeClassAttr(row.model.classes);\n</script>\n\n<div\n    data-row-id={row.model.id}\n    style=\"height:{row.height}px\"\n    class=\"sg-table-row {classes} sg-table-row-level-{row.childLevel}\"\n    class:sg-row-expanded={row.model.expanded}\n    class:sg-hover={$hoveredRow == row.model.id}\n    class:sg-selected={$selectedRow == row.model.id}\n>\n    {#each headers as header}\n        <div class=\"sg-table-body-cell sg-table-cell\" style=\"width:{header.width}px\">\n            {#if header.type == 'tree'}\n                <TableTreeCell on:rowCollapsed on:rowExpanded {row}>\n                    {#if row.model.iconClass}\n                        <div class=\"sg-table-icon\">\n                            <i class={row.model.iconClass}></i>\n                        </div>\n                    {/if}\n\n                    {#if row.model.headerHtml}\n                        {@html row.model.headerHtml}\n                    {:else if header.renderer}\n                        {@html header.renderer(row)}\n                    {:else}\n                        {row.model[header.property]}\n                    {/if}\n                </TableTreeCell>\n            {:else}\n                {#if row.model.iconClass}\n                    <div class=\"sg-table-icon\">\n                        <i class={row.model.iconClass}></i>\n                    </div>\n                {/if}\n\n                {#if row.model.headerHtml}\n                    {@html row.model.headerHtml}\n                {:else if header.renderer}\n                    {@html header.renderer(row)}\n                {:else if header.type === 'resourceInfo'}\n                    <img class=\"sg-resource-image\" src={row.model.imageSrc} alt=\"\" />\n                    <div class=\"sg-resource-title\">\n                        {row.model[header.property]}\n                    </div>\n                {:else}\n                    {row.model[header.property]}\n                {/if}\n            {/if}\n        </div>\n    {/each}\n</div>\n\n<style>\n    .sg-table-row {\n        display: inline-flex;\n        min-width: 100%;\n        align-items: stretch;\n\n        position: relative;\n\n        font-weight: 400;\n        font-size: 14px;  \n        transition: height 0.2s;\n    }\n\n    .sg-table-cell {\n        border-right: 1px solid var(--sg-table-cell-border-color);\n    }\n\n    .sg-table-cell:last-child {\n        border-right: 0;\n    }\n\n    .sg-table-body-cell {\n        border-bottom: 1px solid var(--sg-table-cell-border-color);\n        font-weight: bold;\n    }\n\n    .sg-table-row:last-child > .sg-table-body-cell {\n        border-bottom: 0;\n    }\n\n    .sg-resource-image {\n        width: 2.4em;\n        height: 2.4em;\n        border-radius: 50%;\n        margin-right: 0.6em;\n\n        background: #047c69;\n    }\n\n    .sg-resource-info {\n        flex: 1;\n        height: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n    }\n\n    .sg-table-icon {\n        margin-right: 0.5em;\n    }\n</style>\n", "<script context=\"module\">\n    export const type = 'table';\n</script>\n\n<script>import { createEventDispatcher, onMount, getContext } from 'svelte';\nconst dispatch = createEventDispatcher();\nimport TableRow from './TableRow.svelte';\nexport let tableWidth;\nexport let paddingTop;\nexport let rowContainerHeight;\nexport let visibleRows;\n// list of columns used in the table\n// title: label to display in the header\n// property: property of row to display in the cell\n// width: width of column\nexport let tableHeaders = [{ title: 'Name', property: 'label', width: 100 }];\nconst { headerHeight, bottomScrollbarVisible } = getContext('dimensions');\nconst { rowPadding, rowHeight } = getContext('options');\nconst { rowStore, taskStore } = getContext('dataStore');\nconst { scrollables, updateLayout } = getContext('gantt');\nonMount(() => {\n    dispatch('init', { module: this });\n});\nlet headerContainer;\nfunction scrollListener(node) {\n    scrollables.push({ node, orientation: 'vertical' });\n    function onScroll(event) {\n        headerContainer.scrollLeft = node.scrollLeft;\n    }\n    node.addEventListener('scroll', onScroll);\n    return {\n        destroy() {\n            node.removeEventListener('scroll', onScroll);\n        }\n    };\n}\nlet scrollWidth;\n$: {\n    let sum = 0;\n    tableHeaders.forEach(header => {\n        sum += header.width;\n    });\n    scrollWidth = sum;\n}\nfunction onRowExpanded(event) {\n    const row = event.detail.row;\n    row.model.expanded = true;\n    if (row.children)\n        show(row.children);\n    updateLayout();\n}\nfunction onRowCollapsed(event) {\n    const row = event.detail.row;\n    row.model.expanded = false;\n    if (row.children)\n        hide(row.children);\n    updateLayout();\n}\nfunction hide(children) {\n    for (const row of children) {\n        if (row.children)\n            hide(row.children);\n        row.hidden = true;\n    }\n}\nfunction show(children, hidden = false) {\n    for (const row of children) {\n        if (row.children)\n            show(row.children, !row.model.expanded);\n        row.hidden = hidden;\n    }\n}\n</script>\n\n<div class=\"sg-table sg-view\" style=\"width:{tableWidth}px;\">\n    <div class=\"sg-table-header\" style=\"height:{$headerHeight}px\" bind:this={headerContainer}>\n        {#each tableHeaders as header}\n            <div class=\"sg-table-header-cell sg-table-cell\" style=\"width:{header.width}px\">\n                {header.title}\n            </div>\n        {/each}\n    </div>\n\n    <div class=\"sg-table-body\" style={`padding-bottom: ${$bottomScrollbarVisible}px;`}>\n        <div class=\"sg-table-scroller\" use:scrollListener>\n            <div\n                class=\"sg-table-rows\"\n                style=\"padding-top:{paddingTop}px;height:{rowContainerHeight}px;\"\n            >\n                {#each visibleRows as row}\n                    <TableRow\n                        {row}\n                        headers={tableHeaders}\n                        on:rowExpanded={onRowExpanded}\n                        on:rowCollapsed={onRowCollapsed}\n                    />\n                {/each}\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    .sg-table {\n        overflow-x: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .sg-table-scroller {\n        width: 100%;\n        /* border-bottom: 1px solid #efefef; // instead of padding-bottom use an element (with borders) */\n        overflow-y: hidden;\n    }\n\n    .sg-table-header {\n        display: flex;\n        align-items: stretch;\n        overflow: hidden;\n        border-bottom: 1px solid var(--sg-table-header-cell-border-color);\n        background: var(--sg-table-header-cell-bg);\n    }\n\n    .sg-table-body {\n        display: flex;\n        flex: 1 1 0;\n        width: 100%;\n        overflow-y: hidden;\n    }\n\n    .sg-table-header-cell {\n        font-size: 14px;\n        font-weight: 400;\n    }\n\n    :global(.sg-table-cell) {\n        white-space: nowrap;\n        overflow: hidden;\n\n        display: flex;\n        align-items: center;\n        flex-shrink: 0;\n\n        padding: 0 0.5em;\n        height: 100%;\n    }\n\n    :global(.sg-table-cell:last-child) {\n        flex-grow: 1;\n    }\n</style>\n", "<script>import { getContext } from 'svelte';\nconst { rowStore, taskStore } = getContext('dataStore');\nexport let id;\nexport let fromId;\nexport let toId;\nexport let stroke = undefined;\nexport let strokeWidth = undefined;\nconst MIN_LEN = 12;\nconst ARROW_SIZE = 5;\nlet arrowPath;\nlet path;\nlet fromTask;\nlet isFromRowHidden;\nlet toTask;\nlet isToRowHidden;\n$: {\n    fromTask = $taskStore.entities[fromId];\n    isFromRowHidden = $rowStore.entities[fromTask.model.resourceId].hidden;\n    toTask = $taskStore.entities[toId];\n    isToRowHidden = $rowStore.entities[toTask.model.resourceId].hidden;\n    let startY = fromTask.top + fromTask.height / 2;\n    let startX = fromTask.left + fromTask.width;\n    let endY = toTask.top + toTask.height / 2;\n    let endX = toTask.left;\n    let width = endX - startX;\n    let height = endY - startY;\n    if (isFromRowHidden) {\n        path = `M${endX} ${endY}`;\n        if (startX + MIN_LEN >= endX && startY != endY) {\n            path += `L ${endX + 1.5 - MIN_LEN} ${endY}`;\n        }\n        else {\n            path += `L ${endX + 1.5 - width / 2} ${endY}`;\n        }\n        path += `m -2 -2 a 2 2 0 1 1 0 4 a 2 2 0 1 1 0 -4`;\n        arrowPath = `M${toTask.left - ARROW_SIZE}  ${toTask.top + toTask.height / 2 - ARROW_SIZE} \n                            L${toTask.left} ${toTask.top + toTask.height / 2} \n                            L${toTask.left - ARROW_SIZE} ${toTask.top + toTask.height / 2 + ARROW_SIZE} Z`;\n    }\n    else if (isToRowHidden) {\n        path = `M${startX} ${startY}`;\n        if (startX + MIN_LEN >= endX && startY != endY) {\n            path += `L ${startX + 1.5 + MIN_LEN} ${startY}`;\n        }\n        else {\n            path += `L ${startX + 1.5 + width / 2} ${startY}`;\n        }\n        path += `m -2 -2 a 2 2 0 1 1 0 4 a 2 2 0 1 1 0 -4`;\n        arrowPath = ``;\n    }\n    else if (!isFromRowHidden && !isToRowHidden) {\n        path = `M${startX} ${startY}`;\n        if (startX + MIN_LEN >= endX && startY != endY) {\n            path += `L ${startX + MIN_LEN} ${startY} \n                            L ${startX + MIN_LEN} ${startY + height / 2}\n                            L ${endX - MIN_LEN} ${startY + height / 2}\n                            L ${endX - MIN_LEN} ${endY}\n                            L ${endX - 2} ${endY}`;\n        }\n        else {\n            path += `L ${startX + width / 2} ${startY} \n                            L ${startX + width / 2} ${endY}\n                            L ${endX - 2} ${endY}`;\n        }\n        arrowPath = `M${toTask.left - ARROW_SIZE} ${toTask.top + toTask.height / 2 - ARROW_SIZE} \n                            L${toTask.left} ${toTask.top + toTask.height / 2} \n                            L${toTask.left - ARROW_SIZE} ${toTask.top + toTask.height / 2 + ARROW_SIZE} Z`;\n    }\n}\n</script>\n\n{#if (!isFromRowHidden && !isToRowHidden) || isFromRowHidden !== isToRowHidden}\n    <div class=\"sg-dependency\" style=\"left:0;top:0\" data-dependency-id={id}>\n        <svg\n            class=\"sg-arrow\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            shape-rendering=\"crispEdges\"\n            height=\"100%\"\n            width=\"100%\"\n        >\n            <path class=\"sg-arrow-path select-area\" d={path} style:stroke={stroke} style:stroke-width={strokeWidth != null ? `${strokeWidth}px` : null} />\n            <path class=\"sg-arrow-head\" d={arrowPath} style:fill={stroke} />\n        </svg>\n    </div>\n{/if}\n\n<style>\n    .sg-dependency {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n    }\n\n    .sg-arrow {\n        position: absolute;\n        left: 0px;\n        pointer-events: none;\n    }\n\n    :global(path.sg-arrow-path) {\n        stroke: var(--sg-dependency-arrow-color);\n        fill: transparent;\n        stroke-width: 2px;\n    }\n\n    :global(.sg-arrow-head) {\n        fill: var(--sg-dependency-arrow-color);\n    }\n\n    .select-area {\n        pointer-events: visible;\n        position: absolute;\n    }\n</style>\n", "<script>import { getContext } from 'svelte';\nimport Dependency from './Dependency.svelte';\nconst { visibleHeight } = getContext('dimensions');\nconst { taskStore } = getContext('dataStore');\nexport let paddingTop;\nexport let dependencies = [];\nlet visibleDependencies = [];\n$: {\n    const result = [];\n    for (let i = 0; i < dependencies.length; i++) {\n        const dependency = dependencies[i];\n        const map = $taskStore.entities;\n        const fromTask = map[dependency.fromId];\n        const toTask = map[dependency.toId];\n        if (fromTask &&\n            toTask &&\n            Math.min(fromTask.top, toTask.top) <= paddingTop + $visibleHeight &&\n            Math.max(fromTask.top, toTask.top) >= paddingTop) {\n            result.push(dependency);\n        }\n    }\n    visibleDependencies = result;\n}\n</script>\n\n<div class=\"dependency-container\">\n    {#each visibleDependencies as dependency (dependency.id)}\n        <Dependency {...dependency} />\n    {/each}\n</div>\n\n<style>\n    .dependency-container {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n\n        pointer-events: none;\n        top: 0;\n        float: left;\n        overflow: hidden;\n        z-index: 0;\n    }\n</style>\n", "import { isDraggable } from '../../utils/utils';\nimport { useDraggable } from '../../core/drag';\nimport { getRelativePos, getRowAtPoint } from '../../utils/dom';\nconst defaults = {\n    enabled: true,\n    elementContent: () => {\n        const element = document.createElement('div');\n        element.innerHTML = 'New Task';\n        Object.assign(element.style, {\n            position: 'absolute',\n            background: '#eee',\n            padding: '0.5em 1em',\n            fontSize: '12px',\n            pointerEvents: 'none'\n        });\n        return element;\n    }\n};\nexport class SvelteGanttExternal {\n    draggable;\n    element;\n    options;\n    constructor(node, options) {\n        this.options = Object.assign({}, defaults, options);\n        this.draggable = useDraggable(node, {\n            onDrag: this.onDrag.bind(this),\n            dragAllowed: () => this.options.enabled,\n            resizeAllowed: false,\n            onDrop: this.onDrop.bind(this),\n            container: document.body,\n            getX: (event) => event.pageX,\n            getY: (event) => event.pageY,\n            getWidth: () => 0\n        });\n    }\n    onDrag({ x, y }) {\n        if (!this.element) {\n            this.element = this.options.elementContent();\n            document.body.appendChild(this.element);\n            this.options.dragging = true;\n        }\n        this.element.style.top = y + 'px';\n        this.element.style.left = x + 'px';\n    }\n    onDrop(event) {\n        const gantt = this.options.gantt;\n        const rowId = getRowAtPoint(event.mouseEvent);\n        const targetRow = gantt.getRow(rowId);\n        if (targetRow && isDraggable(targetRow.model)) {\n            const mousePos = getRelativePos(gantt.getRowContainer(), event.mouseEvent);\n            const date = gantt.utils.getDateByPosition(mousePos.x);\n            this.options.onsuccess?.(targetRow, date, gantt);\n        }\n        else {\n            this.options.onfail?.();\n        }\n        document.body.removeChild(this.element);\n        this.options.dragging = false;\n        this.element = null;\n    }\n}\n", "/**\n * Date adapter that uses MomentJS\n */\nexport class MomentSvelteGanttDateAdapter {\n    moment;\n    constructor(moment) {\n        this.moment = moment;\n    }\n    format(date, format) {\n        return this.moment(date).format(format);\n    }\n    roundTo(date, unit, offset) {\n        const m = this.moment(date);\n        roundMoment(m, offset, unit);\n        return m.valueOf();\n    }\n}\nconst aliases = {\n    hour: 'hours',\n    minute: 'minutes',\n    second: 'seconds',\n    millisecond: 'milliseconds'\n};\n// TODO: write tests for this\nfunction roundMoment(m, precision, key, direction = 'round') {\n    if (precision === 1 && key === 'day') {\n        precision = 24;\n        key = 'hours';\n    }\n    if (aliases[key]) {\n        key = aliases[key];\n    }\n    const methods = {\n        hours: 24,\n        minutes: 60,\n        seconds: 60,\n        milliseconds: 1000\n    };\n    if (!methods[key]) {\n        console.warn(`Rounding dates by ${key} is not supported`);\n    }\n    let value = 0;\n    let rounded = false;\n    let subRatio = 1;\n    let maxValue;\n    for (const k in methods) {\n        if (k === key) {\n            value = m.get(key);\n            maxValue = methods[k];\n            rounded = true;\n        }\n        else if (rounded) {\n            subRatio *= methods[k];\n            value += m.get(k) / subRatio;\n            m.set(k, 0);\n        }\n    }\n    value = Math[direction](value / precision) * precision; // value is date represented in units of `key`, ignoring the bigger units, eg 14h30m->14.5h\n    value = Math.min(value, maxValue);\n    m.set(key, value);\n    return m;\n}\n"],
  "mappings": "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",
  "names": ["type", "element", "ctx", "model", "ctx", "create_if_block", "ctx", "create_if_block", "task", "event", "ctx", "ctx", "ctx", "ctx", "create_if_block", "ctx", "type", "element", "expandRow", "MIN_DRAG_X", "MIN_DRAG_Y", "ctx", "from", "to", "scrollable", "rows", "createTask", "reflectTask", "tasks", "timeRanges", "row", "rowHeight", "ctx", "create_if_block_1", "create_if_block_3", "create_if_block_2", "create_if_block", "ctx", "create_if_block_4", "create_if_block_5", "create_if_block_3", "create_if_block_1", "create_if_block_2", "ctx", "hide", "show", "ctx", "create_if_block", "ctx", "element"]
}
