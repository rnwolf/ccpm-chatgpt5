{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/utils.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/dom.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/lifecycle.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/scheduler.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/transitions.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/each.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/spread.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/Component.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/shared/version.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/internal/disclose-version/index.js", "../../../../node_modules/.pnpm/svelte@4.2.19/node_modules/svelte/src/runtime/store/index.js", "../../src/core/store.ts", "../../src/utils/dom.ts", "../../src/utils/utils.ts", "../../../../node_modules/.pnpm/style-inject@0.3.0/node_modules/style-inject/dist/style-inject.es.js", "../../src/entities/Task.svelte", "../../src/entities/Row.svelte", "../../src/entities/TimeRange.svelte", "../../src/core/constants.ts", "../../src/core/drag/draggable.ts", "../../src/core/drag/DraggableGroup.svelte", "../../src/core/drag/Draggable.svelte", "../../src/entities/TimeRangeHeader.svelte", "../../src/utils/date.ts", "../../src/column/ColumnHeaderRow.svelte", "../../src/column/ColumnHeader.svelte", "../../src/column/canvas.ts", "../../src/column/Columns.svelte", "../../src/ui/Resizer.svelte", "../../src/core/api.ts", "../../src/core/task.ts", "../../src/core/row.ts", "../../src/core/timeRange.ts", "../../src/core/selectionManager.ts", "../../src/core/column.ts", "../../src/core/events.ts", "../../src/utils/defaultDateAdapter.ts", "../../src/core/layouts.ts", "../../src/modules/create-tasks.ts", "../../src/Gantt.svelte", "../../src/modules/table/TableTreeCell.svelte", "../../src/modules/table/TableRow.svelte", "../../src/modules/table/Table.svelte", "../../src/modules/dependencies/Dependency.svelte", "../../src/modules/dependencies/GanttDependencies.svelte", "../../src/modules/external/external.ts", "../../src/utils/momentDateAdapter.ts"],
  "sourcesContent": ["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n", "import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n", "import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n", "import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n", "import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n", "import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n", "/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n", "import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n", "// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n", "import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n", "import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n", null, null, null, "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n    import type { TaskModel } from '../core/task';\n    import { normalizeClassAttr } from '../utils/dom';\n    import { isResizable } from '../utils/utils';\n\n    export let model: TaskModel;\n    export let height: number;\n    export let left: number;\n    export let top: number;\n    export let width: number;\n    export let reflected = false;\n    export let animating = true;\n\n    export let dragging = false;\n    export let resizing = false;\n\n    const { rowStore } = getContext('dataStore');\n    const { taskContent, onTaskButtonClick, taskElementHook } = getContext('options');\n    const { selectionManager } = getContext('services');\n\n    const selectedTasks = selectionManager._selectedTasks;\n\n    let _ignoreClick = false;\n\n    function taskElement(node, model) {\n        if (taskElementHook) {\n            return taskElementHook(node, model);\n        }\n    }\n\n    function onClick(event: MouseEvent) {\n        if (onTaskButtonClick) {\n            onTaskButtonClick(model, event);\n        }\n    }\n\n    $: classes = model.classes ? normalizeClassAttr(model.classes) : 'sg-task-default';\n\n    let resizeEnabled: boolean;\n    $: {\n        const row = $rowStore.entities[model.resourceId];\n        resizeEnabled = model.type !== 'milestone' && row && isResizable(row.model) && isResizable(model);\n    }\n\n    let _moving: boolean;\n    $: {\n        _moving = dragging || resizing;\n    }\n</script>\n\n<div\n    data-task-id={model.id}\n    use:taskElement={model}\n    class=\"sg-task {classes}\"\n    class:sg-milestone={model.type === 'milestone'}\n    style=\"width:{width}px; height:{height}px; left: {left}px; top: {top}px;\"\n    class:moving={_moving}\n    class:animating={animating}\n    class:sg-task-reflected={reflected}\n    class:sg-task-selected={$selectedTasks[model.id]}\n    class:resize-enabled={resizeEnabled}\n    class:sg-task--sticky={model.stickyLabel}\n    class:sg-ignore-click={_ignoreClick}\n    class:sg-task-instant={width === 0}\n    on:pointerdown\n>\n    {#if model.type === 'milestone'}\n        <div class=\"sg-milestone__diamond\"></div>\n    {/if}\n    {#if model.amountDone}\n        <div class=\"sg-task-background\" style=\"width:{model.amountDone}%\" />\n    {/if}\n    <div class=\"sg-task-content\">\n        {#if model.html}\n            {@html model.html}\n        {:else if taskContent}\n            {@html taskContent(model)}\n        {:else}\n            {model.label}\n        {/if}\n        {#if model.showButton}\n            <!-- svelte-ignore a11y-click-events-have-key-events -->\n            <span\n                class=\"sg-task-button {model.buttonClasses}\"\n                on:click={onClick}\n                role=\"button\"\n                tabindex=\"0\"\n            >\n                {@html model.buttonHtml}\n            </span>\n        {/if}\n    </div>\n\n    {#if model.labelBottom}\n        <span class=\"sg-label-bottom\">{model.labelBottom}</span>\n    {/if}\n</div>\n\n<style>\n    .sg-label-bottom {\n        position: absolute;\n        top: calc(100% + 10px);\n        color: #888;\n    }\n\n    .sg-task {\n        position: absolute;\n        border-radius: 2px;\n\n        white-space: nowrap;\n        /* overflow: hidden; */\n\n        transition:\n            background-color 0.2s,\n            opacity 0.2s;\n        pointer-events: all;\n        /* disable mobile pan/zoom on drag */\n        touch-action: none;\n    }\n\n    .sg-task-background {\n        position: absolute;\n        height: 100%;\n        top: 0;\n    }\n\n    .sg-task-content {\n        position: absolute;\n        height: 100%;\n        top: 0;\n\n        padding-left: 14px;\n        font-size: 14px;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        user-select: none;\n    }\n\n    .sg-task.animating:not(.moving),\n    .sg-task--sticky:not(.moving) {\n        transition:\n            left 0.2s,\n            top 0.2s,\n            transform 0.2s,\n            background-color 0.2s,\n            width 0.2s,\n            height 0.2s;\n    }\n\n    .sg-task--sticky > .sg-task-content {\n        position: sticky;\n        left: 0;\n        max-width: 100px;\n    }\n\n    .sg-task.moving {\n        z-index: 10000;\n        opacity: 0.5;\n    }\n\n    .sg-task.resize-enabled:hover::before,\n    .sg-task.resize-enabled:hover::after {\n        content: '';\n        width: 4px;\n        height: 50%;\n        top: 25%;\n        position: absolute;\n        border-style: solid;\n        border-color: var(--sg-task-resize-color);\n        cursor: ew-resize;\n        border-width: 0 1px;\n        z-index: 1;\n    }\n\n    .sg-task.resize-enabled:hover::before {\n        margin-left: 3px;\n        left: 0;\n    }\n\n    .sg-task.resize-enabled:hover::after {\n        margin-right: 3px;\n        right: 0;\n    }\n\n    .sg-task-reflected {\n        opacity: 0.5;\n    }\n\n    .sg-task-instant {\n        width: 2px !important;\n        margin-left: -1px;\n    }\n\n    .sg-task-background {\n        background: rgba(0, 0, 0, 0.2);\n    }\n\n    :global(.sg-task-default) {\n        color: white;\n        background: rgb(116, 191, 255);\n    }\n\n    :global(.sg-task-default:hover) {\n        background: rgb(98, 161, 216);\n    }\n\n    :global(.sg-task-default.selected) {\n        background: rgb(69, 112, 150);\n    }\n\n    :global(.sg-task-selected) {\n        outline: 2px solid var(--sg-task-selected-outline-color);\n        outline-offset: 3px;\n        z-index: 1;\n    }\n\n    .sg-milestone {\n        /* height: 20px; */\n        width: 20px !important;\n        min-width: 40px;\n        margin-left: -20px;\n    }\n\n    .sg-task.sg-milestone {\n        background: transparent;\n    }\n\n    .sg-milestone .sg-milestone__diamond {\n        position: relative;\n    }\n\n    .sg-milestone .sg-milestone__diamond:before {\n        position: absolute;\n        top: 0;\n        left: 50%;\n        content: ' ';\n        height: 28px;\n        width: 28px;\n        transform-origin: 0 0;\n        transform: rotate(45deg);\n    }\n\n    :global(.sg-milestone__diamond:before) {\n        background: rgb(116, 191, 255);\n    }\n</style>\n", "<script lang=\"ts\">\n    import { normalizeClassAttr } from '../utils/dom';\n    import type { SvelteRow } from '../core/row';\n    import { getContext } from 'svelte';\n    export let row: SvelteRow;\n    const { hoveredRow, selectedRow } = getContext('gantt');\n\n    $: classes = normalizeClassAttr(row.model.classes);\n</script>\n\n<div\n    class=\"sg-row {classes}\"\n    data-row-id={row.model.id}\n    class:sg-hover={$hoveredRow == row.model.id}\n    class:sg-selected={$selectedRow == row.model.id}\n    style=\"height:{row.height}px\"\n>\n    {#if row.model.contentHtml}\n        {@html row.model.contentHtml}\n    {/if}\n</div>\n\n<style>\n    .sg-row {\n        position: relative;\n        width: 100%;\n        box-sizing: border-box;\n    }\n</style>\n", "<script lang=\"ts\">\n    import { normalizeClassAttr } from '../utils/dom';\n\n    export let model;\n    export let left;\n    export let width;\n    export let resizing = false;\n\n    $: classes = normalizeClassAttr(model.classes);\n</script>\n\n<div\n    class=\"sg-time-range {classes}\"\n    class:moving={resizing}\n    style=\"width:{width}px;left:{left}px\"\n>\n    {#if model.label}\n        <div class=\"sg-time-range-label\">{model.label}</div>\n    {/if}\n</div>\n\n<style>\n    .sg-time-range {\n        height: 100%;\n        position: absolute;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        background-image: linear-gradient(\n            -45deg,\n            transparent 46%,\n            #e03218 49%,\n            #e03218 51%,\n            transparent 55%\n        );\n        background-size: 6px 6px !important;\n        font-weight: 400;\n    }\n\n    .sg-time-range-label {\n        margin-top: 10px;\n        background: #fff;\n        color: red;\n        white-space: nowrap;\n        padding: 4px;\n        font-weight: 400;\n        font-size: 10px;\n    }\n</style>\n", null, null, "<script lang=\"ts\">\n    import { setContext } from 'svelte';\n    import { writable } from 'svelte/store';\n    import type { DragChange, DragContext, Position, State } from './DragContext';\n    import type { DownDropEvent } from './draggable';\n    import { createEventDispatcher } from \"svelte\";\n    import { getContext } from 'svelte';\n    import type { SvelteTask } from '../task';\n    import type { SvelteRow } from '../row';\n    import { scrollIfOutOfBounds, setCursor, getRowAtPoint } from '../../utils/dom';\n    import { isDraggable, isResizable } from '../../utils/utils';\n\n    type RootState = Partial<{\n        xDelta: number;\n        yDelta: number;\n        width: number;\n        bWidth: number;\n        widthDelta: number;\n    }> & State;\n\n    export let items: { [taskId: PropertyKey]: RootState; } = {};\n\n    let _taskIds: PropertyKey[] = [];\n    const _active = writable(false);\n    const root = writable<{ [taskId: PropertyKey]: RootState; }>({});\n\n\n    $: $root = items;\n\n    const { taskStore, rowStore } = getContext('dataStore');\n    const gantt = getContext('gantt');\n    const { rowPadding } = getContext('options');\n    const { api, utils, columnService, selectionManager } = getContext('services');\n\n    const dispatcher = createEventDispatcher<{ \n        change: {  changes: DragChange[]; }; \n        itemsChange: { items: { [taskId: PropertyKey]: RootState; }; };\n    }>();\n    \n    const selectedTasks = selectionManager._selectedTasks;\n\n    const context: DragContext = {\n        rootState: root,\n        dragAllowed({ model }: SvelteTask) {\n            const row = $rowStore.entities[model.resourceId];\n            return row && isDraggable(row.model) && isDraggable(model);\n        },\n        resizeAllowed({ model }: SvelteTask) {\n            const row = $rowStore.entities[model.resourceId];\n            return model.type !== 'milestone' && row && isResizable(row.model) && isResizable(model);\n        },\n        off(taskId) {\n            delete $root[taskId];\n        },\n        save(start: { x: number; y: number; width: number; }, task, event: DownDropEvent) {\n            // triggers onmousedown\n            setCursor(event.dragging ? 'move' : 'e-resize');\n            const { mouseEvent } = event;\n            let tasks: SvelteTask[] = [task];\n            if (mouseEvent.ctrlKey) {\n                for (const [taskId, isSelected] of Object.entries($selectedTasks)) {\n                    if (isSelected && taskId !== String(task.model.id)) {\n                        tasks.push($taskStore.entities[taskId]);\n                    }\n                }\n            }\n\n            _taskIds = [];\n            for (const task of tasks) {\n                _taskIds.push(task.model.id);\n                $root[task.model.id] = {\n                    xDelta: task.left - start.x,\n                    yDelta: task.top - start.y,\n                    width: task.width,\n                    bWidth: start.width,\n                    widthDelta: task.width - start.width,\n                };\n            }\n            dispatcher('itemsChange', { items: $root });\n        },\n        dropAll(event) {\n            if (!event.dragging && !event.resizing) {\n                return;\n            }\n            $_active = false;\n            const changes: DragChange[] = [];\n            for (const taskId of _taskIds) {\n                const state = $root[taskId];\n                const task = $taskStore.entities[taskId];\n                const isTarget = task.model.id === taskId;\n                const change = onDropSingle({\n                    ...event,\n                    mouseEvent: {\n                        ...event.mouseEvent,\n                        clientX: event.mouseEvent.clientX + state.xDelta,\n                        clientY: event.mouseEvent.clientY + state.yDelta,\n                    },\n                    x: event.x + state.xDelta,\n                    y: event.y + state.yDelta,\n                    width: Math.abs((isTarget ? event.width : state.bWidth) + state.widthDelta),\n                } as DownDropEvent, task);\n                changes.push({\n                    valid: change.valid,\n                    task: change.task,\n                    targetRow: change.targetRow,\n                    sourceRow: change.sourceRow,\n                    current: change.current,\n                    previous: change.previous,\n                });\n            }\n\n            dispatcher('change', { changes });\n            $root = {};\n            _taskIds = [];\n            dispatcher('itemsChange', { items: $root });\n        },\n        moveAll({ x, y, width, event }: { x?: number; y?: number; width?: number; event: PointerEvent }, task: SvelteTask, state: State) {\n\n            scrollIfOutOfBounds(event, gantt.mainContainer);\n\n            if (state.dragging) {\n                api.tasks.raise.move(task.model);\n            }\n            if (state.resizing) {\n                api.tasks.raise.resize(task.model);\n            }\n            for (const taskId of _taskIds) {\n                // somehow update tasks to (event.x + xDelta, event.y + yDelta)\n                const rootState = $root[taskId];\n                const isTarget = task.model.id === taskId;\n                const event = {\n                    x: x != null ? x + rootState.xDelta : null,\n                    y: y != null ? y + rootState.yDelta : null,\n                    width: width != null ? Math.abs((isTarget ? width : rootState.bWidth) + rootState.widthDelta) : null, // pos.width + (width - pos.bWidth) // wDelta\n                };\n                $root[taskId] = {\n                    ...$root[taskId],\n                    ...state,\n                    x: event.x,\n                    y: event.y,\n                    width: event.width ?? $root[taskId]?.width,\n                };\n            }\n        },\n        setState(task: SvelteTask, state: State) {\n            $root[task.model.id] = {\n                ...$root[task.model.id],\n                ...state,\n            };\n        },\n        mouseUp({ model }: SvelteTask) {\n            setCursor('default');\n            api.tasks.raise.moveEnd(model);\n        }\n    };\n    \n    // honestly keep state in context provider.\n    function setState(state: State, id: PropertyKey) {\n        $root[id] = {\n            ...$root[id],\n            ...state,\n        };\n    }\n\n    function onDropSingle(event: DownDropEvent, task: SvelteTask) {\n        //row switching\n        const model = task.model;\n        const sourceRow = $rowStore.entities[model.resourceId];\n        let targetRow: SvelteRow;\n        if (event.dragging) {\n            const rowId = getRowAtPoint(event.mouseEvent);\n            const row = $rowStore.entities[rowId];\n            if (row && isDraggable(row.model)) {\n                targetRow = row;\n            }\n            // target row can be null\n        } else {\n            // dont know about this\n            targetRow = $rowStore.entities[model.resourceId];\n        }\n\n        setState({\n            dragging: false,\n            resizing: false,\n        }, model.id);\n\n        setTimeout(() => { // because we want to block delegated clicks on gantt after dragging\n            // sets state after it has been cleared, also resulting in a wierd render\n            setState({\n                ignoreClick: false,\n            }, model.id);\n        });\n\n        const newFrom = utils.roundTo(columnService.getDateByPosition(event.x));\n        const newTo = utils.roundTo(columnService.getDateByPosition(event.x + event.width));\n        const newLeft = columnService.getPositionByDate(newFrom) | 0;\n        const newRight = columnService.getPositionByDate(newTo) | 0;\n\n        const left = newLeft;\n        const width = newRight - newLeft;\n        const top = $rowPadding + (targetRow?.y ?? 0);\n        // get value of top from the layout\n\n\n        const current: Position = {\n            left,\n            top,\n            width,\n            from: newFrom,\n            to: newTo,\n        } \n        const previous: Position = {\n            left: task.left,\n            width: task.width,\n            top: task.top,\n            from: model.from,\n            to: model.to,\n        }\n\n        return {\n            valid: true,\n            task,\n            current,\n            previous,\n            dragging: event.dragging,\n            resizing: event.resizing,\n            sourceRow,\n            targetRow,\n        };\n    }\n\n    setContext('drag', context);\n</script>\n\n<slot {context}></slot>\n", "<script lang=\"ts\">\n    import { getContext } from \"svelte\";\n    import type { SvelteTask } from \"../task\";\n    import { createDraggable } from \"./draggable\";\n    import { scrollIfOutOfBounds } from \"../../utils/dom\";\n    import { onDestroy } from \"svelte\";\n\n    export let task: SvelteTask;\n\n    let _x: number;\n    let _y: number;\n    let _width: number;\n\n    const { rowContainer, mainContainer } = getContext('gantt');\n    const { resizeHandleWidth } = getContext('options');\n    const context = getContext('drag');\n\n    const root = context.rootState;\n\n    $: state = $root[task.model.id];\n    $: _dragging = state?.dragging ?? false;\n    $: _resizing = state?.resizing ?? false;\n    $: _ignoreClick = state?.ignoreClick ?? false;\n    $: _state = {\n        x: _x,\n        y: _y,\n        width: _width,\n        dragging: _dragging,\n        resizing: _resizing,\n    }\n\n    $: {\n        if (_dragging || _resizing) {\n            _x = state?.x ?? task.left;\n            _y = state?.y ?? task.top;\n            _width = state?.width ?? task.width;\n        } else {\n            _x = task.left;\n            _y = task.top;\n            _width = task.width;\n        }\n    }\n\n    export const dragAllowed: (task: SvelteTask) => boolean = null;\n    export const resizeAllowed: (task: SvelteTask) => boolean = null;\n\n    const onPointerDown = createDraggable({\n        container: rowContainer,\n        resizeHandleWidth,\n        getX: () => _x,\n        getY: () => _y,\n        getWidth: () => _width,\n        dragAllowed() {\n            const fn = dragAllowed ?? context.dragAllowed ?? (() => true);\n            return fn(task);\n        },\n        resizeAllowed() {\n            const fn = resizeAllowed ?? context.resizeAllowed ?? (() => true);\n            return fn(task);\n        },\n        onDown(event) {\n            context.save(event, task, event);\n        },\n        onMouseUp() {\n            context.mouseUp(task);\n        },\n        onResize(event) {\n            context.moveAll(event, task, {\n                x: event.x,\n                y: event.width,\n                resizing: true,\n                ignoreClick: true,\n            });\n        },\n        onDrag(event) {\n            context.moveAll(event, task, {\n                x: event.x,\n                y: event.y,\n                dragging: true,\n                ignoreClick: true,\n            });\n            scrollIfOutOfBounds(event.event, mainContainer);\n        },\n        onDrop(event) {\n            context.dropAll(event);\n        }\n    });\n\n    onDestroy(() => {\n        context.off(task.model.id);\n    });\n</script>\n\n\n<slot state={_state} onPointerDown={onPointerDown}/>", "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n    import { useDraggable } from '../core/drag';\n    import { normalizeClassAttr } from '../utils/dom';\n    import { isResizable } from '../utils/utils';\n\n    const { rowContainer } = getContext('gantt');\n    const { api, utils, columnService } = getContext('services');\n    const { resizeHandleWidth } = getContext('options');\n    const { timeRangeStore } = getContext('dataStore');\n\n    export let model;\n    export let width;\n    export let left;\n\n    const _position = {\n        width,\n        x: left\n    };\n    $: {\n        (_position.x = left), (_position.width = width);\n    }\n\n    function drag(node) {\n        const ondrop = event => {\n            const newFrom = utils.roundTo(columnService.getDateByPosition(event.x));\n            const newTo = utils.roundTo(columnService.getDateByPosition(event.x + event.width));\n            const newLeft = columnService.getPositionByDate(newFrom);\n            const newRight = columnService.getPositionByDate(newTo);\n\n            Object.assign(model, {\n                from: newFrom,\n                to: newTo\n            });\n\n            update({\n                left: newLeft,\n                width: newRight - newLeft,\n                model,\n                resizing: false\n            });\n            api.timeranges.raise.changed({ model, left: event.x, width: event.width });\n\n            window.removeEventListener('pointermove', onmousemove, false);\n        };\n\n        function update(state) {\n            timeRangeStore.update(state);\n            _position.x = state.left;\n            _position.width = state.width;\n        }\n\n        const draggable = useDraggable(node, {\n            onDown: event => {\n                api.timeranges.raise.clicked({ model });\n                update({\n                    left: event.x,\n                    width: event.width,\n                    model,\n                    resizing: true\n                });\n            },\n            onResize: event => {\n                api.timeranges.raise.resized({ model, left: event.x, width: event.width });\n                update({\n                    left: event.x,\n                    width: event.width,\n                    model,\n                    resizing: true\n                });\n            },\n            dragAllowed: false,\n            resizeAllowed: () => isResizable(model),\n            onDrop: ondrop,\n            container: rowContainer,\n            resizeHandleWidth,\n            getX: () => _position.x,\n            getY: () => 0,\n            getWidth: () => _position.width\n        });\n\n        return { destroy: () => draggable.destroy() };\n    }\n\n    let classes;\n    $: {\n        classes = normalizeClassAttr(model.classes);\n    }\n</script>\n\n<div\n    class=\"sg-time-range-control {classes}\"\n    style=\"width:{_position.width}px;left:{_position.x}px\"\n    class:sg-time-range-disabled={!isResizable(model)}\n>\n    <div class=\"sg-time-range-handle-left\" use:drag></div>\n    <div class=\"sg-time-range-handle-right\" use:drag></div>\n</div>\n\n<style>\n    .sg-time-range-control {\n        position: absolute;\n    }\n\n    .sg-time-range-handle-left {\n        position: absolute;\n        left: 0;\n    }\n\n    .sg-time-range-handle-right {\n        position: absolute;\n        right: 0;\n    }\n\n    .sg-time-range-disabled {\n        display: none;\n    }\n\n    .sg-time-range-handle-left::before,\n    .sg-time-range-handle-right::before {\n        position: absolute;\n        content: '';\n        bottom: 4px;\n        border-radius: 6px 6px 6px 0;\n        border: 2px solid #b0b0b7;\n        width: 9px;\n        height: 9px;\n        transform: translateX(-50%) rotate(-45deg);\n        background-color: #fff;\n\n        border-color: #e03218;\n        cursor: ew-resize;\n    }\n</style>\n", null, "<script lang=\"ts\">\n    import { createEventDispatcher, getContext } from 'svelte';\n    const dispatch = createEventDispatcher();\n\n    import { getAllPeriods } from '../utils/date';\n    import { getPositionByDate } from '../utils/utils';\n    import { whenEnterPress } from '../utils/dom';\n\n    const { from, to, width } = getContext('dimensions');\n    const { dateAdapter } = getContext('options');\n\n    export let header;\n\n    export let ganttBodyColumns;\n    export let ganttBodyUnit;\n\n    $: {\n        if (header.unit === ganttBodyUnit) {\n            header.columns = ganttBodyColumns.map(column => ({\n                ...column,\n                label: dateAdapter.format(column.from, header.format)\n            }));\n        } else {\n            const periods = getAllPeriods($from.valueOf(), $to.valueOf(), header.unit, header.offset);\n            let distance_point = 0;\n            let left = 0;\n\n            header.columns = periods.map(period => {\n                left = distance_point;\n                distance_point = getPositionByDate(\n                    period.to,\n                    $from.valueOf(),\n                    $to.valueOf(),\n                    $width\n                );\n                return {\n                    width: Math.min(distance_point - left, $width),\n                    label: dateAdapter.format(period.from, header.format),\n                    from: period.from,\n                    to: period.to,\n                    left: left\n                };\n            });\n        }\n    }\n\n    function onHeaderClick(_header) {\n        dispatch('dateSelected', { from: _header.from, to: _header.to, unit: header.unit });\n    }\n</script>\n\n<div class=\"column-header-row\">\n    {#each header.columns as _header}\n        <div\n            class=\"column-header-cell\"\n            role=\"button\"\n            tabindex=\"0\"\n            class:sticky={header.sticky}\n            style=\"left:{_header.left}px;width:{_header.width}px\"\n            on:click={() => onHeaderClick(_header)}\n            on:keydown={whenEnterPress(() => onHeaderClick(_header))}\n        >\n            <div class=\"column-header-cell-label\">{_header.label || 'N/A'}</div>\n        </div>\n    {/each}\n</div>\n\n<style>\n    .column-header-row {\n        position: relative;\n\n        white-space: nowrap;\n        height: 32px;\n    }\n\n    .column-header-cell {\n        position: absolute;\n\n        height: 100%;\n        box-sizing: border-box;\n        text-overflow: clip;\n        text-align: center;\n\n        display: inline-flex;\n\n        justify-content: center;\n        align-items: center;\n\n        font-size: 1em;\n        font-size: 14px;\n        font-weight: 300;\n        transition: background 0.2s;\n\n        cursor: pointer;\n        user-select: none;\n\n        border-right: var(--sg-column-header-border-color) 1px solid;\n        border-bottom: var(--sg-column-header-border-color) 1px solid;\n    }\n\n    .column-header-cell:hover {\n        background: var(--sg-column-header-bg-hover);\n    }\n\n    .column-header-cell.sticky > .column-header-cell-label {\n        position: sticky;\n        left: 1rem;\n    }\n</style>\n", "<script lang=\"ts\">\n    import ColumnHeaderRow from './ColumnHeaderRow.svelte';\n\n    /**\n     * Container component for header rows\n     */\n    export let headers;\n    export let ganttBodyColumns;\n    export let ganttBodyUnit;\n</script>\n\n{#each headers as header}\n    <ColumnHeaderRow {header} {ganttBodyColumns} {ganttBodyUnit} on:dateSelected />\n{/each}\n", null, "<script lang=\"ts\">\n    import { createBackground } from './canvas';\n\n    /**\n     * Container component for columns rendered as gantt body background\n     */\n    export let columns;\n\n    export let useCanvasColumns = true;\n    export let columnStrokeWidth;\n    export let columnStrokeColor;\n    export let columnDefaultColor = '#ffffff';\n\n    let backgroundImage;\n    $: {\n        // TODO: background repeats and so do columns so passing every element is not needed, but line alignment issues occur on later rows\n        // TODO: I used to make column widths and positions whole numbers, now they contain decimals again, check if this is because of that\n        backgroundImage = createBackground(columns, {\n            // columns.slice(0,5)\n            columnStrokeColor,\n            columnStrokeWidth\n        });\n    }\n</script>\n\n{#if useCanvasColumns}\n    <div class=\"sg-columns sg-columns--background\" style:background-image={backgroundImage}></div>\n{:else}\n    <div class=\"sg-columns\">\n        {#each columns as column}\n            <div\n                class=\"sg-column\"\n                style=\"\n                border-right: {column.bgHighlightColor\n                    ? 0\n                    : columnStrokeWidth}px solid {column.bgHighlightColor || columnStrokeColor};\n                left: {column.left}px;\n                width: {column.width}px;\n                background-color: {column.bgHighlightColor || columnDefaultColor};\"\n            ></div>\n        {/each}\n    </div>\n{/if}\n\n<style>\n    .sg-columns {\n        position: absolute;\n        height: 100%;\n        width: 100%;\n        /* BUG: column borders are not showing correctly when width is very small */\n    }\n\n    .sg-columns--background {\n        overflow: hidden;\n        background-repeat: repeat;\n        background-position-x: -1px;\n    }\n\n    .sg-column {\n        position: absolute;\n        height: 100%;\n        width: 100%;\n        box-sizing: border-box;\n    }\n</style>\n", "<script>\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    import { useDraggable } from '../core/drag';\n    import { setCursor } from '../utils/dom';\n\n    export let x;\n    export let container;\n\n    let dragging = false;\n    const dragOptions = {\n        onDrag: event => {\n            (x = event.x), (dragging = true);\n            dispatch('resize', { left: x });\n            setCursor('col-resize');\n        },\n        onDrop: event => {\n            (x = event.x), (dragging = false);\n            dispatch('resize', { left: x });\n            setCursor('default');\n        },\n        dragAllowed: true,\n        resizeAllowed: false,\n        container: container,\n        getX: () => x,\n        getY: () => 0,\n        getWidth: () => 0\n    };\n\n    $: dragOptions.container = container;\n\n    function resizer(node) {\n        const draggable = useDraggable(node, dragOptions, 'resizer');\n\n        return { destroy: () => draggable.destroy() };\n    }\n</script>\n\n<div class=\"sg-resize\" style=\"left:{x}px\" use:resizer></div>\n\n<style>\n    .sg-resize {\n        z-index: 2;\n        background: var(--sg-resize-color);\n        width: 5px;\n        cursor: col-resize;\n        position: absolute;\n        height: 100%;\n\n        transition:\n            width 0.2s,\n            transform 0.2s;\n    }\n\n    .sg-resize:hover {\n        transform: translateX(-2px);\n        width: 10px;\n    }\n</style>\n", null, null, null, null, null, null, null, null, null, null, "<script lang=\"ts\">\n    import { onMount, setContext, tick, onDestroy } from 'svelte';\n    import { writable, derived } from 'svelte/store';\n\n    let ganttElement: HTMLElement;\n    let mainHeaderContainer: HTMLElement;\n    let mainContainer;\n    let rowContainer: HTMLElement;\n    let scrollables = [];\n    let mounted = false;\n\n    import { createDataStore } from './core/store';\n    import { Task, Row, TimeRange, TimeRangeHeader } from './entities';\n    import { Columns, ColumnHeader } from './column';\n    import { Resizer } from './ui';\n\n    import { createUtils, getIndicesOnly, getPositionByDate } from './utils/utils';\n    import { getRelativePos, isLeftClick } from './utils/dom';\n    import { provideGanttApi } from './core/api';\n    import { createTaskFactory } from './core/task';\n    import type { SvelteTask, TaskModel } from './core/task';\n    import { collapseRow, expandRow, createRows } from './core/row';\n    import type { RowModel, SvelteRow } from './core/row';\n    import { TimeRangeFactory } from './core/timeRange';\n    import { DraggableGroup } from './core/drag';\n    import { SelectionManager } from './core/selectionManager';\n    import { createColumnService } from './core/column';\n    import type { HighlightedDurations, Column as IColumn } from './core/column';\n    import { createDelegatedEventDispatcher } from './core/events';\n    import { getDuration, getAllPeriods } from './utils/date';\n    import { DefaultSvelteGanttDateAdapter } from './utils/defaultDateAdapter';\n    import type { SvelteGanttDateAdapter } from './utils/date';\n    import * as layouts from './core/layouts';\n    import { useCreateTask } from './modules/create-tasks';\n    import type { MoveEvent } from './modules/create-tasks';\n    import type { GanttContext, Header, InvalidatePositionOptions } from './gantt';\n    import Draggable from './core/drag/Draggable.svelte';\n    import type { DragChange, State as DraggingState } from './core/drag/DragContext';\n\n    function assertSet(values) {\n        for (const name in values) {\n            if (values[name] == null) {\n                throw new Error(`\"${name}\" is not set`);\n            }\n        }\n    }\n\n    /**\n     * Rows to load in the gantt\n     */\n    export let rows: RowModel[];\n    /**\n     * Tasks that display in the gantt\n     */\n    export let tasks: TaskModel[] = [];\n    /**\n     * Timeranges that display in the gantt\n     */\n    export let timeRanges = [];\n\n    assertSet({ rows });\n    $: if (mounted) initRows(rows);\n    $: if (mounted) initTasks(tasks);\n    $: if (mounted) initTimeRanges(timeRanges);\n\n    /** top and bottom padding of a single row in px */\n    export let rowPadding = 6;\n    /** height of a single row in px */\n    export let rowHeight = 52;\n    const _rowHeight = writable(rowHeight);\n    const _rowPadding = writable(rowPadding);\n    $: $_rowHeight = rowHeight;\n    $: $_rowPadding = rowPadding;\n\n    function toDateNum(date: number | Date) {\n        return date instanceof Date ? date.valueOf() : date;\n    }\n\n    /** datetime timeline starts on, date */\n    export let from;\n    /** datetime timeline ends on, date */\n    export let to;\n    assertSet({ from, to });\n    const _from = writable(toDateNum(from));\n    const _to = writable(toDateNum(to));\n    $: $_from = toDateNum(from);\n    $: $_to = toDateNum(to);\n\n    /** Minimum width of main gantt area in px */\n    export let minWidth = 800;\n    /** should timeline stretch width to fit */\n    export let fitWidth = false;\n    const _minWidth = writable(minWidth);\n    const _fitWidth = writable(fitWidth);\n    $: {\n        $_minWidth = minWidth;\n        $_fitWidth = fitWidth;\n    }\n\n    /** sets top level gantt class which can be used for styling */\n    export let classes: string | string[] = [];\n    /**\n     * list of headers used for main gantt area\n     *  - unit: time unit used, e.g. day will create a cell in the header for each day in the timeline\n     *  - format: datetime format used for header cell label\n     **/\n    export let headers: Header[] = [\n        { unit: 'day', format: 'MMMM Do' },\n        { unit: 'hour', format: 'H:mm' }\n    ];\n    /**\n     * List of zoom levels for gantt. Gantt cycles trough these parameters on ctrl+scroll.\n     */\n    export let zoomLevels = [\n        {\n            headers: [\n                { unit: 'day', format: 'DD.MM.YYYY' },\n                { unit: 'hour', format: 'HH' }\n            ],\n            minWidth: 800,\n            fitWidth: true\n        },\n        {\n            headers: [\n                { unit: 'hour', format: 'ddd D/M, H A' },\n                { unit: 'minute', format: 'mm', offset: 15 }\n            ],\n            minWidth: 5000,\n            fitWidth: false\n        }\n    ];\n    /** task content factory function, e.g. (task) => '<div>Custom task content</div>'  */\n    export let taskContent = null;\n    /**\n     * Width of table, used with SvelteGanttTable module\n     */\n    export let tableWidth = 240;\n    /** width of handle for resizing task */\n    export let resizeHandleWidth = 10;\n    /** handler of button clicks, e.g. (task) => {debugger}, */\n    export let onTaskButtonClick = null;\n\n    export let dateAdapter: SvelteGanttDateAdapter = new DefaultSvelteGanttDateAdapter();\n\n    /** minimum unit of time task date values will round to */\n    export let magnetUnit = 'minute';\n    /** amount of units task date values will round to */\n    export let magnetOffset = 15;\n    let magnetDuration: number;\n    $: setMagnetDuration(magnetUnit, magnetOffset);\n    setMagnetDuration(magnetUnit, magnetOffset);\n\n    function setMagnetDuration(unit, offset) {\n        if (unit && offset) {\n            magnetDuration = getDuration(unit, offset);\n        }\n    }\n\n    /** duration unit of columns */\n    export let columnUnit = 'minute';\n    /** duration width of column */\n    export let columnOffset = 15;\n\n    // export until Svelte3 implements Svelte2's setup(component) hook\n    export let ganttTableModules = [];\n    export let ganttBodyModules = [];\n    /**\n     * When task is assigned to a child row display them on parent rows as well, used when rows are disabled as a tree.\n     */\n    export let reflectOnParentRows = true;\n    /**\n     * When task is assigned to a parent row display them on child rows as well, used when rows are disabled as a tree.\n     */\n    export let reflectOnChildRows = false;\n\n    /**\n     * Render columns in a canvas, results in a better performance.\n     * Set to false if advanced CSS styling is needed.\n     **/\n    export let useCanvasColumns = true;\n    /** color of strokes seperating the columns in ganttbody */\n    export let columnStrokeColor = '#efefef';\n    /** width of strokes seperating the columns in ganttbody */\n    export let columnStrokeWidth = 1;\n    /** \n     * object including a unit and fractions of that unit that should be highlighted eg. {unit: 'days', fractions: [0,6]} -> will highlight weekends.\n     * highlighting will only work correctly if highlighted unit is the same or a constant fraction of the column unit eg. days, hours, minutes in the above.\n     */\n    export let highlightedDurations: HighlightedDurations = undefined;\n    export let highlightColor = '#6eb859';\n\n    /** Allows working with the actual DOM node */\n    export let taskElementHook = null;\n\n    /** Controls how the tasks will render */\n    export let layout: 'overlap' | 'pack' | 'expand' = 'overlap';\n    const _layout = writable(layout);\n    $: $_layout = layout;\n\n    const visibleWidth = writable<number>(null);\n    const visibleHeight = writable<number>(null);\n    const headerHeight = writable<number>(null);\n    const _width = derived([visibleWidth, _minWidth, _fitWidth], ([visible, min, stretch]) => {\n        return stretch && visible > min ? visible : min;\n    });\n\n    const dataStore = createDataStore();\n    setContext('dataStore', dataStore);\n    const {\n        rowStore,\n        taskStore,\n        timeRangeStore,\n        allTasks,\n        allRows,\n        allTimeRanges,\n        rowTaskCache\n    } = dataStore;\n\n    export const columnService = createColumnService({\n        get columns() { return columns },\n        get magnetDuration() { return magnetDuration },\n    });\n\n    let disableTransition = false;\n\n    async function tickWithoutCSSTransition() {\n        disableTransition = true;\n        await tick();\n        ganttElement.offsetHeight; // force a reflow\n        disableTransition = false;\n    }\n\n    let columns: IColumn[];\n    $: {\n        columns = getColumnsV2($_from, $_to, columnUnit, columnOffset, $_width);\n        tickWithoutCSSTransition();\n        refreshTimeRanges();\n        refreshTasks();\n    }\n\n    function getColumnsV2(\n        from: number | Date,\n        to: number | Date,\n        unit: string,\n        offset: number,\n        width: number\n    ): IColumn[] {\n        //BUG: Function is running twice on init, how to prevent it?\n\n        if (from instanceof Date) from = from.valueOf();\n        if (to instanceof Date) to = to.valueOf();\n\n        let cols = [];\n        const periods = getAllPeriods(\n            from.valueOf(),\n            to.valueOf(),\n            unit,\n            offset,\n            highlightedDurations\n        );\n        let left = 0;\n        let distance_point = 0;\n        periods.forEach(function (period) {\n            left = distance_point;\n            distance_point = getPositionByDate(period.to, $_from, $_to, $_width);\n            cols.push({\n                width: distance_point - left,\n                from: period.from,\n                to: period.to,\n                left: left,\n                duration: period.duration,\n                ...(period.isHighlighted && { bgHighlightColor: highlightColor })\n            });\n        });\n        return cols;\n    }\n\n    let offsetWidth: number;\n    let offsetHeight: number;\n    let bottomScrollbarVisible = writable(offsetHeight - $visibleHeight);\n    let rightScrollbarVisible = writable(offsetWidth - $visibleWidth);\n    $: $bottomScrollbarVisible = offsetHeight - $visibleHeight;\n    $: $rightScrollbarVisible = offsetWidth - $visibleWidth;\n\n    setContext('dimensions', {\n        from: _from,\n        to: _to,\n        width: _width,\n        visibleWidth,\n        visibleHeight,\n        headerHeight,\n        bottomScrollbarVisible,\n        rightScrollbarVisible,\n    });\n\n    setContext('options', {\n        dateAdapter,\n        taskElementHook,\n        taskContent,\n        rowPadding: _rowPadding,\n        rowHeight: _rowHeight,\n        layout: _layout,\n        resizeHandleWidth: resizeHandleWidth,\n        reflectOnParentRows,\n        reflectOnChildRows,\n        onTaskButtonClick\n    });\n\n    const hoveredRow = writable<number | string>(null);\n    const selectedRow = writable<number | string>(null);\n\n    const ganttContext: GanttContext = {\n        rowContainer: null,\n        mainContainer: null,\n        mainHeaderContainer: null,\n        scrollables,\n        hoveredRow,\n        selectedRow,\n        updateLayout,\n        expandRow(row) {\n            expandRow(row);\n            updateLayout();\n        },\n        collapseRow(row) {\n            collapseRow(row);\n            updateLayout();\n        },\n        invalidatePosition,\n    };\n    setContext('gantt', ganttContext);\n\n    let invalidatedTasks: { [taskId: PropertyKey]: boolean; } = {};\n    let invalidatedRows: { [rowId: PropertyKey]: boolean; } = {};\n    let invalidateFull = true;\n    function invalidatePosition({ task, row }: InvalidatePositionOptions) {\n        if (row) {\n            invalidatedRows[row.model.id] = true;\n            invalidateFull = false;\n        }\n        if (task) {\n            invalidatedTasks[task.model.id] = true;\n            invalidatedRows[task.model.resourceId] = true;\n            invalidateFull = false;\n        }\n    }\n\n    onMount(() => {\n        Object.assign(ganttContext, {\n            rowContainer,\n            mainContainer,\n            mainHeaderContainer\n        });\n        mounted = true;\n    });\n\n    const { onDelegatedEvent, offDelegatedEvent, onEvent } = createDelegatedEventDispatcher();\n\n    onDelegatedEvent('click', 'data-task-id', (event, data, target) => {\n        const taskId = data;\n        const task = $taskStore.entities[taskId];\n        if (isLeftClick(event) && !target.classList.contains('sg-task-reflected') && !target.classList.contains('sg-ignore-click')) {\n            if (event.ctrlKey) {\n                selectionManager.toggleSelection(taskId);\n            } else {\n                selectionManager.selectSingle(taskId);\n            }\n        }\n        api['tasks'].raise.select(task);\n    });\n\n    onDelegatedEvent('pointerover', 'data-row-id', (event, data, target) => {\n        $hoveredRow = data;\n    });\n\n    onDelegatedEvent('click', 'data-row-id', (event, data, target) => {\n        selectionManager.unSelectTasks();\n        if ($selectedRow == data) {\n            $selectedRow = null;\n            return;\n        }\n        $selectedRow = data;\n    });\n\n    onDelegatedEvent('dblclick', 'data-task-id', (event, data, target) => {\n        const taskId = data;\n        api['tasks'].raise.dblclicked($taskStore.entities[taskId], event);\n    });\n\n    onDelegatedEvent('pointerleave', 'empty', (event, data, target) => {\n        $hoveredRow = null;\n    });\n\n    onDestroy(() => {\n        offDelegatedEvent('click', 'data-task-id');\n        offDelegatedEvent('click', 'data-row-id');\n        offDelegatedEvent('dblclick', 'data-task-id');\n\n        selectionManager.unSelectTasks();\n    });\n\n    let __scrollTop = 0;\n    let __scrollLeft = 0;\n    function scrollable(node) {\n        const onscroll = event => {\n            const { scrollTop, scrollLeft } = node;\n\n            scrollables.forEach(scrollable => {\n                if (scrollable.orientation === 'horizontal') {\n                    scrollable.node.scrollLeft = scrollLeft;\n                } else {\n                    scrollable.node.scrollTop = scrollTop;\n                }\n            });\n\n            __scrollTop = scrollTop;\n            __scrollLeft = scrollLeft;\n        };\n\n        node.addEventListener('scroll', onscroll);\n        return {\n            destroy() {\n                node.removeEventListener('scroll', onscroll, false);\n            }\n        };\n    }\n\n    function horizontalScrollListener(node) {\n        scrollables.push({ node, orientation: 'horizontal' });\n    }\n\n    function onResize(event) {\n        tableWidth = event.detail.left;\n    }\n\n    let zoomLevel = 0;\n    let zooming = false;\n    async function onwheel(event: WheelEvent) {\n        if (event.ctrlKey) {\n            event.preventDefault();\n\n            const prevZoomLevel = zoomLevel;\n            if (event.deltaY > 0) {\n                zoomLevel = Math.max(zoomLevel - 1, 0);\n            } else {\n                zoomLevel = Math.min(zoomLevel + 1, zoomLevels.length - 1);\n            }\n\n            if (prevZoomLevel != zoomLevel && zoomLevels[zoomLevel]) {\n                const options = {\n                    columnUnit: columnUnit,\n                    columnOffset: columnOffset,\n                    minWidth: $_minWidth,\n                    ...zoomLevels[zoomLevel]\n                };\n\n                const scale = options.minWidth / $_width;\n                const node = mainContainer;\n                const mousepos = getRelativePos(node, event);\n                const before = node.scrollLeft + mousepos.x;\n                const after = before * scale;\n                const scrollLeft = after - mousepos.x + node.clientWidth / 2;\n\n                columnUnit = options.columnUnit;\n                columnOffset = options.columnOffset;\n                $_minWidth = options.minWidth;\n\n                if (options.headers) headers = options.headers;\n\n                if (options.fitWidth) $_fitWidth = options.fitWidth;\n\n                api['gantt'].raise.viewChanged();\n                zooming = true;\n                await tick();\n                node.scrollLeft = scrollLeft;\n                zooming = false;\n            }\n        }\n    }\n\n    function onDateSelected(event) {\n        $_from = event.detail.from;\n        $_to = event.detail.to;\n        api['gantt'].raise.dateSelected({ from: $_from, to: $_to });\n    }\n\n    function initRows(rowsData) {\n        //Bug: Running twice on change options\n        const rows = createRows(rowsData, { rowHeight });\n        rowStore.addAll(rows);\n        updateLayout();\n    }\n\n    const { createTask, reflectTask } = createTaskFactory({\n        get rowEntities() { return $rowStore.entities; },\n        get rowPadding() { return rowPadding },\n        getPositionByDate: (date) => columnService.getPositionByDate(date),\n    });\n\n    async function initTasks(taskData: TaskModel[]) {\n        const tasks = [];\n        for (const taskModel of taskData) {\n            if (!draggingTasks[taskModel.id]) {\n                delete draggingTasks[taskModel.id];\n            }\n            const task = createTask(taskModel);\n            tasks.push(task);\n        }\n        taskStore.addAll(tasks);\n        updateLayout();\n    }\n\n    let _reflectedTasksCache: { [rowId: PropertyKey]: SvelteTask[] } = {};\n    $: {\n        _reflectedTasksCache = {};\n        for (const task of $allTasks) {\n            const row = $rowStore.entities[task.model.resourceId];\n            if (!row) {\n                continue;\n            }\n\n            if (reflectOnChildRows && row.allChildren) {\n                row.allChildren.forEach(r => {\n                    const reflectedTask = reflectTask(task, r);\n                    if (!_reflectedTasksCache[r.model.id]) {\n                        _reflectedTasksCache[r.model.id] = [];\n                    }\n                    _reflectedTasksCache[r.model.id].push(reflectedTask);\n                });\n            }\n\n            if (reflectOnParentRows && row.allParents) {\n                row.allParents.forEach(r => {\n                    const reflectedTask = reflectTask(task, r);\n                    if (!_reflectedTasksCache[r.model.id]) {\n                        _reflectedTasksCache[r.model.id] = [];\n                    }\n                    _reflectedTasksCache[r.model.id].push(reflectedTask);\n                });\n            }\n        }\n    }\n\n    function initTimeRanges(timeRangeData) {\n        const timeRanges = timeRangeData.map(timeRange => {\n            return timeRangeFactory.create(timeRange);\n        });\n        timeRangeStore.addAll(timeRanges);\n    }\n\n    export const api = provideGanttApi();\n    const selectionManager = new SelectionManager(taskStore);\n\n    export const timeRangeFactory = new TimeRangeFactory(columnService);\n\n    export const utils = createUtils({\n        get from() { return $_from },\n        get to() { return $_to },\n        get width() { return $_width },\n        get magnetOffset() { return  magnetOffset;},\n        get magnetUnit() { return magnetUnit;},\n        get magnetDuration() { return  magnetDuration;},\n        get dateAdapter() { return  dateAdapter;},\n    });\n\n    setContext('services', {\n        utils,\n        api,\n        selectionManager,\n        columnService,\n    });\n\n    export function refreshTimeRanges() {\n        timeRangeStore._update(({ ids, entities }) => {\n            ids.forEach(id => {\n                const timeRange = entities[id];\n                const newLeft = columnService.getPositionByDate(timeRange.model.from) | 0;\n                const newRight = columnService.getPositionByDate(timeRange.model.to) | 0;\n\n                timeRange.left = newLeft;\n                timeRange.width = newRight - newLeft;\n            });\n            return { ids, entities };\n        });\n    }\n\n    export function refreshTasks() {\n        $allTasks.forEach(task => {\n            const newLeft = columnService.getPositionByDate(task.model.from) | 0;\n            const newRight = columnService.getPositionByDate(task.model.to) | 0;\n\n            task.left = newLeft;\n            task.width = newRight - newLeft;\n        });\n        taskStore.refresh();\n    }\n\n    export function getRowContainer(): HTMLElement {\n        return rowContainer;\n    }\n\n    export function selectTask(id) {\n        const task = $taskStore.entities[id];\n        if (task) {\n            selectionManager.selectSingle(id);\n        }\n    }\n\n    export function unselectTasks() {\n        selectionManager.unSelectTasks();\n    }\n\n    export function scrollToRow(id, scrollBehavior = 'auto') {\n        const { scrollTop, clientHeight } = mainContainer;\n        const row = $rowStore.entities[id];\n        if (!row) {\n            return;\n        }\n        const targetTop = row.y;\n\n        if (targetTop < scrollTop) {\n            mainContainer.scrollTo({\n                top: targetTop,\n                behavior: scrollBehavior\n            });\n        }\n\n        if (targetTop > scrollTop + clientHeight) {\n            mainContainer.scrollTo({\n                top: targetTop + row.height - clientHeight,\n                behavior: scrollBehavior\n            });\n        }\n    }\n\n    export function scrollToTask(id, scrollBehavior = 'auto') {\n        const { scrollLeft, scrollTop, clientWidth, clientHeight } = mainContainer;\n\n        const task = $taskStore.entities[id];\n        if (!task) return;\n        const row = $rowStore.entities[task.model.resourceId];\n        if (!row) return;\n        const targetLeft = task.left;\n        const targetTop = row.y;\n\n        const options = {\n            top: undefined,\n            left: undefined,\n            behavior: scrollBehavior\n        };\n\n        if (targetLeft < scrollLeft) {\n            options.left = targetLeft;\n        }\n\n        if (targetLeft > scrollLeft + clientWidth) {\n            options.left = targetLeft + task.width - clientWidth;\n        }\n\n        if (targetTop < scrollTop) {\n            options.top = targetTop;\n        }\n\n        if (targetTop > scrollTop + clientHeight) {\n            options.top = targetTop + row.height - clientHeight;\n        }\n\n        mainContainer.scrollTo(options);\n    }\n\n    export function updateTask(model: TaskModel) {\n        const task = createTask(model);\n        taskStore.upsert(task);\n        invalidatePosition({ task });\n        updateLayoutSync();\n    }\n\n    export function updateTasks(models: TaskModel[]) {\n        const tasks = models.map(model => createTask(model));\n        taskStore.upsertAll(tasks);\n        tasks.forEach(task => invalidatePosition({ task }));\n        updateLayoutSync();\n    }\n\n    export function removeTask(taskId: PropertyKey) {\n        const task = $taskStore.entities[taskId];\n        if (!task) {\n            return;\n        }\n        taskStore.delete(taskId);\n\n        const row = $rowStore.entities[task.model.resourceId];\n        if (!row) {\n            return;\n        }\n        invalidatePosition({ row });\n        updateLayoutSync();\n    }\n\n    export function removeTasks(taskIds: PropertyKey[]) {\n        for (const taskId of taskIds) {\n            const task = $taskStore.entities[taskId];\n            if (!task) {\n                continue;\n            }\n\n            const row = $rowStore.entities[task.model.resourceId];\n            if (!row) {\n                continue;\n            }\n            invalidatePosition({ row });\n        }\n\n        taskStore.deleteAll(taskIds);\n        updateLayoutSync();\n    }\n\n    export function updateRow(model: RowModel) {\n        const row = createRows([model], { rowHeight });\n        rowStore.upsertAll(row);\n        updateLayout();\n        updateLayoutSync();\n    }\n\n    export function updateRows(models: RowModel[]) {\n        const rows = createRows(models, { rowHeight });\n        rowStore.upsertAll(rows);\n        updateLayout();\n        updateLayoutSync();\n    }\n\n    export function getRow(resourceId: PropertyKey): SvelteRow {\n        return $rowStore.entities[resourceId];\n    }\n\n    export function getTask(id) {\n        return $taskStore.entities[id];\n    }\n\n    export function getTasks(resourceId) {\n        if ($rowTaskCache[resourceId]) {\n            return $rowTaskCache[resourceId].map(id => $taskStore.entities[id]);\n        }\n        return null;\n    }\n\n    let filteredRows: SvelteRow[] = [];\n    let rowsAreOfSameHeight = true;\n    let rowContainerHeight = 0;\n    $: {\n        filteredRows = [];\n        rowContainerHeight = 0;\n        layoutChanged;\n        const firstRow = $allRows[0];\n        for (const row of $allRows) {\n            if (!row.hidden) {\n                filteredRows.push(row);\n\n                if (firstRow && firstRow.height !== row.height) {\n                    rowsAreOfSameHeight = false;\n                }\n\n                rowContainerHeight += row.height || rowHeight;\n            }\n        }\n    }\n\n    let startIndex;\n    $: {\n        if (rowsAreOfSameHeight) {\n            const rowHeight = rowContainerHeight / filteredRows.length;\n            startIndex = Math.floor(__scrollTop / rowHeight);\n        } else {\n            startIndex = getIndicesOnly(filteredRows, __scrollTop, row => row.y)[0];\n        }\n    }\n\n    let endIndex;\n    $: {\n        if (rowsAreOfSameHeight) {\n            endIndex = Math.min(startIndex + Math.ceil($visibleHeight / rowHeight), filteredRows.length - 1);\n        } else {\n            endIndex = getIndicesOnly(filteredRows, __scrollTop + $visibleHeight, row => row.y)[0];\n        }\n    }\n\n    let paddingTop = 0;\n    $: {\n        paddingTop = filteredRows[startIndex] ? filteredRows[startIndex].y : 0;\n    }\n\n    let visibleRows = [];\n    $: visibleRows = filteredRows.slice(startIndex, endIndex + 1);\n\n    let visibleTasks: SvelteTask[]; // try to keep the same order in the array as before\n    let previousOrder: { [id: PropertyKey]: number; } = {};\n    $: {\n        const tasks: SvelteTask[] = [];\n        const rendered: { [id: PropertyKey]: boolean } = {};\n\n        const tasksOrdered: SvelteTask[] = [];\n        const order: { [id: PropertyKey]: number; } = {};\n        // because svelte detaches html elements when their order changes (even when keyed)\n        // this helps CSS transitions\n        let ordered = true;\n        let ordinal = 0;\n        function tryRestorePosition(task: SvelteTask) {\n            if (!task) return;\n            tasks.push(task);\n            const id = task.model.id;\n            if (previousOrder[id] != null) {\n                tasksOrdered[previousOrder[id]] = task;\n            } else {\n                ordered = false;\n            }\n\n            order[id] = ordinal++;\n        }\n\n        for (let i = 0; i < visibleRows.length; i++) {\n            const row = visibleRows[i];\n            if ($rowTaskCache[row.model.id]) {\n                for (let j = 0; j < $rowTaskCache[row.model.id].length; j++) {\n                    const id = $rowTaskCache[row.model.id][j];\n                    rendered[id] = true;\n                    tryRestorePosition($taskStore.entities[id]);\n                }\n            }\n\n            if (_reflectedTasksCache[row.model.id]) {\n                for (const task of _reflectedTasksCache[row.model.id]) {\n                    tryRestorePosition(task);\n                }\n            }\n        }\n        \n        // render all tasks being dragged if not already\n        for (const id in draggingTasks) {\n            if (!rendered[id]) {\n                rendered[id] = true;\n                tryRestorePosition($taskStore.entities[id]);\n            }\n        }\n\n        if (tasksOrdered.length !== tasks.length) {\n            ordered = false;\n        }\n\n        previousOrder = ordered ? previousOrder : order;\n        visibleTasks = ordered ? tasksOrdered : tasks;\n    }\n\n    let layoutChanged = {};\n    let refreshLayout = {};\n    /** apply layouts */\n    $: {\n        refreshLayout;\n\n        const params: layouts.LayoutParams = {\n            taskStore: $taskStore,\n            rowStore: $rowStore,\n            rowTasks: $rowTaskCache,\n            rowHeight,\n            rowPadding,\n            rowReflectedTasks: _reflectedTasksCache,\n            invalidatedRows,\n            invalidatedTasks,\n            invalidateFull,\n        };\n\n        if (layout === 'overlap') {\n            layouts.overlap(params);\n        }\n\n        if (layout === 'pack') {\n            layouts.pack(params);\n        }\n\n        if (layout === 'expand') {\n            layouts.expand(params);\n        }\n\n        layoutChanged = {};\n        invalidateFull = false;\n        invalidatedTasks = {};\n        invalidatedRows = {};\n    }\n\n    $: {\n        layout;\n        tasks;\n        rows;\n        updateLayout();\n    }\n\n    export function updateLayoutSync(_invalidateFull?: boolean) {\n        const params: layouts.LayoutParams = {\n            taskStore: $taskStore,\n            rowStore: $rowStore,\n            rowTasks: $rowTaskCache,\n            rowHeight,\n            rowPadding,\n            rowReflectedTasks: _reflectedTasksCache,\n            invalidatedRows,\n            invalidatedTasks,\n            invalidateFull: _invalidateFull ?? invalidateFull,\n        };\n\n        if (layout === 'overlap') {\n            layouts.overlap(params);\n        }\n\n        if (layout === 'pack') {\n            layouts.pack(params);\n        }\n\n        if (layout === 'expand') {\n            layouts.expand(params);\n        }\n\n        layoutChanged = {};\n        invalidateFull = false;\n        invalidatedTasks = {};\n        invalidatedRows = {};\n    }\n\n    export function updateLayout() {\n        refreshLayout = {};\n        invalidateFull = true;\n    }\n\n    /** enable create task by dragging */\n    export let enableCreateTask = false;\n    export let onCreateTask = (e: { from: number; to: number; resourceId: PropertyKey; }) => {\n        const id: any = `creating-task-${(Math.random() + 1).toString(36).substring(2, 7)}`;\n        return ({\n            id,\n            label: ' ',\n            ...e,\n        }) as TaskModel;\n    }\n    export let onCreatedTask = (task: SvelteTask) => {};\n\n    let draggingTasks: { [taskId: PropertyKey]: DraggingState; } = {};\n    let _creatingTask: SvelteTask = null;\n    function onCreateTaskMove({ from, to, x, width, y }: MoveEvent) {\n        if (!_creatingTask) {\n            // TODO:: incorrect for collapsible rows, if creating under one\n            const row = $allRows.find(row => row.y < y && y < row.y + row.height);\n            const resourceId = row.model.id;\n            _creatingTask = createTask(onCreateTask({\n                resourceId,\n                from,\n                to,\n            }));\n            taskStore.upsert(_creatingTask);\n            draggingTasks[_creatingTask.model.id] = {\n                x: _creatingTask.left,\n                y: _creatingTask.top,\n                width: _creatingTask.width,\n                resizing: true,\n            }\n        }\n\n        draggingTasks[_creatingTask.model.id].x = x;\n        draggingTasks[_creatingTask.model.id].width = width;\n    }\n\n    function onCreateTaskEnd({ from, to, x, width }: MoveEvent) {\n        _creatingTask.model.from = from;\n        _creatingTask.model.to = to;\n        _creatingTask.left = x;\n        _creatingTask.width = width;\n        taskStore.upsert(_creatingTask);\n        delete draggingTasks[_creatingTask.model.id];\n        onCreatedTask(_creatingTask);\n        _creatingTask = null;\n    }\n\n    const dragCreateTasks = useCreateTask();\n\n    function onChange(e: CustomEvent<{ changes: DragChange[] }>) {\n        if (e.detail.changes.some(c => !c.targetRow)) {\n            return;\n        }\n        for (const change of e.detail.changes) {\n            const { task, current, previous, sourceRow, targetRow } = change;\n            if (!targetRow) {\n                continue;\n            }\n            const model = task.model;\n            \n            if (targetRow) {\n                api.tasks.raise.switchRow(task, targetRow, sourceRow);\n            }\n\n            const changed = previous.from != current.from || previous.to != current.to || (sourceRow && sourceRow.model.id !== targetRow.model.id);\n            if (changed) {\n                model.from = current.from;\n                model.to = current.to;\n                model.resourceId = targetRow.model.id;\n                const newTask: SvelteTask = {\n                    ...task,\n                    left: current.left,\n                    top: current.top,\n                    width: current.width,\n                };\n\n                api.tasks.raise.change({ task: newTask, sourceRow, targetRow, previousState: previous });\n                api.tasks.raise.changed({ task: newTask, sourceRow, targetRow, previousState: previous });\n                taskStore.update(newTask);\n                invalidatePosition({ row: sourceRow });\n                invalidatePosition({ task: newTask });\n            }\n        }\n    }\n\n    function onItemsChange(e: CustomEvent<{ items: { [taskId: PropertyKey]: DraggingState } }>) {\n        draggingTasks = { ...e.detail.items };\n    }\n</script>\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<div\n    class=\"sg-gantt {classes}\"\n    class:sg-disable-transition={disableTransition}\n    bind:this={ganttElement}\n    on:pointerdown|stopPropagation={onEvent}\n    on:click|stopPropagation={onEvent}\n    on:dblclick={onEvent}\n    on:pointerover={onEvent}\n    on:pointerleave={onEvent}\n>\n    {#each ganttTableModules as module}\n        <svelte:component\n            this={module}\n            {rowContainerHeight}\n            {paddingTop}\n            {tableWidth}\n            {...$$restProps}\n            {visibleRows}\n        />\n\n        <Resizer x={tableWidth} on:resize={onResize} container={ganttElement}></Resizer>\n    {/each}\n\n    <div class=\"sg-timeline sg-view\">\n        <div class=\"sg-header\" bind:this={mainHeaderContainer} bind:clientHeight={$headerHeight} style={`padding-right: ${$rightScrollbarVisible}px;`}>\n            <div class=\"sg-header-scroller\" use:horizontalScrollListener>\n                <div class=\"header-container\" style=\"width:{$_width}px\">\n                    <ColumnHeader\n                        {headers}\n                        ganttBodyColumns={columns}\n                        ganttBodyUnit={columnUnit}\n                        on:dateSelected={onDateSelected}\n                    />\n                    {#each $allTimeRanges as timeRange (timeRange.model.id)}\n                        <TimeRangeHeader {...timeRange} />\n                    {/each}\n                </div>\n            </div>\n        </div>\n\n        <div\n            class=\"sg-timeline-body\"\n            bind:this={mainContainer}\n            use:scrollable\n            class:zooming\n            on:wheel={onwheel}\n            bind:clientHeight={$visibleHeight}\n            bind:offsetHeight={offsetHeight}\n            bind:clientWidth={$visibleWidth}\n            bind:offsetWidth={offsetWidth}\n            use:dragCreateTasks={{ container: rowContainer, enabled: enableCreateTask, onMove: onCreateTaskMove, onEnd: onCreateTaskEnd, boundsContainer: mainContainer }}\n        >\n            <div class=\"content\" style=\"width:{$_width}px\">\n                <Columns {columns} {columnStrokeColor} {columnStrokeWidth} {useCanvasColumns} />\n\n                <div\n                    class=\"sg-rows\"\n                    bind:this={rowContainer}\n                    style=\"height:{rowContainerHeight}px;\"\n                >\n                    <div style=\"transform: translateY({paddingTop}px);\">\n                        {#each visibleRows as row (row.model.id)}\n                            <Row {row} />\n                        {/each}\n                    </div>\n                </div>\n\n                <div class=\"sg-foreground\">\n                    {#each $allTimeRanges as timeRange (timeRange.model.id)}\n                        <TimeRange {...timeRange} />\n                    {/each}\n\n                    <DraggableGroup items={draggingTasks} on:change={onChange} on:itemsChange={onItemsChange}>\n                        {#each visibleTasks as task (task.model.id)}\n                            <Draggable {task} let:state let:onPointerDown>\n                                <Task\n                                    {...task}\n                                    model={task.model}\n                                    left={state.x}\n                                    top={state.y}\n                                    width={state.width}\n                                    height={task.height}\n                                    dragging={state.dragging}\n                                    resizing={state.resizing}\n                                    on:pointerdown={onPointerDown}\n                                />\n                            </Draggable>\n                        {/each}\n                    </DraggableGroup>\n                </div>\n                {#each ganttBodyModules as module}\n                    <svelte:component\n                        this={module}\n                        {paddingTop}\n                        {visibleRows}\n                        {...$$restProps}\n                    />\n                {/each}\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    :global(.sg-gantt) {\n        --sg-column-header-bg-hover: #f9f9f9;\n        --sg-column-border-color: #efefef;\n        --sg-column-header-border-color: #efefef;\n        --sg-table-cell-border-color: #efefef;\n        --sg-table-header-cell-border-color: #efefef;\n        --sg-table-header-cell-bg: #fbfbfb;\n        --sg-resize-color: #e9eaeb;\n        --sg-dependency-arrow-color: #64748b;\n        --sg-task-resize-color: rgba(255, 255, 255, 0.5);\n        --sg-task-selected-outline-color: rgba(3, 169, 244, 0.5);\n/* \n        --sg-column-header-bg-hover: #333;\n        --sg-column-border-color: #333;\n        --sg-column-header-border-color: #333;\n        --sg-table-cell-border-color: #333;\n        --sg-table-header-cell-border-color: #333;\n        --sg-table-header-cell-bg: #333;\n        --sg-resize-color: #333;\n        --sg-dependency-arrow-color: red;\n        --sg-task-resize-color: #ccc; */\n    }\n\n    .sg-disable-transition :global(.sg-task),\n    .sg-disable-transition :global(.sg-milestone) {\n        transition:\n            transform 0s,\n            background-color 0.2s,\n            width 0s !important;\n    }\n\n    :global(.sg-view:not(:first-child)) {\n        margin-left: 5px;\n    }\n\n    .sg-timeline {\n        flex: 1 1 0%;\n        display: flex;\n        flex-direction: column;\n        overflow-x: auto;\n    }\n\n    .sg-gantt {\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n        position: relative;\n    }\n\n    .sg-foreground {\n        box-sizing: border-box;\n        overflow: hidden;\n        top: 0;\n        left: 0;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n        pointer-events: none;\n    }\n\n    .sg-rows {\n        width: 100%;\n        box-sizing: border-box;\n        overflow: hidden;\n    }\n\n    .sg-timeline-body {\n        overflow: auto;\n        flex: 1 1 auto;\n    }\n\n    .sg-header-scroller {\n        /* border-right: 1px solid #efefef; // replace with element, or conditionally draw this border */\n        overflow: hidden;\n        position: relative;\n    }\n\n    .content {\n        position: relative;\n    }\n\n    :global(*) {\n        box-sizing: border-box;\n    }\n</style>\n", "<script lang=\"ts\">\n    import { whenEnterPress } from '../../utils/dom';\n    import type { SvelteRow } from '../../core/row';\n\n    import { createEventDispatcher } from 'svelte';\n\n    export let row: SvelteRow;\n    export let expandIconHtml: string = null;\n    export let collapseIconHtml: string = null;\n\n    const dispatch = createEventDispatcher();\n\n    function onExpandToggle() {\n        if (row.model.expanded || row.model.expanded == null) {\n            dispatch('rowCollapsed', { row });\n        } else {\n            dispatch('rowExpanded', { row });\n        }\n    }\n</script>\n\n<div class=\"sg-cell-inner\" style=\"padding-left: {row.childLevel * 3}em\">\n    {#if row.children}\n        <div\n            class=\"sg-tree-expander\"\n            role=\"button\"\n            tabindex=\"0\"\n            on:click={onExpandToggle}\n            on:keydown={whenEnterPress(onExpandToggle)}\n        >\n            {#if row.model.expanded}\n                {#if expandIconHtml}\n                    {@html expandIconHtml}\n                {:else}\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"sg-tree-icon\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m19.5 8.25-7.5 7.5-7.5-7.5\" />\n                    </svg>\n                {/if}\n            {:else}\n                {#if collapseIconHtml}\n                    {@html collapseIconHtml}\n                {:else}\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"sg-tree-icon\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m8.25 4.5 7.5 7.5-7.5 7.5\" />\n                    </svg>\n                {/if}\n            {/if}\n        </div>\n    {/if}\n    <slot />\n</div>\n\n<style>\n    .sg-tree-expander {\n        cursor: pointer;\n        min-width: 1.4em;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .sg-cell-inner {\n        display: flex;\n    }\n\n    .sg-tree-icon {\n        width: 1rem;\n        height: 1rem;\n    }\n</style>\n", "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n\n    import TableTreeCell from './TableTreeCell.svelte';\n    import type { TableHeader } from './tableHeader';\n    import type { SvelteRow } from '../../core/row';\n    import { normalizeClassAttr } from '../../utils/dom';\n\n    export let headers: TableHeader[] = null;\n    export let row: SvelteRow = null;\n\n    const { hoveredRow, selectedRow } = getContext('gantt');\n\n    let treeIndentationStyle = '';\n    $: {\n        treeIndentationStyle = row.parent ? `padding-left: ${row.childLevel * 3}em;` : '';\n    }\n\n    $: classes = normalizeClassAttr(row.model.classes)\n</script>\n\n<div\n    data-row-id={row.model.id}\n    style=\"height:{row.height}px\"\n    class=\"sg-table-row {classes} sg-table-row-level-{row.childLevel}\"\n    class:sg-row-expanded={row.model.expanded}\n    class:sg-hover={$hoveredRow == row.model.id}\n    class:sg-selected={$selectedRow == row.model.id}\n>\n    {#each headers as header}\n        <div class=\"sg-table-body-cell sg-table-cell\" style=\"width:{header.width}px\">\n            {#if header.type == 'tree'}\n                <TableTreeCell on:rowCollapsed on:rowExpanded {row}>\n                    {#if row.model.iconClass}\n                        <div class=\"sg-table-icon\">\n                            <i class={row.model.iconClass}></i>\n                        </div>\n                    {/if}\n\n                    {#if row.model.headerHtml}\n                        {@html row.model.headerHtml}\n                    {:else if header.renderer}\n                        {@html header.renderer(row)}\n                    {:else}\n                        {row.model[header.property]}\n                    {/if}\n                </TableTreeCell>\n            {:else}\n                {#if row.model.iconClass}\n                    <div class=\"sg-table-icon\">\n                        <i class={row.model.iconClass}></i>\n                    </div>\n                {/if}\n\n                {#if row.model.headerHtml}\n                    {@html row.model.headerHtml}\n                {:else if header.renderer}\n                    {@html header.renderer(row)}\n                {:else if header.type === 'resourceInfo'}\n                    <img class=\"sg-resource-image\" src={row.model.imageSrc} alt=\"\" />\n                    <div class=\"sg-resource-title\">\n                        {row.model[header.property]}\n                    </div>\n                {:else}\n                    {row.model[header.property]}\n                {/if}\n            {/if}\n        </div>\n    {/each}\n</div>\n\n<style>\n    .sg-table-row {\n        display: inline-flex;\n        min-width: 100%;\n        align-items: stretch;\n\n        position: relative;\n\n        font-weight: 400;\n        font-size: 14px;  \n        transition: height 0.2s;\n    }\n\n    .sg-table-cell {\n        border-right: 1px solid var(--sg-table-cell-border-color);\n    }\n\n    .sg-table-cell:last-child {\n        border-right: 0;\n    }\n\n    .sg-table-body-cell {\n        border-bottom: 1px solid var(--sg-table-cell-border-color);\n        font-weight: bold;\n    }\n\n    .sg-table-row:last-child > .sg-table-body-cell {\n        border-bottom: 0;\n    }\n\n    .sg-resource-image {\n        width: 2.4em;\n        height: 2.4em;\n        border-radius: 50%;\n        margin-right: 0.6em;\n\n        background: #047c69;\n    }\n\n    .sg-resource-info {\n        flex: 1;\n        height: 100%;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n    }\n\n    .sg-table-icon {\n        margin-right: 0.5em;\n    }\n</style>\n", "<script context=\"module\">\n    export const type = 'table';\n</script>\n\n<script lang=\"ts\">\n    import { createEventDispatcher, onMount, getContext } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    import TableRow from './TableRow.svelte';\n    import type { GanttDataStore } from '../../core/store';\n    import type { TableHeader } from './tableHeader';\n    import type { SvelteRow } from '../../core/row';\n\n    export let tableWidth;\n    export let paddingTop;\n    export let rowContainerHeight;\n    export let visibleRows: SvelteRow[];\n    // list of columns used in the table\n    // title: label to display in the header\n    // property: property of row to display in the cell\n    // width: width of column\n    export let tableHeaders: TableHeader[] = [{ title: 'Name', property: 'label', width: 100 }];\n\n    const { headerHeight, bottomScrollbarVisible } = getContext('dimensions');\n    const { rowPadding, rowHeight } = getContext('options');\n    const { rowStore, taskStore } = getContext('dataStore');\n    const { scrollables, updateLayout } = getContext('gantt');\n\n    onMount(() => {\n        dispatch('init', { module: this });\n    });\n\n    let headerContainer;\n    function scrollListener(node) {\n        scrollables.push({ node, orientation: 'vertical' });\n\n        function onScroll(event) {\n            headerContainer.scrollLeft = node.scrollLeft;\n        }\n\n        node.addEventListener('scroll', onScroll);\n\n        return {\n            destroy() {\n                node.removeEventListener('scroll', onScroll);\n            }\n        };\n    }\n\n    let scrollWidth;\n    $: {\n        let sum = 0;\n        tableHeaders.forEach(header => {\n            sum += header.width;\n        });\n        scrollWidth = sum;\n    }\n\n    function onRowExpanded(event) {\n        const row = event.detail.row as SvelteRow;\n        row.model.expanded = true;\n        if (row.children) show(row.children);\n        updateLayout();\n    }\n\n    function onRowCollapsed(event) {\n        const row = event.detail.row as SvelteRow;\n        row.model.expanded = false;\n        if (row.children) hide(row.children);\n        updateLayout();\n    }\n\n    function hide(children: SvelteRow[]) {\n        for (const row of children) {\n            if (row.children) hide(row.children);\n            row.hidden = true;\n        }\n    }\n\n    function show(children: SvelteRow[], hidden = false) {\n        for (const row of children) {\n            if (row.children) show(row.children, !row.model.expanded);\n            row.hidden = hidden;\n        }\n    }\n</script>\n\n<div class=\"sg-table sg-view\" style=\"width:{tableWidth}px;\">\n    <div class=\"sg-table-header\" style=\"height:{$headerHeight}px\" bind:this={headerContainer}>\n        {#each tableHeaders as header}\n            <div class=\"sg-table-header-cell sg-table-cell\" style=\"width:{header.width}px\">\n                {header.title}\n            </div>\n        {/each}\n    </div>\n\n    <div class=\"sg-table-body\" style={`padding-bottom: ${$bottomScrollbarVisible}px;`}>\n        <div class=\"sg-table-scroller\" use:scrollListener>\n            <div\n                class=\"sg-table-rows\"\n                style=\"padding-top:{paddingTop}px;height:{rowContainerHeight}px;\"\n            >\n                {#each visibleRows as row}\n                    <TableRow\n                        {row}\n                        headers={tableHeaders}\n                        on:rowExpanded={onRowExpanded}\n                        on:rowCollapsed={onRowCollapsed}\n                    />\n                {/each}\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    .sg-table {\n        overflow-x: auto;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .sg-table-scroller {\n        width: 100%;\n        /* border-bottom: 1px solid #efefef; // instead of padding-bottom use an element (with borders) */\n        overflow-y: hidden;\n    }\n\n    .sg-table-header {\n        display: flex;\n        align-items: stretch;\n        overflow: hidden;\n        border-bottom: 1px solid var(--sg-table-header-cell-border-color);\n        background: var(--sg-table-header-cell-bg);\n    }\n\n    .sg-table-body {\n        display: flex;\n        flex: 1 1 0;\n        width: 100%;\n        overflow-y: hidden;\n    }\n\n    .sg-table-header-cell {\n        font-size: 14px;\n        font-weight: 400;\n    }\n\n    :global(.sg-table-cell) {\n        white-space: nowrap;\n        overflow: hidden;\n\n        display: flex;\n        align-items: center;\n        flex-shrink: 0;\n\n        padding: 0 0.5em;\n        height: 100%;\n    }\n\n    :global(.sg-table-cell:last-child) {\n        flex-grow: 1;\n    }\n</style>\n", "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n    const { rowStore, taskStore } = getContext('dataStore');\n\n    export let id;\n    export let fromId;\n    export let toId;\n    export let stroke: string = undefined;\n    export let strokeWidth: number = undefined;\n\n    const MIN_LEN = 12;\n    const ARROW_SIZE = 5;\n\n    let arrowPath;\n    let path;\n\n    let fromTask;\n    let isFromRowHidden;\n    let toTask;\n    let isToRowHidden;\n\n    $: {\n        fromTask = $taskStore.entities[fromId];\n        isFromRowHidden = $rowStore.entities[fromTask.model.resourceId].hidden;\n        toTask = $taskStore.entities[toId];\n        isToRowHidden = $rowStore.entities[toTask.model.resourceId].hidden;\n\n        let startY = fromTask.top + fromTask.height / 2;\n        let startX = fromTask.left + fromTask.width;\n        let endY = toTask.top + toTask.height / 2;\n        let endX = toTask.left;\n        let width = endX - startX;\n        let height = endY - startY;\n\n        if (isFromRowHidden) {\n            path = `M${endX} ${endY}`;\n            if (startX + MIN_LEN >= endX && startY != endY) {\n                path += `L ${endX + 1.5 - MIN_LEN} ${endY}`;\n            } else {\n                path += `L ${endX + 1.5 - width / 2} ${endY}`;\n            }\n            path += `m -2 -2 a 2 2 0 1 1 0 4 a 2 2 0 1 1 0 -4`;\n            arrowPath = `M${toTask.left - ARROW_SIZE}  ${\n                toTask.top + toTask.height / 2 - ARROW_SIZE\n            } \n                            L${toTask.left} ${toTask.top + toTask.height / 2} \n                            L${toTask.left - ARROW_SIZE} ${\n                                toTask.top + toTask.height / 2 + ARROW_SIZE\n                            } Z`;\n        } else if (isToRowHidden) {\n            path = `M${startX} ${startY}`;\n            if (startX + MIN_LEN >= endX && startY != endY) {\n                path += `L ${startX + 1.5 + MIN_LEN} ${startY}`;\n            } else {\n                path += `L ${startX + 1.5 + width / 2} ${startY}`;\n            }\n            path += `m -2 -2 a 2 2 0 1 1 0 4 a 2 2 0 1 1 0 -4`;\n            arrowPath = ``;\n        } else if (!isFromRowHidden && !isToRowHidden) {\n            path = `M${startX} ${startY}`;\n            if (startX + MIN_LEN >= endX && startY != endY) {\n                path += `L ${startX + MIN_LEN} ${startY} \n                            L ${startX + MIN_LEN} ${startY + height / 2}\n                            L ${endX - MIN_LEN} ${startY + height / 2}\n                            L ${endX - MIN_LEN} ${endY}\n                            L ${endX - 2} ${endY}`;\n            } else {\n                path += `L ${startX + width / 2} ${startY} \n                            L ${startX + width / 2} ${endY}\n                            L ${endX - 2} ${endY}`;\n            }\n            arrowPath = `M${toTask.left - ARROW_SIZE} ${\n                toTask.top + toTask.height / 2 - ARROW_SIZE\n            } \n                            L${toTask.left} ${toTask.top + toTask.height / 2} \n                            L${toTask.left - ARROW_SIZE} ${\n                                toTask.top + toTask.height / 2 + ARROW_SIZE\n                            } Z`;\n        }\n    }\n</script>\n\n{#if (!isFromRowHidden && !isToRowHidden) || isFromRowHidden !== isToRowHidden}\n    <div class=\"sg-dependency\" style=\"left:0;top:0\" data-dependency-id={id}>\n        <svg\n            class=\"sg-arrow\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            shape-rendering=\"crispEdges\"\n            height=\"100%\"\n            width=\"100%\"\n        >\n            <path class=\"sg-arrow-path select-area\" d={path} style:stroke={stroke} style:stroke-width={strokeWidth != null ? `${strokeWidth}px` : null} />\n            <path class=\"sg-arrow-head\" d={arrowPath} style:fill={stroke} />\n        </svg>\n    </div>\n{/if}\n\n<style>\n    .sg-dependency {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n    }\n\n    .sg-arrow {\n        position: absolute;\n        left: 0px;\n        pointer-events: none;\n    }\n\n    :global(path.sg-arrow-path) {\n        stroke: var(--sg-dependency-arrow-color);\n        fill: transparent;\n        stroke-width: 2px;\n    }\n\n    :global(.sg-arrow-head) {\n        fill: var(--sg-dependency-arrow-color);\n    }\n\n    .select-area {\n        pointer-events: visible;\n        position: absolute;\n    }\n</style>\n", "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n\n    import Dependency from './Dependency.svelte';\n\n    const { visibleHeight } = getContext('dimensions');\n    const { taskStore } = getContext('dataStore');\n\n    export let paddingTop;\n    export let dependencies = [];\n\n    let visibleDependencies = [];\n    $: {\n        const result = [];\n        for (let i = 0; i < dependencies.length; i++) {\n            const dependency = dependencies[i];\n            const map = $taskStore.entities;\n\n            const fromTask = map[dependency.fromId];\n            const toTask = map[dependency.toId];\n            if (\n                fromTask &&\n                toTask &&\n                Math.min(fromTask.top, toTask.top) <= paddingTop + $visibleHeight &&\n                Math.max(fromTask.top, toTask.top) >= paddingTop\n            ) {\n                result.push(dependency);\n            }\n        }\n        visibleDependencies = result;\n    }\n</script>\n\n<div class=\"dependency-container\">\n    {#each visibleDependencies as dependency (dependency.id)}\n        <Dependency {...dependency} />\n    {/each}\n</div>\n\n<style>\n    .dependency-container {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n\n        pointer-events: none;\n        top: 0;\n        float: left;\n        overflow: hidden;\n        z-index: 0;\n    }\n</style>\n", null, null],
  "mappings": "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",
  "names": ["element", "text", "crossorigin", "detach", "create_each_block", "insert", "update", "instance", "create_fragment", "subscribe", "run", "ctx", "create_if_block_5", "create_if_block_4", "create_if_block_2", "create_if_block_3", "create_if_block_1", "create_if_block", "model", "MIN_DRAG_X", "MIN_DRAG_Y", "task", "event", "show", "hide", "children", "attr", "expandRow", "from", "to", "scrollable", "rows", "createTask", "reflectTask", "tasks", "timeRanges", "layouts.overlap", "layouts.pack", "layouts.expand", "row", "rowHeight"]
}
